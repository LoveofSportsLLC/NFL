{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/matlab.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = matlab\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\nfunction matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword:\n      /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n",
      "start": 1702937444964,
      "end": 1702937444987,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444987,
      "end": 1702937444987,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444987,
      "end": 1702937444987,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444987,
      "end": 1702937444987,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444987,
      "end": 1702937444987,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444987,
      "end": 1702937444987,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444987,
      "end": 1702937444987,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444987,
      "end": 1702937444987,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444987,
      "end": 1702937444987,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444987,
      "end": 1702937444987,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444987,
      "end": 1702937444987,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar matlab_1;\nvar hasRequiredMatlab;\n\nfunction requireMatlab () {\n\tif (hasRequiredMatlab) return matlab_1;\n\thasRequiredMatlab = 1;\n\t'use strict'\n\n\tmatlab_1 = matlab\n\tmatlab.displayName = 'matlab'\n\tmatlab.aliases = []\n\tfunction matlab(Prism) {\n\t  Prism.languages.matlab = {\n\t    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n\t    string: {\n\t      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n\t      greedy: true\n\t    },\n\t    // FIXME We could handle imaginary numbers as a whole\n\t    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n\t    keyword:\n\t      /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n\t    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n\t    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n\t    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n\t  }\n\t}\n\treturn matlab_1;\n}\n\nexport { requireMatlab as __require };",
      "start": 1702937444987,
      "end": 1702937444988,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,SAAc,GAAG,MAAM;CACvB,MAAM,CAAC,WAAW,GAAG,QAAQ;CAC7B,MAAM,CAAC,OAAO,GAAG,EAAE;CACnB,SAAS,MAAM,CAAC,KAAK,EAAE;CACvB,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG;CAC3B,IAAI,OAAO,EAAE,CAAC,gBAAgB,EAAE,KAAK,CAAC;CACtC,IAAI,MAAM,EAAE;CACZ,MAAM,OAAO,EAAE,sBAAsB;CACrC,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL;CACA,IAAI,MAAM,EAAE,gEAAgE;CAC5E,IAAI,OAAO;CACX,MAAM,6HAA6H;CACnI,IAAI,QAAQ,EAAE,sBAAsB;CACpC,IAAI,QAAQ,EAAE,yCAAyC;CACvD,IAAI,WAAW,EAAE,sBAAsB;CACvC,GAAG;CACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937444988,
      "end": 1702937444988,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444988,
      "end": 1702937444988,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444988,
      "end": 1702937444988,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444988,
      "end": 1702937444988,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444988,
      "end": 1702937444988,
      "order": "normal"
    }
  ]
}
