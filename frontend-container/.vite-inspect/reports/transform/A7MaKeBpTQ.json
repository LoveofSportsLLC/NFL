{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/Row.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;",
      "start": 1702937441516,
      "end": 1702937441538,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441538,
      "end": 1702937441538,
      "order": "normal"
    }
  ]
}
