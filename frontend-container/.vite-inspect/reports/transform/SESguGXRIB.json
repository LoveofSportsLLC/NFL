{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/components/Settings.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Alert, Button } from \"react-bootstrap\";\r\n\r\nimport { Sliders, BookOpen } from \"react-feather\";\r\n\r\nimport {\r\n  SIDEBAR_POSITION,\r\n  SIDEBAR_BEHAVIOR,\r\n  LAYOUT,\r\n  THEME,\r\n} from \"../constants\";\r\nimport useOuterClick from \"../hooks/useOuterClick\";\r\nimport { useTheme } from \"../hooks/useTheme\";\r\nimport useSidebar from \"../hooks/useSidebar\";\r\nimport useLayout from \"../hooks/useLayout\";\r\n\r\nconst themeOptions = [\r\n  {\r\n    name: \"Default\",\r\n    value: THEME.DEFAULT,\r\n  },\r\n  {\r\n    name: \"Colored\",\r\n    value: THEME.COLORED,\r\n  },\r\n  {\r\n    name: \"Dark\",\r\n    value: THEME.DARK,\r\n  },\r\n  {\r\n    name: \"Light\",\r\n    value: THEME.LIGHT,\r\n  },\r\n];\r\n\r\nconst sidebarPositionOptions = [\r\n  {\r\n    name: \"Left\",\r\n    value: SIDEBAR_POSITION.LEFT,\r\n  },\r\n  {\r\n    name: \"Right\",\r\n    value: SIDEBAR_POSITION.RIGHT,\r\n  },\r\n];\r\n\r\nconst sidebarBehaviorOptions = [\r\n  {\r\n    name: \"Sticky\",\r\n    value: SIDEBAR_BEHAVIOR.STICKY,\r\n  },\r\n  {\r\n    name: \"Fixed\",\r\n    value: SIDEBAR_BEHAVIOR.FIXED,\r\n  },\r\n  {\r\n    name: \"Compact\",\r\n    value: SIDEBAR_BEHAVIOR.COMPACT,\r\n  },\r\n];\r\n\r\nconst layoutOptions = [\r\n  {\r\n    name: \"Fluid\",\r\n    value: LAYOUT.FLUID,\r\n  },\r\n  {\r\n    name: \"Boxed\",\r\n    value: LAYOUT.BOXED,\r\n  },\r\n];\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Settings = () => {\r\n  const query = useQuery();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const { theme, setTheme } = useTheme();\r\n  const { position, setPosition, behavior, setBehavior } = useSidebar();\r\n  const { layout, setLayout } = useLayout();\r\n\r\n  const innerRef = useOuterClick(() => {\r\n    setIsOpen(false);\r\n  });\r\n\r\n  const setSettingByQueryParam = (name, set) => {\r\n    const value = query.get(name);\r\n    if (value) {\r\n      set(value);\r\n    }\r\n  };\r\n\r\n  // Read from query parameter (e.g. ?theme=dark)\r\n  // only for demo purposes\r\n  useEffect(() => {\r\n    setSettingByQueryParam(\"theme\", setTheme);\r\n    setSettingByQueryParam(\"sidebarPosition\", setPosition);\r\n    setSettingByQueryParam(\"sidebarBehavior\", setBehavior);\r\n    setSettingByQueryParam(\"layout\", setLayout);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={innerRef}\r\n      className={`settings js-settings ${isOpen ? \"open\" : \"\"}`}\r\n    >\r\n      <div className=\"settings-toggle\">\r\n        <div\r\n          className=\"settings-toggle-option settings-toggle-option-text js-settings-toggle\"\r\n          title=\"Theme Builder\"\r\n          onClick={() => setIsOpen(true)}\r\n        >\r\n          <Sliders className=\"feather align-middle\" /> Builder\r\n        </div>\r\n        <a\r\n          className=\"settings-toggle-option\"\r\n          title=\"Documentation\"\r\n          href=\"/docs/introduction\"\r\n          target=\"_blank\"\r\n        >\r\n          <BookOpen className=\"feather align-middle\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"settings-panel\">\r\n        <div className=\"settings-content\">\r\n          <div className=\"settings-title d-flex align-items-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close float-right js-settings-toggle\"\r\n              aria-label=\"Close\"\r\n              onClick={() => setIsOpen(false)}\r\n            ></button>\r\n            <h4 className=\"mb-0 ms-2 d-inline-block\">Theme Builder</h4>\r\n          </div>\r\n          <div className=\"settings-body\">\r\n            <Alert variant=\"primary\">\r\n              <div className=\"alert-message\">\r\n                <strong>Hey there!</strong> Set your own customized style below.\r\n                Choose the ones that best fits your needs.\r\n              </div>\r\n            </Alert>\r\n\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Color scheme</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                The perfect color mode for your app.\r\n              </span>\r\n              <div className=\"row g-0 text-center mx-n1 mb-2\">\r\n                {themeOptions.map(({ name, value }) => (\r\n                  <div className=\"col-6\" key={value}>\r\n                    <label className=\"mx-1 d-block mb-1\">\r\n                      <input\r\n                        className=\"settings-scheme-label\"\r\n                        type=\"radio\"\r\n                        name=\"theme\"\r\n                        value={value}\r\n                        checked={theme === value}\r\n                        onChange={() => setTheme(value)}\r\n                      />\r\n                      <div className=\"settings-scheme\">\r\n                        <div\r\n                          className={`settings-scheme-theme settings-scheme-theme-${value}`}\r\n                        ></div>\r\n                      </div>\r\n                    </label>\r\n                    {name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar position\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle the position of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarPositionOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"sidebarPosition\"\r\n                      value={value}\r\n                      checked={position === value}\r\n                      onChange={() => setPosition(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar behavior\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Change the behavior of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarBehaviorOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"sidebarBehavior\"\r\n                      value={value}\r\n                      checked={behavior === value}\r\n                      onChange={() => setBehavior(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Layout</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle container layout system.\r\n              </span>\r\n              <div>\r\n                {layoutOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"layout\"\r\n                      value={value}\r\n                      checked={layout === value}\r\n                      onChange={() => setLayout(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"settings-footer\">\r\n            <div className=\"d-grid\">\r\n              <Button\r\n                as=\"a\"\r\n                rel=\"noreferrer\"\r\n                href=\"https://themes.getbootstrap.com/product/appstack-react-admin-dashboard-template/\"\r\n                target=\"_blank\"\r\n                variant=\"primary\"\r\n                size=\"lg\"\r\n              >\r\n                Purchase\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n",
      "start": 1702937441538,
      "end": 1702937441555,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441555,
      "end": 1702937441555,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441555,
      "end": 1702937441555,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Alert, Button } from \"react-bootstrap\";\nimport { Sliders, BookOpen } from \"react-feather\";\nimport {\n  SIDEBAR_POSITION,\n  SIDEBAR_BEHAVIOR,\n  LAYOUT,\n  THEME\n} from \"../constants\";\nimport useOuterClick from \"../hooks/useOuterClick\";\nimport { useTheme } from \"../hooks/useTheme\";\nimport useSidebar from \"../hooks/useSidebar\";\nimport useLayout from \"../hooks/useLayout\";\nconst themeOptions = [\n  {\n    name: \"Default\",\n    value: THEME.DEFAULT\n  },\n  {\n    name: \"Colored\",\n    value: THEME.COLORED\n  },\n  {\n    name: \"Dark\",\n    value: THEME.DARK\n  },\n  {\n    name: \"Light\",\n    value: THEME.LIGHT\n  }\n];\nconst sidebarPositionOptions = [\n  {\n    name: \"Left\",\n    value: SIDEBAR_POSITION.LEFT\n  },\n  {\n    name: \"Right\",\n    value: SIDEBAR_POSITION.RIGHT\n  }\n];\nconst sidebarBehaviorOptions = [\n  {\n    name: \"Sticky\",\n    value: SIDEBAR_BEHAVIOR.STICKY\n  },\n  {\n    name: \"Fixed\",\n    value: SIDEBAR_BEHAVIOR.FIXED\n  },\n  {\n    name: \"Compact\",\n    value: SIDEBAR_BEHAVIOR.COMPACT\n  }\n];\nconst layoutOptions = [\n  {\n    name: \"Fluid\",\n    value: LAYOUT.FLUID\n  },\n  {\n    name: \"Boxed\",\n    value: LAYOUT.BOXED\n  }\n];\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\nconst Settings = () => {\n  const query = useQuery();\n  const [isOpen, setIsOpen] = useState(false);\n  const { theme, setTheme } = useTheme();\n  const { position, setPosition, behavior, setBehavior } = useSidebar();\n  const { layout, setLayout } = useLayout();\n  const innerRef = useOuterClick(() => {\n    setIsOpen(false);\n  });\n  const setSettingByQueryParam = (name, set) => {\n    const value = query.get(name);\n    if (value) {\n      set(value);\n    }\n  };\n  useEffect(() => {\n    setSettingByQueryParam(\"theme\", setTheme);\n    setSettingByQueryParam(\"sidebarPosition\", setPosition);\n    setSettingByQueryParam(\"sidebarBehavior\", setBehavior);\n    setSettingByQueryParam(\"layout\", setLayout);\n  }, []);\n  return /* @__PURE__ */ jsxs(\n    \"div\",\n    {\n      ref: innerRef,\n      className: `settings js-settings ${isOpen ? \"open\" : \"\"}`,\n      children: [\n        /* @__PURE__ */ jsxs(\"div\", { className: \"settings-toggle\", children: [\n          /* @__PURE__ */ jsxs(\n            \"div\",\n            {\n              className: \"settings-toggle-option settings-toggle-option-text js-settings-toggle\",\n              title: \"Theme Builder\",\n              onClick: () => setIsOpen(true),\n              children: [\n                /* @__PURE__ */ jsx(Sliders, { className: \"feather align-middle\" }),\n                \" Builder\"\n              ]\n            }\n          ),\n          /* @__PURE__ */ jsx(\n            \"a\",\n            {\n              className: \"settings-toggle-option\",\n              title: \"Documentation\",\n              href: \"/docs/introduction\",\n              target: \"_blank\",\n              children: /* @__PURE__ */ jsx(BookOpen, { className: \"feather align-middle\" })\n            }\n          )\n        ] }),\n        /* @__PURE__ */ jsx(\"div\", { className: \"settings-panel\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"settings-content\", children: [\n          /* @__PURE__ */ jsxs(\"div\", { className: \"settings-title d-flex align-items-center\", children: [\n            /* @__PURE__ */ jsx(\n              \"button\",\n              {\n                type: \"button\",\n                className: \"btn-close float-right js-settings-toggle\",\n                \"aria-label\": \"Close\",\n                onClick: () => setIsOpen(false)\n              }\n            ),\n            /* @__PURE__ */ jsx(\"h4\", { className: \"mb-0 ms-2 d-inline-block\", children: \"Theme Builder\" })\n          ] }),\n          /* @__PURE__ */ jsxs(\"div\", { className: \"settings-body\", children: [\n            /* @__PURE__ */ jsx(Alert, { variant: \"primary\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"alert-message\", children: [\n              /* @__PURE__ */ jsx(\"strong\", { children: \"Hey there!\" }),\n              \" Set your own customized style below. Choose the ones that best fits your needs.\"\n            ] }) }),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsx(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Color scheme\" }),\n              /* @__PURE__ */ jsx(\"span\", { className: \"d-block text-muted mb-2\", children: \"The perfect color mode for your app.\" }),\n              /* @__PURE__ */ jsx(\"div\", { className: \"row g-0 text-center mx-n1 mb-2\", children: themeOptions.map(({ name, value }) => /* @__PURE__ */ jsxs(\"div\", { className: \"col-6\", children: [\n                /* @__PURE__ */ jsxs(\"label\", { className: \"mx-1 d-block mb-1\", children: [\n                  /* @__PURE__ */ jsx(\n                    \"input\",\n                    {\n                      className: \"settings-scheme-label\",\n                      type: \"radio\",\n                      name: \"theme\",\n                      value,\n                      checked: theme === value,\n                      onChange: () => setTheme(value)\n                    }\n                  ),\n                  /* @__PURE__ */ jsx(\"div\", { className: \"settings-scheme\", children: /* @__PURE__ */ jsx(\n                    \"div\",\n                    {\n                      className: `settings-scheme-theme settings-scheme-theme-${value}`\n                    }\n                  ) })\n                ] }),\n                name\n              ] }, value)) })\n            ] }),\n            /* @__PURE__ */ jsx(\"hr\", {}),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsx(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Sidebar position\" }),\n              /* @__PURE__ */ jsx(\"span\", { className: \"d-block text-muted mb-2\", children: \"Toggle the position of the sidebar.\" }),\n              /* @__PURE__ */ jsx(\"div\", { children: sidebarPositionOptions.map(({ name, value }) => /* @__PURE__ */ jsxs(\"label\", { className: \"me-1\", children: [\n                /* @__PURE__ */ jsx(\n                  \"input\",\n                  {\n                    className: \"settings-button-label\",\n                    type: \"radio\",\n                    name: \"sidebarPosition\",\n                    value,\n                    checked: position === value,\n                    onChange: () => setPosition(value)\n                  }\n                ),\n                /* @__PURE__ */ jsx(\"div\", { className: \"settings-button\", children: name })\n              ] }, value)) })\n            ] }),\n            /* @__PURE__ */ jsx(\"hr\", {}),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsx(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Sidebar behavior\" }),\n              /* @__PURE__ */ jsx(\"span\", { className: \"d-block text-muted mb-2\", children: \"Change the behavior of the sidebar.\" }),\n              /* @__PURE__ */ jsx(\"div\", { children: sidebarBehaviorOptions.map(({ name, value }) => /* @__PURE__ */ jsxs(\"label\", { className: \"me-1\", children: [\n                /* @__PURE__ */ jsx(\n                  \"input\",\n                  {\n                    className: \"settings-button-label\",\n                    type: \"radio\",\n                    name: \"sidebarBehavior\",\n                    value,\n                    checked: behavior === value,\n                    onChange: () => setBehavior(value)\n                  }\n                ),\n                /* @__PURE__ */ jsx(\"div\", { className: \"settings-button\", children: name })\n              ] }, value)) })\n            ] }),\n            /* @__PURE__ */ jsx(\"hr\", {}),\n            /* @__PURE__ */ jsxs(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsx(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Layout\" }),\n              /* @__PURE__ */ jsx(\"span\", { className: \"d-block text-muted mb-2\", children: \"Toggle container layout system.\" }),\n              /* @__PURE__ */ jsx(\"div\", { children: layoutOptions.map(({ name, value }) => /* @__PURE__ */ jsxs(\"label\", { className: \"me-1\", children: [\n                /* @__PURE__ */ jsx(\n                  \"input\",\n                  {\n                    className: \"settings-button-label\",\n                    type: \"radio\",\n                    name: \"layout\",\n                    value,\n                    checked: layout === value,\n                    onChange: () => setLayout(value)\n                  }\n                ),\n                /* @__PURE__ */ jsx(\"div\", { className: \"settings-button\", children: name })\n              ] }, value)) })\n            ] })\n          ] }),\n          /* @__PURE__ */ jsx(\"div\", { className: \"settings-footer\", children: /* @__PURE__ */ jsx(\"div\", { className: \"d-grid\", children: /* @__PURE__ */ jsx(\n            Button,\n            {\n              as: \"a\",\n              rel: \"noreferrer\",\n              href: \"https://themes.getbootstrap.com/product/appstack-react-admin-dashboard-template/\",\n              target: \"_blank\",\n              variant: \"primary\",\n              size: \"lg\",\n              children: \"Purchase\"\n            }\n          ) }) })\n        ] }) })\n      ]\n    }\n  );\n};\nexport default Settings;\n",
      "start": 1702937441555,
      "end": 1702937441560,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/components/Settings.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Alert, Button } from \"react-bootstrap\";\r\n\r\nimport { Sliders, BookOpen } from \"react-feather\";\r\n\r\nimport {\r\n  SIDEBAR_POSITION,\r\n  SIDEBAR_BEHAVIOR,\r\n  LAYOUT,\r\n  THEME,\r\n} from \"../constants\";\r\nimport useOuterClick from \"../hooks/useOuterClick\";\r\nimport { useTheme } from \"../hooks/useTheme\";\r\nimport useSidebar from \"../hooks/useSidebar\";\r\nimport useLayout from \"../hooks/useLayout\";\r\n\r\nconst themeOptions = [\r\n  {\r\n    name: \"Default\",\r\n    value: THEME.DEFAULT,\r\n  },\r\n  {\r\n    name: \"Colored\",\r\n    value: THEME.COLORED,\r\n  },\r\n  {\r\n    name: \"Dark\",\r\n    value: THEME.DARK,\r\n  },\r\n  {\r\n    name: \"Light\",\r\n    value: THEME.LIGHT,\r\n  },\r\n];\r\n\r\nconst sidebarPositionOptions = [\r\n  {\r\n    name: \"Left\",\r\n    value: SIDEBAR_POSITION.LEFT,\r\n  },\r\n  {\r\n    name: \"Right\",\r\n    value: SIDEBAR_POSITION.RIGHT,\r\n  },\r\n];\r\n\r\nconst sidebarBehaviorOptions = [\r\n  {\r\n    name: \"Sticky\",\r\n    value: SIDEBAR_BEHAVIOR.STICKY,\r\n  },\r\n  {\r\n    name: \"Fixed\",\r\n    value: SIDEBAR_BEHAVIOR.FIXED,\r\n  },\r\n  {\r\n    name: \"Compact\",\r\n    value: SIDEBAR_BEHAVIOR.COMPACT,\r\n  },\r\n];\r\n\r\nconst layoutOptions = [\r\n  {\r\n    name: \"Fluid\",\r\n    value: LAYOUT.FLUID,\r\n  },\r\n  {\r\n    name: \"Boxed\",\r\n    value: LAYOUT.BOXED,\r\n  },\r\n];\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Settings = () => {\r\n  const query = useQuery();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const { theme, setTheme } = useTheme();\r\n  const { position, setPosition, behavior, setBehavior } = useSidebar();\r\n  const { layout, setLayout } = useLayout();\r\n\r\n  const innerRef = useOuterClick(() => {\r\n    setIsOpen(false);\r\n  });\r\n\r\n  const setSettingByQueryParam = (name, set) => {\r\n    const value = query.get(name);\r\n    if (value) {\r\n      set(value);\r\n    }\r\n  };\r\n\r\n  // Read from query parameter (e.g. ?theme=dark)\r\n  // only for demo purposes\r\n  useEffect(() => {\r\n    setSettingByQueryParam(\"theme\", setTheme);\r\n    setSettingByQueryParam(\"sidebarPosition\", setPosition);\r\n    setSettingByQueryParam(\"sidebarBehavior\", setBehavior);\r\n    setSettingByQueryParam(\"layout\", setLayout);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={innerRef}\r\n      className={`settings js-settings ${isOpen ? \"open\" : \"\"}`}\r\n    >\r\n      <div className=\"settings-toggle\">\r\n        <div\r\n          className=\"settings-toggle-option settings-toggle-option-text js-settings-toggle\"\r\n          title=\"Theme Builder\"\r\n          onClick={() => setIsOpen(true)}\r\n        >\r\n          <Sliders className=\"feather align-middle\" /> Builder\r\n        </div>\r\n        <a\r\n          className=\"settings-toggle-option\"\r\n          title=\"Documentation\"\r\n          href=\"/docs/introduction\"\r\n          target=\"_blank\"\r\n        >\r\n          <BookOpen className=\"feather align-middle\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"settings-panel\">\r\n        <div className=\"settings-content\">\r\n          <div className=\"settings-title d-flex align-items-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close float-right js-settings-toggle\"\r\n              aria-label=\"Close\"\r\n              onClick={() => setIsOpen(false)}\r\n            ></button>\r\n            <h4 className=\"mb-0 ms-2 d-inline-block\">Theme Builder</h4>\r\n          </div>\r\n          <div className=\"settings-body\">\r\n            <Alert variant=\"primary\">\r\n              <div className=\"alert-message\">\r\n                <strong>Hey there!</strong> Set your own customized style below.\r\n                Choose the ones that best fits your needs.\r\n              </div>\r\n            </Alert>\r\n\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Color scheme</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                The perfect color mode for your app.\r\n              </span>\r\n              <div className=\"row g-0 text-center mx-n1 mb-2\">\r\n                {themeOptions.map(({ name, value }) => (\r\n                  <div className=\"col-6\" key={value}>\r\n                    <label className=\"mx-1 d-block mb-1\">\r\n                      <input\r\n                        className=\"settings-scheme-label\"\r\n                        type=\"radio\"\r\n                        name=\"theme\"\r\n                        value={value}\r\n                        checked={theme === value}\r\n                        onChange={() => setTheme(value)}\r\n                      />\r\n                      <div className=\"settings-scheme\">\r\n                        <div\r\n                          className={`settings-scheme-theme settings-scheme-theme-${value}`}\r\n                        ></div>\r\n                      </div>\r\n                    </label>\r\n                    {name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar position\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle the position of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarPositionOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"sidebarPosition\"\r\n                      value={value}\r\n                      checked={position === value}\r\n                      onChange={() => setPosition(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar behavior\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Change the behavior of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarBehaviorOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"sidebarBehavior\"\r\n                      value={value}\r\n                      checked={behavior === value}\r\n                      onChange={() => setBehavior(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Layout</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle container layout system.\r\n              </span>\r\n              <div>\r\n                {layoutOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"layout\"\r\n                      value={value}\r\n                      checked={layout === value}\r\n                      onChange={() => setLayout(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"settings-footer\">\r\n            <div className=\"d-grid\">\r\n              <Button\r\n                as=\"a\"\r\n                rel=\"noreferrer\"\r\n                href=\"https://themes.getbootstrap.com/product/appstack-react-admin-dashboard-template/\"\r\n                target=\"_blank\"\r\n                variant=\"primary\"\r\n                size=\"lg\"\r\n              >\r\n                Purchase\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937441560,
      "end": 1702937441560,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441560,
      "end": 1702937441560,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441560,
      "end": 1702937441560,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441560,
      "end": 1702937441560,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441561,
      "end": 1702937441561,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441561,
      "end": 1702937441561,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441561,
      "end": 1702937441561,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441561,
      "end": 1702937441561,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441561,
      "end": 1702937441561,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441561,
      "end": 1702937441561,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441561,
      "end": 1702937441561,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441561,
      "end": 1702937441561,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441561,
      "end": 1702937441561,
      "order": "normal"
    }
  ]
}
