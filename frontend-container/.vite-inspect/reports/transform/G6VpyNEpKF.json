{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/scala.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\nvar refractorJava = require('./java.js')\nmodule.exports = scala\nscala.displayName = 'scala'\nscala.aliases = []\nfunction scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    number:\n      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin:\n      /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  Prism.languages.insertBefore('scala', 'triple-quoted-string', {\n    'string-interpolation': {\n      pattern:\n        /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n      greedy: true,\n      inside: {\n        id: {\n          pattern: /^\\w+/,\n          greedy: true,\n          alias: 'function'\n        },\n        escape: {\n          pattern: /\\\\\\$\"|\\$[$\"]/,\n          greedy: true,\n          alias: 'symbol'\n        },\n        interpolation: {\n          pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n          greedy: true,\n          inside: {\n            punctuation: /^\\$\\{?|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.scala\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n}\n",
      "start": 1702937445054,
      "end": 1702937445083,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/java.js?commonjs-wrapped\";\n\nvar scala_1;\nvar hasRequiredScala;\n\nfunction requireScala () {\n\tif (hasRequiredScala) return scala_1;\n\thasRequiredScala = 1;\n\t'use strict'\n\tvar refractorJava = require$$0()\n\tscala_1 = scala\n\tscala.displayName = 'scala'\n\tscala.aliases = []\n\tfunction scala(Prism) {\n\t  Prism.register(refractorJava)\n\t  Prism.languages.scala = Prism.languages.extend('java', {\n\t    'triple-quoted-string': {\n\t      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t      greedy: true,\n\t      alias: 'string'\n\t    },\n\t    string: {\n\t      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t      greedy: true\n\t    },\n\t    keyword:\n\t      /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n\t    number:\n\t      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n\t    builtin:\n\t      /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n\t    symbol: /'[^\\d\\s\\\\]\\w*/\n\t  })\n\t  Prism.languages.insertBefore('scala', 'triple-quoted-string', {\n\t    'string-interpolation': {\n\t      pattern:\n\t        /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n\t      greedy: true,\n\t      inside: {\n\t        id: {\n\t          pattern: /^\\w+/,\n\t          greedy: true,\n\t          alias: 'function'\n\t        },\n\t        escape: {\n\t          pattern: /\\\\\\$\"|\\$[$\"]/,\n\t          greedy: true,\n\t          alias: 'symbol'\n\t        },\n\t        interpolation: {\n\t          pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n\t          greedy: true,\n\t          inside: {\n\t            punctuation: /^\\$\\{?|\\}$/,\n\t            expression: {\n\t              pattern: /[\\s\\S]+/,\n\t              inside: Prism.languages.scala\n\t            }\n\t          }\n\t        },\n\t        string: /[\\s\\S]+/\n\t      }\n\t    }\n\t  })\n\t  delete Prism.languages.scala['class-name']\n\t  delete Prism.languages.scala['function']\n\t}\n\treturn scala_1;\n}\n\nexport { requireScala as __require };",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;;CAAA,YAAY;CACZ,IAAI,aAAa,GAAG,YAAoB;AACxC,QAAc,GAAG,KAAK;CACtB,KAAK,CAAC,WAAW,GAAG,OAAO;CAC3B,KAAK,CAAC,OAAO,GAAG,EAAE;CAClB,SAAS,KAAK,CAAC,KAAK,EAAE;CACtB,EAAE,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC;CAC/B,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE;CACzD,IAAI,sBAAsB,EAAE;CAC5B,MAAM,OAAO,EAAE,gBAAgB;CAC/B,MAAM,MAAM,EAAE,IAAI;CAClB,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK;CACL,IAAI,MAAM,EAAE;CACZ,MAAM,OAAO,EAAE,iCAAiC;CAChD,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,OAAO;CACX,MAAM,oPAAoP;CAC1P,IAAI,MAAM;CACV,MAAM,yEAAyE;CAC/E,IAAI,OAAO;CACX,MAAM,6FAA6F;CACnG,IAAI,MAAM,EAAE,eAAe;CAC3B,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,sBAAsB,EAAE;CAChE,IAAI,sBAAsB,EAAE;CAC5B,MAAM,OAAO;CACb,QAAQ,4HAA4H;CACpI,MAAM,MAAM,EAAE,IAAI;CAClB,MAAM,MAAM,EAAE;CACd,QAAQ,EAAE,EAAE;CACZ,UAAU,OAAO,EAAE,MAAM;CACzB,UAAU,MAAM,EAAE,IAAI;CACtB,UAAU,KAAK,EAAE,UAAU;CAC3B,SAAS;CACT,QAAQ,MAAM,EAAE;CAChB,UAAU,OAAO,EAAE,cAAc;CACjC,UAAU,MAAM,EAAE,IAAI;CACtB,UAAU,KAAK,EAAE,QAAQ;CACzB,SAAS;CACT,QAAQ,aAAa,EAAE;CACvB,UAAU,OAAO,EAAE,qCAAqC;CACxD,UAAU,MAAM,EAAE,IAAI;CACtB,UAAU,MAAM,EAAE;CAClB,YAAY,WAAW,EAAE,YAAY;CACrC,YAAY,UAAU,EAAE;CACxB,cAAc,OAAO,EAAE,SAAS;CAChC,cAAc,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK;CAC3C,aAAa;CACb,WAAW;CACX,SAAS;CACT,QAAQ,MAAM,EAAE,SAAS;CACzB,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,OAAO,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC;CAC5C,EAAE,OAAO,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC;CAC1C"
      }
    },
    {
      "name": "inject",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445083,
      "end": 1702937445083,
      "order": "normal"
    }
  ]
}
