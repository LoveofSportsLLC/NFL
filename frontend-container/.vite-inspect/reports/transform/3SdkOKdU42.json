{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/javadoc.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\nvar refractorJava = require('./java.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = javadoc\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\nfunction javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n",
      "start": 1702937444924,
      "end": 1702937444943,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444943,
      "end": 1702937444943,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444943,
      "end": 1702937444943,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444943,
      "end": 1702937444943,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444943,
      "end": 1702937444943,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444943,
      "end": 1702937444943,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444943,
      "end": 1702937444943,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444943,
      "end": 1702937444943,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444943,
      "end": 1702937444943,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444943,
      "end": 1702937444943,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444943,
      "end": 1702937444943,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/java.js?commonjs-wrapped\";\nimport { __require as require$$1 } from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/javadoclike.js?commonjs-wrapped\";\n\nvar javadoc_1;\nvar hasRequiredJavadoc;\n\nfunction requireJavadoc () {\n\tif (hasRequiredJavadoc) return javadoc_1;\n\thasRequiredJavadoc = 1;\n\t'use strict'\n\tvar refractorJava = require$$0()\n\tvar refractorJavadoclike = require$$1()\n\tjavadoc_1 = javadoc\n\tjavadoc.displayName = 'javadoc'\n\tjavadoc.aliases = []\n\tfunction javadoc(Prism) {\n\t  Prism.register(refractorJava)\n\t  Prism.register(refractorJavadoclike)\n\t  ;(function (Prism) {\n\t    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n\t    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n\t    var reference =\n\t      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n\t        /<mem>/g,\n\t        function () {\n\t          return memberReference\n\t        }\n\t      )\n\t    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n\t    Prism.languages.insertBefore('javadoc', 'keyword', {\n\t      reference: {\n\t        pattern: RegExp(\n\t          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n\t            .source +\n\t            '(?:' +\n\t            reference +\n\t            ')'\n\t        ),\n\t        lookbehind: true,\n\t        inside: {\n\t          function: {\n\t            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n\t            lookbehind: true\n\t          },\n\t          field: {\n\t            pattern: /(#\\s*)\\w+/,\n\t            lookbehind: true\n\t          },\n\t          namespace: {\n\t            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n\t            inside: {\n\t              punctuation: /\\./\n\t            }\n\t          },\n\t          'class-name': /\\b[A-Z]\\w*/,\n\t          keyword: Prism.languages.java.keyword,\n\t          punctuation: /[#()[\\],.]/\n\t        }\n\t      },\n\t      'class-name': {\n\t        // @param <T> the first generic type parameter\n\t        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n\t        lookbehind: true,\n\t        inside: {\n\t          punctuation: /[.<>]/\n\t        }\n\t      },\n\t      'code-section': [\n\t        {\n\t          pattern:\n\t            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n\t          lookbehind: true,\n\t          inside: {\n\t            code: {\n\t              // there can't be any HTML inside of {@code} tags\n\t              pattern: codeLinePattern,\n\t              lookbehind: true,\n\t              inside: Prism.languages.java,\n\t              alias: 'language-java'\n\t            }\n\t          }\n\t        },\n\t        {\n\t          pattern:\n\t            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n\t          lookbehind: true,\n\t          inside: {\n\t            line: {\n\t              pattern: codeLinePattern,\n\t              lookbehind: true,\n\t              inside: {\n\t                // highlight HTML tags and entities\n\t                tag: Prism.languages.markup.tag,\n\t                entity: Prism.languages.markup.entity,\n\t                code: {\n\t                  // everything else is Java code\n\t                  pattern: /.+/,\n\t                  inside: Prism.languages.java,\n\t                  alias: 'language-java'\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      ],\n\t      tag: Prism.languages.markup.tag,\n\t      entity: Prism.languages.markup.entity\n\t    })\n\t    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n\t  })(Prism)\n\t}\n\treturn javadoc_1;\n}\n\nexport { requireJavadoc as __require };",
      "start": 1702937444943,
      "end": 1702937444947,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937444947,
      "end": 1702937444947,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444947,
      "end": 1702937444947,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444947,
      "end": 1702937444947,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444947,
      "end": 1702937444947,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444947,
      "end": 1702937444947,
      "order": "normal"
    }
  ]
}
