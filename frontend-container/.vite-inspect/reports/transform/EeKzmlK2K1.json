{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/highlight.js/lib/languages/erlang-repl.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Erlang REPL\nAuthor: Sergey Ignatov <sergey@ignatov.spb.su>\nWebsite: https://www.erlang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction erlangRepl(hljs) {\n  return {\n    name: 'Erlang REPL',\n    keywords: {\n      built_in:\n        'spawn spawn_link self',\n      keyword:\n        'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if ' +\n        'let not of or orelse|10 query receive rem try when xor'\n    },\n    contains: [\n      {\n        className: 'meta',\n        begin: '^[0-9]+> ',\n        relevance: 10\n      },\n      hljs.COMMENT('%', '$'),\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\n        relevance: 0\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        begin: concat(\n          /\\?(::)?/,\n          /([A-Z]\\w*)/, // at least one identifier\n          /((::)[A-Z]\\w*)*/ // perhaps more\n        )\n      },\n      {\n        begin: '->'\n      },\n      {\n        begin: 'ok'\n      },\n      {\n        begin: '!'\n      },\n      {\n        begin: '(\\\\b[a-z\\'][a-zA-Z0-9_\\']*:[a-z\\'][a-zA-Z0-9_\\']*)|(\\\\b[a-z\\'][a-zA-Z0-9_\\']*)',\n        relevance: 0\n      },\n      {\n        begin: '[A-Z][a-zA-Z0-9_\\']*',\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = erlangRepl;\n",
      "start": 1702937444309,
      "end": 1702937444340,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/**\n * @param {string} value\n * @returns {RegExp}\n * */\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar erlangRepl_1;\nvar hasRequiredErlangRepl;\n\nfunction requireErlangRepl () {\n\tif (hasRequiredErlangRepl) return erlangRepl_1;\n\thasRequiredErlangRepl = 1;\n\t/**\n\t * @param {RegExp | string } re\n\t * @returns {string}\n\t */\n\tfunction source(re) {\n\t  if (!re) return null;\n\t  if (typeof re === \"string\") return re;\n\n\t  return re.source;\n\t}\n\n\t/**\n\t * @param {...(RegExp | string) } args\n\t * @returns {string}\n\t */\n\tfunction concat(...args) {\n\t  const joined = args.map((x) => source(x)).join(\"\");\n\t  return joined;\n\t}\n\n\t/*\n\tLanguage: Erlang REPL\n\tAuthor: Sergey Ignatov <sergey@ignatov.spb.su>\n\tWebsite: https://www.erlang.org\n\tCategory: functional\n\t*/\n\n\t/** @type LanguageFn */\n\tfunction erlangRepl(hljs) {\n\t  return {\n\t    name: 'Erlang REPL',\n\t    keywords: {\n\t      built_in:\n\t        'spawn spawn_link self',\n\t      keyword:\n\t        'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if ' +\n\t        'let not of or orelse|10 query receive rem try when xor'\n\t    },\n\t    contains: [\n\t      {\n\t        className: 'meta',\n\t        begin: '^[0-9]+> ',\n\t        relevance: 10\n\t      },\n\t      hljs.COMMENT('%', '$'),\n\t      {\n\t        className: 'number',\n\t        begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\n\t        relevance: 0\n\t      },\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      {\n\t        begin: concat(\n\t          /\\?(::)?/,\n\t          /([A-Z]\\w*)/, // at least one identifier\n\t          /((::)[A-Z]\\w*)*/ // perhaps more\n\t        )\n\t      },\n\t      {\n\t        begin: '->'\n\t      },\n\t      {\n\t        begin: 'ok'\n\t      },\n\t      {\n\t        begin: '!'\n\t      },\n\t      {\n\t        begin: '(\\\\b[a-z\\'][a-zA-Z0-9_\\']*:[a-z\\'][a-zA-Z0-9_\\']*)|(\\\\b[a-z\\'][a-zA-Z0-9_\\']*)',\n\t        relevance: 0\n\t      },\n\t      {\n\t        begin: '[A-Z][a-zA-Z0-9_\\']*',\n\t        relevance: 0\n\t      }\n\t    ]\n\t  };\n\t}\n\n\terlangRepl_1 = erlangRepl;\n\treturn erlangRepl_1;\n}\n\nexport { requireErlangRepl as __require };",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;CAKA;CACA;CACA;CACA;CACA,SAAS,MAAM,CAAC,EAAE,EAAE;CACpB,EAAE,IAAI,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC;CACvB,EAAE,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE,OAAO,EAAE,CAAC;AACxC;CACA,EAAE,OAAO,EAAE,CAAC,MAAM,CAAC;CACnB,CAAC;AACD;CACA;CACA;CACA;CACA;CACA,SAAS,MAAM,CAAC,GAAG,IAAI,EAAE;CACzB,EAAE,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;CACrD,EAAE,OAAO,MAAM,CAAC;CAChB,CAAC;AACD;CACA;CACA;CACA;CACA;CACA;CACA;AACA;CACA;CACA,SAAS,UAAU,CAAC,IAAI,EAAE;CAC1B,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,aAAa;CACvB,IAAI,QAAQ,EAAE;CACd,MAAM,QAAQ;CACd,QAAQ,uBAAuB;CAC/B,MAAM,OAAO;CACb,QAAQ,uFAAuF;CAC/F,QAAQ,wDAAwD;CAChE,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM;CACN,QAAQ,SAAS,EAAE,MAAM;CACzB,QAAQ,KAAK,EAAE,WAAW;CAC1B,QAAQ,SAAS,EAAE,EAAE;CACrB,OAAO;CACP,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;CAC5B,MAAM;CACN,QAAQ,SAAS,EAAE,QAAQ;CAC3B,QAAQ,KAAK,EAAE,+FAA+F;CAC9G,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,MAAM,IAAI,CAAC,gBAAgB;CAC3B,MAAM,IAAI,CAAC,iBAAiB;CAC5B,MAAM;CACN,QAAQ,KAAK,EAAE,MAAM;CACrB,UAAU,SAAS;CACnB,UAAU,YAAY;CACtB,UAAU,iBAAiB;CAC3B,SAAS;CACT,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,IAAI;CACnB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,IAAI;CACnB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,GAAG;CAClB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,gFAAgF;CAC/F,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,MAAM;CACN,QAAQ,KAAK,EAAE,sBAAsB;CACrC,QAAQ,SAAS,EAAE,CAAC;CACpB,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,CAAC;AACD;AACA,aAAc,GAAG,UAAU"
      }
    },
    {
      "name": "inject",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444340,
      "end": 1702937444340,
      "order": "normal"
    }
  ]
}
