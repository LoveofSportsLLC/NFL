{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/crystal.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = crystal\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\nfunction crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n      operator: [/->/, Prism.languages.ruby.operator],\n      punctuation: /[(){}[\\].,;\\\\]/\n    })\n    Prism.languages.insertBefore('crystal', 'string-literal', {\n      attribute: {\n        pattern: /@\\[.*?\\]/,\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          attribute: {\n            pattern: /^(\\s*)\\w+/,\n            lookbehind: true,\n            alias: 'class-name'\n          },\n          args: {\n            pattern: /\\S(?:[\\s\\S]*\\S)?/,\n            inside: Prism.languages.crystal\n          }\n        }\n      },\n      expansion: {\n        pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n        inside: {\n          content: {\n            pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n            lookbehind: true,\n            inside: Prism.languages.crystal\n          },\n          delimiter: {\n            pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n            alias: 'operator'\n          }\n        }\n      },\n      char: {\n        pattern:\n          /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n",
      "start": 1702937444850,
      "end": 1702937444870,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444870,
      "end": 1702937444870,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444870,
      "end": 1702937444870,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444870,
      "end": 1702937444870,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444870,
      "end": 1702937444870,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444870,
      "end": 1702937444870,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444870,
      "end": 1702937444870,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444870,
      "end": 1702937444870,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444870,
      "end": 1702937444870,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444870,
      "end": 1702937444870,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444870,
      "end": 1702937444870,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/ruby.js?commonjs-wrapped\";\n\nvar crystal_1;\nvar hasRequiredCrystal;\n\nfunction requireCrystal () {\n\tif (hasRequiredCrystal) return crystal_1;\n\thasRequiredCrystal = 1;\n\t'use strict'\n\tvar refractorRuby = require$$0()\n\tcrystal_1 = crystal\n\tcrystal.displayName = 'crystal'\n\tcrystal.aliases = []\n\tfunction crystal(Prism) {\n\t  Prism.register(refractorRuby)\n\t  ;(function (Prism) {\n\t    Prism.languages.crystal = Prism.languages.extend('ruby', {\n\t      keyword: [\n\t        /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n\t        {\n\t          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n\t          lookbehind: true\n\t        }\n\t      ],\n\t      number:\n\t        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n\t      operator: [/->/, Prism.languages.ruby.operator],\n\t      punctuation: /[(){}[\\].,;\\\\]/\n\t    })\n\t    Prism.languages.insertBefore('crystal', 'string-literal', {\n\t      attribute: {\n\t        pattern: /@\\[.*?\\]/,\n\t        inside: {\n\t          delimiter: {\n\t            pattern: /^@\\[|\\]$/,\n\t            alias: 'punctuation'\n\t          },\n\t          attribute: {\n\t            pattern: /^(\\s*)\\w+/,\n\t            lookbehind: true,\n\t            alias: 'class-name'\n\t          },\n\t          args: {\n\t            pattern: /\\S(?:[\\s\\S]*\\S)?/,\n\t            inside: Prism.languages.crystal\n\t          }\n\t        }\n\t      },\n\t      expansion: {\n\t        pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n\t        inside: {\n\t          content: {\n\t            pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n\t            lookbehind: true,\n\t            inside: Prism.languages.crystal\n\t          },\n\t          delimiter: {\n\t            pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n\t            alias: 'operator'\n\t          }\n\t        }\n\t      },\n\t      char: {\n\t        pattern:\n\t          /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n\t        greedy: true\n\t      }\n\t    })\n\t  })(Prism)\n\t}\n\treturn crystal_1;\n}\n\nexport { requireCrystal as __require };",
      "start": 1702937444870,
      "end": 1702937445073,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;;CAAA,YAAY;CACZ,IAAI,aAAa,GAAG,YAAoB;AACxC,UAAc,GAAG,OAAO;CACxB,OAAO,CAAC,WAAW,GAAG,SAAS;CAC/B,OAAO,CAAC,OAAO,GAAG,EAAE;CACpB,SAAS,OAAO,CAAC,KAAK,EAAE;CACxB,EAAE,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC;CAC/B,GAAG,CAAC,UAAU,KAAK,EAAE;CACrB,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE;CAC7D,MAAM,OAAO,EAAE;CACf,QAAQ,2XAA2X;CACnY,QAAQ;CACR,UAAU,OAAO,EAAE,+BAA+B;CAClD,UAAU,UAAU,EAAE,IAAI;CAC1B,SAAS;CACT,OAAO;CACP,MAAM,MAAM;CACZ,QAAQ,qJAAqJ;CAC7J,MAAM,QAAQ,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;CACrD,MAAM,WAAW,EAAE,gBAAgB;CACnC,KAAK,CAAC;CACN,IAAI,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,EAAE,gBAAgB,EAAE;CAC9D,MAAM,SAAS,EAAE;CACjB,QAAQ,OAAO,EAAE,UAAU;CAC3B,QAAQ,MAAM,EAAE;CAChB,UAAU,SAAS,EAAE;CACrB,YAAY,OAAO,EAAE,UAAU;CAC/B,YAAY,KAAK,EAAE,aAAa;CAChC,WAAW;CACX,UAAU,SAAS,EAAE;CACrB,YAAY,OAAO,EAAE,WAAW;CAChC,YAAY,UAAU,EAAE,IAAI;CAC5B,YAAY,KAAK,EAAE,YAAY;CAC/B,WAAW;CACX,UAAU,IAAI,EAAE;CAChB,YAAY,OAAO,EAAE,kBAAkB;CACvC,YAAY,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO;CAC3C,WAAW;CACX,SAAS;CACT,OAAO;CACP,MAAM,SAAS,EAAE;CACjB,QAAQ,OAAO,EAAE,uBAAuB;CACxC,QAAQ,MAAM,EAAE;CAChB,UAAU,OAAO,EAAE;CACnB,YAAY,OAAO,EAAE,uBAAuB;CAC5C,YAAY,UAAU,EAAE,IAAI;CAC5B,YAAY,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO;CAC3C,WAAW;CACX,UAAU,SAAS,EAAE;CACrB,YAAY,OAAO,EAAE,mBAAmB;CACxC,YAAY,KAAK,EAAE,UAAU;CAC7B,WAAW;CACX,SAAS;CACT,OAAO;CACP,MAAM,IAAI,EAAE;CACZ,QAAQ,OAAO;CACf,UAAU,yEAAyE;CACnF,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP,KAAK,CAAC;CACN,GAAG,EAAE,KAAK,CAAC;CACX"
      }
    },
    {
      "name": "inject",
      "start": 1702937445073,
      "end": 1702937445073,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445073,
      "end": 1702937445073,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445073,
      "end": 1702937445073,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445073,
      "end": 1702937445073,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445073,
      "end": 1702937445073,
      "order": "normal"
    }
  ]
}
