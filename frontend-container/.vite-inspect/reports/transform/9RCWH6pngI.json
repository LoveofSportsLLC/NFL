{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/@restart/ui/esm/DropdownMenu.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const _excluded = [\"children\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport { useContext, useRef } from 'react';\nimport * as React from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useClickOutside from './useClickOutside';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst noop = () => {};\n\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\nexport function useDropdownMenu(options = {}) {\n  const context = useContext(DropdownContext);\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const hasShownRef = useRef(false);\n  const {\n    flip,\n    offset,\n    rootCloseEvent,\n    fixed = false,\n    placement: placementOverride,\n    popperConfig = {},\n    enableEventListeners = true,\n    usePopper: shouldUsePopper = !!context\n  } = options;\n  const show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n  const handleClose = e => {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n  const {\n    placement,\n    setMenu,\n    menuElement,\n    toggleElement\n  } = context || {};\n  const popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placementOverride || placement || 'bottom-start',\n    enabled: shouldUsePopper,\n    enableEvents: enableEventListeners == null ? show : enableEventListeners,\n    offset,\n    flip,\n    fixed,\n    arrowElement,\n    popperConfig\n  }));\n  const menuProps = Object.assign({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n  const metadata = {\n    show,\n    placement,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? Object.assign({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useClickOutside(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nconst defaultProps = {\n  usePopper: true\n};\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref) {\n  let {\n      children\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [props, meta] = useDropdownMenu(options);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: children(props, meta)\n  });\n}\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\n\n/** @component */\nexport default DropdownMenu;",
      "start": 1702937442070,
      "end": 1702937442090,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937442090,
      "end": 1702937442090,
      "order": "normal"
    }
  ]
}
