{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/pages/docs/ESLintAndPrettier.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nconst Intro = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Introduction</h3>\r\n    <p className=\"text-lg\">\r\n      To format code automatically, we've included a basic ESLint & Prettier\r\n      configuration. ESLint statically analyzes your code to quickly find\r\n      problems. Prettier is used to automatically format the code you write to\r\n      ensure a consistent code style withing your projects.\r\n    </p>\r\n    <p className=\"text-lg\">Included ESLint configuration:</p>\r\n\r\n    <Code>{`{\r\n  \"extends\": [\"react-app\", \"prettier\"],\r\n  \"plugins\": [\"prettier\"],\r\n  \"rules\": {\r\n    \"prettier/prettier\": \"error\"\r\n  }\r\n}`}</Code>\r\n  </div>\r\n);\r\n\r\nconst Usage = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Usage</h3>\r\n    <p className=\"text-lg\">Format all source files in the /src folder:</p>\r\n\r\n    <Code>npm run lint</Code>\r\n  </div>\r\n);\r\n\r\nconst VSCodeIntegration = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>VSCode integration</h3>\r\n    <p className=\"text-lg\">\r\n      To use ESLint & Prettier in combination with VSCode, we suggest installing\r\n      the{\" \"}\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n        href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\"\r\n      >\r\n        VSCode ESLint extension\r\n      </a>\r\n      . After installing the extension, the code will automatically be\r\n      formatted. The following configuration is included, which can be\r\n      enabled/disabled or adjusted to your needs.\r\n    </p>\r\n\r\n    <Code>{`{\r\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\r\n  \"editor.formatOnType\": true,\r\n  \"editor.formatOnSave\": true,\r\n  \"editor.formatOnPaste\": true,\r\n  \"editor.codeActionsOnSave\": {\r\n    \"source.fixAll.eslint\": true\r\n  }\r\n}`}</Code>\r\n  </div>\r\n);\r\n\r\nconst ESLintAndPrettier = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Support\" />\r\n    <Container fluid className=\"p-0\">\r\n      <Row>\r\n        <Col lg={10} xl={8} className=\"col-xxl-7 mx-auto\">\r\n          <h1>ESLint &amp; Prettier</h1>\r\n          <hr className=\"my-4\" />\r\n          <Intro />\r\n          <Usage />\r\n          <VSCodeIntegration />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default ESLintAndPrettier;\r\n",
      "start": 1702937440820,
      "end": 1702937440874,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937440874,
      "end": 1702937440874,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937440874,
      "end": 1702937440874,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Code from \"../../components/Code\";\nconst Intro = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Introduction\" }),\n  /* @__PURE__ */ jsx(\"p\", { className: \"text-lg\", children: \"To format code automatically, we've included a basic ESLint & Prettier configuration. ESLint statically analyzes your code to quickly find problems. Prettier is used to automatically format the code you write to ensure a consistent code style withing your projects.\" }),\n  /* @__PURE__ */ jsx(\"p\", { className: \"text-lg\", children: \"Included ESLint configuration:\" }),\n  /* @__PURE__ */ jsx(Code, { children: `{\n  \"extends\": [\"react-app\", \"prettier\"],\n  \"plugins\": [\"prettier\"],\n  \"rules\": {\n    \"prettier/prettier\": \"error\"\n  }\n}` })\n] });\nconst Usage = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Usage\" }),\n  /* @__PURE__ */ jsx(\"p\", { className: \"text-lg\", children: \"Format all source files in the /src folder:\" }),\n  /* @__PURE__ */ jsx(Code, { children: \"npm run lint\" })\n] });\nconst VSCodeIntegration = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"VSCode integration\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"To use ESLint & Prettier in combination with VSCode, we suggest installing the\",\n    \" \",\n    /* @__PURE__ */ jsx(\n      \"a\",\n      {\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        href: \"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\",\n        children: \"VSCode ESLint extension\"\n      }\n    ),\n    \". After installing the extension, the code will automatically be formatted. The following configuration is included, which can be enabled/disabled or adjusted to your needs.\"\n  ] }),\n  /* @__PURE__ */ jsx(Code, { children: `{\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\n  \"editor.formatOnType\": true,\n  \"editor.formatOnSave\": true,\n  \"editor.formatOnPaste\": true,\n  \"editor.codeActionsOnSave\": {\n    \"source.fixAll.eslint\": true\n  }\n}` })\n] });\nconst ESLintAndPrettier = () => /* @__PURE__ */ jsxs(React.Fragment, { children: [\n  /* @__PURE__ */ jsx(Helmet, { title: \"Support\" }),\n  /* @__PURE__ */ jsx(Container, { fluid: true, className: \"p-0\", children: /* @__PURE__ */ jsx(Row, { children: /* @__PURE__ */ jsxs(Col, { lg: 10, xl: 8, className: \"col-xxl-7 mx-auto\", children: [\n    /* @__PURE__ */ jsx(\"h1\", { children: \"ESLint & Prettier\" }),\n    /* @__PURE__ */ jsx(\"hr\", { className: \"my-4\" }),\n    /* @__PURE__ */ jsx(Intro, {}),\n    /* @__PURE__ */ jsx(Usage, {}),\n    /* @__PURE__ */ jsx(VSCodeIntegration, {})\n  ] }) }) })\n] });\nexport default ESLintAndPrettier;\n",
      "start": 1702937440874,
      "end": 1702937440875,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/pages/docs/ESLintAndPrettier.jsx"
        ],
        "sourcesContent": [
          "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nconst Intro = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Introduction</h3>\r\n    <p className=\"text-lg\">\r\n      To format code automatically, we've included a basic ESLint & Prettier\r\n      configuration. ESLint statically analyzes your code to quickly find\r\n      problems. Prettier is used to automatically format the code you write to\r\n      ensure a consistent code style withing your projects.\r\n    </p>\r\n    <p className=\"text-lg\">Included ESLint configuration:</p>\r\n\r\n    <Code>{`{\r\n  \"extends\": [\"react-app\", \"prettier\"],\r\n  \"plugins\": [\"prettier\"],\r\n  \"rules\": {\r\n    \"prettier/prettier\": \"error\"\r\n  }\r\n}`}</Code>\r\n  </div>\r\n);\r\n\r\nconst Usage = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Usage</h3>\r\n    <p className=\"text-lg\">Format all source files in the /src folder:</p>\r\n\r\n    <Code>npm run lint</Code>\r\n  </div>\r\n);\r\n\r\nconst VSCodeIntegration = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>VSCode integration</h3>\r\n    <p className=\"text-lg\">\r\n      To use ESLint & Prettier in combination with VSCode, we suggest installing\r\n      the{\" \"}\r\n      <a\r\n        target=\"_blank\"\r\n        rel=\"noreferrer noopener\"\r\n        href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\"\r\n      >\r\n        VSCode ESLint extension\r\n      </a>\r\n      . After installing the extension, the code will automatically be\r\n      formatted. The following configuration is included, which can be\r\n      enabled/disabled or adjusted to your needs.\r\n    </p>\r\n\r\n    <Code>{`{\r\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\r\n  \"editor.formatOnType\": true,\r\n  \"editor.formatOnSave\": true,\r\n  \"editor.formatOnPaste\": true,\r\n  \"editor.codeActionsOnSave\": {\r\n    \"source.fixAll.eslint\": true\r\n  }\r\n}`}</Code>\r\n  </div>\r\n);\r\n\r\nconst ESLintAndPrettier = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Support\" />\r\n    <Container fluid className=\"p-0\">\r\n      <Row>\r\n        <Col lg={10} xl={8} className=\"col-xxl-7 mx-auto\">\r\n          <h1>ESLint &amp; Prettier</h1>\r\n          <hr className=\"my-4\" />\r\n          <Intro />\r\n          <Usage />\r\n          <VSCodeIntegration />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default ESLintAndPrettier;\r\n"
        ],
        "mappings": "AAOE,SACE,KADF;AAPF,OAAO,WAAW;AAClB,SAAS,cAAc;AACvB,SAAS,KAAK,WAAW,WAAW;AAEpC,OAAO,UAAU;AAEjB,MAAM,QAAQ,MACZ,qBAAC,SAAI,WAAU,QACb;AAAA,sBAAC,QAAG,0BAAY;AAAA,EAChB,oBAAC,OAAE,WAAU,WAAU,uRAKvB;AAAA,EACA,oBAAC,OAAE,WAAU,WAAU,4CAA8B;AAAA,EAErD,oBAAC,QAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAMR;AAAA,GACD;AAGF,MAAM,QAAQ,MACZ,qBAAC,SAAI,WAAU,QACb;AAAA,sBAAC,QAAG,mBAAK;AAAA,EACT,oBAAC,OAAE,WAAU,WAAU,yDAA2C;AAAA,EAElE,oBAAC,QAAK,0BAAY;AAAA,GACpB;AAGF,MAAM,oBAAoB,MACxB,qBAAC,SAAI,WAAU,QACb;AAAA,sBAAC,QAAG,gCAAkB;AAAA,EACtB,qBAAC,OAAE,WAAU,WAAU;AAAA;AAAA,IAEjB;AAAA,IACJ;AAAA,MAAC;AAAA;AAAA,QACC,QAAO;AAAA,QACP,KAAI;AAAA,QACJ,MAAK;AAAA,QACN;AAAA;AAAA,IAED;AAAA,IAAI;AAAA,KAIN;AAAA,EAEA,oBAAC,QAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQR;AAAA,GACD;AAGF,MAAM,oBAAoB,MACxB,qBAAC,MAAM,UAAN,EACC;AAAA,sBAAC,UAAO,OAAM,WAAU;AAAA,EACxB,oBAAC,aAAU,OAAK,MAAC,WAAU,OACzB,8BAAC,OACC,+BAAC,OAAI,IAAI,IAAI,IAAI,GAAG,WAAU,qBAC5B;AAAA,wBAAC,QAAG,+BAAqB;AAAA,IACzB,oBAAC,QAAG,WAAU,QAAO;AAAA,IACrB,oBAAC,SAAM;AAAA,IACP,oBAAC,SAAM;AAAA,IACP,oBAAC,qBAAkB;AAAA,KACrB,GACF,GACF;AAAA,GACF;AAGF,eAAe;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    }
  ]
}
