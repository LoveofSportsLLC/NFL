{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/InputGroup.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});",
      "start": 1702937441482,
      "end": 1702937441500,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    }
  ]
}
