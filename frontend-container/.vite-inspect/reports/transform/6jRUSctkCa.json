{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/jsstacktrace.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = jsstacktrace\njsstacktrace.displayName = 'jsstacktrace'\njsstacktrace.aliases = []\nfunction jsstacktrace(Prism) {\n  Prism.languages.jsstacktrace = {\n    'error-message': {\n      pattern: /^\\S.*/m,\n      alias: 'string'\n    },\n    'stack-frame': {\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\n      lookbehind: true,\n      inside: {\n        'not-my-code': {\n          pattern:\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n          alias: 'comment'\n        },\n        filename: {\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n          lookbehind: true,\n          alias: 'url'\n        },\n        function: {\n          pattern:\n            /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()]/,\n        keyword: /\\b(?:at|new)\\b/,\n        alias: {\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n          alias: 'variable'\n        },\n        'line-number': {\n          pattern: /:\\d+(?::\\d+)?\\b/,\n          alias: 'number',\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    }\n  }\n}\n",
      "start": 1702937444938,
      "end": 1702937444960,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar jsstacktrace_1;\nvar hasRequiredJsstacktrace;\n\nfunction requireJsstacktrace () {\n\tif (hasRequiredJsstacktrace) return jsstacktrace_1;\n\thasRequiredJsstacktrace = 1;\n\t'use strict'\n\n\tjsstacktrace_1 = jsstacktrace\n\tjsstacktrace.displayName = 'jsstacktrace'\n\tjsstacktrace.aliases = []\n\tfunction jsstacktrace(Prism) {\n\t  Prism.languages.jsstacktrace = {\n\t    'error-message': {\n\t      pattern: /^\\S.*/m,\n\t      alias: 'string'\n\t    },\n\t    'stack-frame': {\n\t      pattern: /(^[ \\t]+)at[ \\t].*/m,\n\t      lookbehind: true,\n\t      inside: {\n\t        'not-my-code': {\n\t          pattern:\n\t            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n\t          alias: 'comment'\n\t        },\n\t        filename: {\n\t          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n\t          lookbehind: true,\n\t          alias: 'url'\n\t        },\n\t        function: {\n\t          pattern:\n\t            /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n\t          lookbehind: true,\n\t          inside: {\n\t            punctuation: /\\./\n\t          }\n\t        },\n\t        punctuation: /[()]/,\n\t        keyword: /\\b(?:at|new)\\b/,\n\t        alias: {\n\t          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n\t          alias: 'variable'\n\t        },\n\t        'line-number': {\n\t          pattern: /:\\d+(?::\\d+)?\\b/,\n\t          alias: 'number',\n\t          inside: {\n\t            punctuation: /:/\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\treturn jsstacktrace_1;\n}\n\nexport { requireJsstacktrace as __require };",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,eAAc,GAAG,YAAY;CAC7B,YAAY,CAAC,WAAW,GAAG,cAAc;CACzC,YAAY,CAAC,OAAO,GAAG,EAAE;CACzB,SAAS,YAAY,CAAC,KAAK,EAAE;CAC7B,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,GAAG;CACjC,IAAI,eAAe,EAAE;CACrB,MAAM,OAAO,EAAE,QAAQ;CACvB,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK;CACL,IAAI,aAAa,EAAE;CACnB,MAAM,OAAO,EAAE,qBAAqB;CACpC,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,MAAM,EAAE;CACd,QAAQ,aAAa,EAAE;CACvB,UAAU,OAAO;CACjB,YAAY,8HAA8H;CAC1I,UAAU,KAAK,EAAE,SAAS;CAC1B,SAAS;CACT,QAAQ,QAAQ,EAAE;CAClB,UAAU,OAAO,EAAE,8CAA8C;CACjE,UAAU,UAAU,EAAE,IAAI;CAC1B,UAAU,KAAK,EAAE,KAAK;CACtB,SAAS;CACT,QAAQ,QAAQ,EAAE;CAClB,UAAU,OAAO;CACjB,YAAY,sEAAsE;CAClF,UAAU,UAAU,EAAE,IAAI;CAC1B,UAAU,MAAM,EAAE;CAClB,YAAY,WAAW,EAAE,IAAI;CAC7B,WAAW;CACX,SAAS;CACT,QAAQ,WAAW,EAAE,MAAM;CAC3B,QAAQ,OAAO,EAAE,gBAAgB;CACjC,QAAQ,KAAK,EAAE;CACf,UAAU,OAAO,EAAE,4DAA4D;CAC/E,UAAU,KAAK,EAAE,UAAU;CAC3B,SAAS;CACT,QAAQ,aAAa,EAAE;CACvB,UAAU,OAAO,EAAE,iBAAiB;CACpC,UAAU,KAAK,EAAE,QAAQ;CACzB,UAAU,MAAM,EAAE;CAClB,YAAY,WAAW,EAAE,GAAG;CAC5B,WAAW;CACX,SAAS;CACT,OAAO;CACP,KAAK;CACL,GAAG;CACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444961,
      "end": 1702937444961,
      "order": "normal"
    }
  ]
}
