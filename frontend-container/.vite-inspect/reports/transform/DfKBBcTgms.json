{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/comma-separated-tokens/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n// Parse comma-separated tokens to an array.\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = input.slice(lastIndex, index).trim()\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n// Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return values.join(right + comma + left).trim()\n}\n",
      "start": 1702937445367,
      "end": 1702937445378,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445378,
      "end": 1702937445378,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445378,
      "end": 1702937445378,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445378,
      "end": 1702937445378,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445378,
      "end": 1702937445378,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445378,
      "end": 1702937445378,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445378,
      "end": 1702937445378,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445378,
      "end": 1702937445378,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445378,
      "end": 1702937445378,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445378,
      "end": 1702937445378,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445378,
      "end": 1702937445378,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as commaSeparatedTokens } from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/comma-separated-tokens/index.js?commonjs-exports\";\n\n'use strict'\n\nvar parse_1 = commaSeparatedTokens.parse = parse\nvar stringify_1 = commaSeparatedTokens.stringify = stringify\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n// Parse comma-separated tokens to an array.\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = input.slice(lastIndex, index).trim()\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n// Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return values.join(right + comma + left).trim()\n}\n\nexport { commaSeparatedTokens as __moduleExports, parse_1 as parse, stringify_1 as stringify, commaSeparatedTokens as default };",
      "start": 1702937445378,
      "end": 1702937445379,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;AAAA,YAAY;AACZ;AACA,wCAAa,GAAG,KAAK;AACrB,gDAAiB,GAAG,SAAS;AAC7B;AACA,IAAI,KAAK,GAAG,GAAG;AACf,IAAI,KAAK,GAAG,GAAG;AACf,IAAI,KAAK,GAAG,EAAE;AACd;AACA;AACA,SAAS,KAAK,CAAC,KAAK,EAAE;AACtB,EAAE,IAAI,MAAM,GAAG,EAAE;AACjB,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC;AACpC,EAAE,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC;AAClC,EAAE,IAAI,SAAS,GAAG,CAAC;AACnB,EAAE,IAAI,GAAG,GAAG,KAAK;AACjB,EAAE,IAAI,GAAG;AACT;AACA,EAAE,OAAO,CAAC,GAAG,EAAE;AACf,IAAI,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;AACtB,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM;AAC1B,MAAM,GAAG,GAAG,IAAI;AAChB,KAAK;AACL;AACA,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE;AAC9C;AACA,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE;AACrB,MAAM,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;AACtB,KAAK;AACL;AACA,IAAI,SAAS,GAAG,KAAK,GAAG,CAAC;AACzB,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC;AAC3C,GAAG;AACH;AACA,EAAE,OAAO,MAAM;AACf,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE;AACpC,EAAE,IAAI,QAAQ,GAAG,OAAO,IAAI,EAAE;AAC9B,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK;AACvD,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,QAAQ,GAAG,KAAK,GAAG,KAAK;AAC/C;AACA;AACA,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,KAAK,EAAE;AAC3C,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;AACjC,GAAG;AACH;AACA,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,IAAI,EAAE;AACjD"
      }
    },
    {
      "name": "inject",
      "start": 1702937445379,
      "end": 1702937445379,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445379,
      "end": 1702937445379,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445379,
      "end": 1702937445379,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445379,
      "end": 1702937445379,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445379,
      "end": 1702937445379,
      "order": "normal"
    }
  ]
}
