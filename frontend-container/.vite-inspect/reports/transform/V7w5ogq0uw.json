{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/sparql.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\nvar refractorTurtle = require('./turtle.js')\nmodule.exports = sparql\nsparql.displayName = 'sparql'\nsparql.aliases = ['rq']\nfunction sparql(Prism) {\n  Prism.register(refractorTurtle)\n  Prism.languages.sparql = Prism.languages.extend('turtle', {\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: {\n      pattern: /[?$]\\w+/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('sparql', 'punctuation', {\n    keyword: [\n      /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\n      /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\n      /\\b(?:BASE|GRAPH|PREFIX)\\b/i\n    ]\n  })\n  Prism.languages.rq = Prism.languages.sparql\n}\n",
      "start": 1702937445062,
      "end": 1702937445092,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445092,
      "end": 1702937445092,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445092,
      "end": 1702937445092,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445092,
      "end": 1702937445092,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445092,
      "end": 1702937445092,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445092,
      "end": 1702937445092,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445092,
      "end": 1702937445092,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445092,
      "end": 1702937445092,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445092,
      "end": 1702937445092,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445092,
      "end": 1702937445092,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445092,
      "end": 1702937445092,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/turtle.js?commonjs-wrapped\";\n\nvar sparql_1;\nvar hasRequiredSparql;\n\nfunction requireSparql () {\n\tif (hasRequiredSparql) return sparql_1;\n\thasRequiredSparql = 1;\n\t'use strict'\n\tvar refractorTurtle = require$$0()\n\tsparql_1 = sparql\n\tsparql.displayName = 'sparql'\n\tsparql.aliases = ['rq']\n\tfunction sparql(Prism) {\n\t  Prism.register(refractorTurtle)\n\t  Prism.languages.sparql = Prism.languages.extend('turtle', {\n\t    boolean: /\\b(?:false|true)\\b/i,\n\t    variable: {\n\t      pattern: /[?$]\\w+/,\n\t      greedy: true\n\t    }\n\t  })\n\t  Prism.languages.insertBefore('sparql', 'punctuation', {\n\t    keyword: [\n\t      /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\n\t      /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\n\t      /\\b(?:BASE|GRAPH|PREFIX)\\b/i\n\t    ]\n\t  })\n\t  Prism.languages.rq = Prism.languages.sparql\n\t}\n\treturn sparql_1;\n}\n\nexport { requireSparql as __require };",
      "start": 1702937445092,
      "end": 1702937445122,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;;CAAA,YAAY;CACZ,IAAI,eAAe,GAAG,YAAsB;AAC5C,SAAc,GAAG,MAAM;CACvB,MAAM,CAAC,WAAW,GAAG,QAAQ;CAC7B,MAAM,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC;CACvB,SAAS,MAAM,CAAC,KAAK,EAAE;CACvB,EAAE,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC;CACjC,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE;CAC5D,IAAI,OAAO,EAAE,qBAAqB;CAClC,IAAI,QAAQ,EAAE;CACd,MAAM,OAAO,EAAE,SAAS;CACxB,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,EAAE;CACxD,IAAI,OAAO,EAAE;CACb,MAAM,6SAA6S;CACnT,MAAM,yYAAyY;CAC/Y,MAAM,4BAA4B;CAClC,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM;CAC7C"
      }
    },
    {
      "name": "inject",
      "start": 1702937445122,
      "end": 1702937445122,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445122,
      "end": 1702937445122,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445122,
      "end": 1702937445122,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445122,
      "end": 1702937445122,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445122,
      "end": 1702937445122,
      "order": "normal"
    }
  ]
}
