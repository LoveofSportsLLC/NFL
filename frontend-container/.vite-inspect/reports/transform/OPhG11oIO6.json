{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/flow.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = flow\nflow.displayName = 'flow'\nflow.aliases = []\nfunction flow(Prism) {\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n",
      "start": 1702937444890,
      "end": 1702937444904,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar flow_1;\nvar hasRequiredFlow;\n\nfunction requireFlow () {\n\tif (hasRequiredFlow) return flow_1;\n\thasRequiredFlow = 1;\n\t'use strict'\n\n\tflow_1 = flow\n\tflow.displayName = 'flow'\n\tflow.aliases = []\n\tfunction flow(Prism) {\n\t  ;(function (Prism) {\n\t    Prism.languages.flow = Prism.languages.extend('javascript', {})\n\t    Prism.languages.insertBefore('flow', 'keyword', {\n\t      type: [\n\t        {\n\t          pattern:\n\t            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\\b/,\n\t          alias: 'tag'\n\t        }\n\t      ]\n\t    })\n\t    Prism.languages.flow['function-variable'].pattern =\n\t      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n\t    delete Prism.languages.flow['parameter']\n\t    Prism.languages.insertBefore('flow', 'operator', {\n\t      'flow-punctuation': {\n\t        pattern: /\\{\\||\\|\\}/,\n\t        alias: 'punctuation'\n\t      }\n\t    })\n\t    if (!Array.isArray(Prism.languages.flow.keyword)) {\n\t      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n\t    }\n\t    Prism.languages.flow.keyword.unshift(\n\t      {\n\t        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n\t        lookbehind: true\n\t      },\n\t      {\n\t        pattern:\n\t          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n\t        lookbehind: true\n\t      }\n\t    )\n\t  })(Prism)\n\t}\n\treturn flow_1;\n}\n\nexport { requireFlow as __require };",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,OAAc,GAAG,IAAI;CACrB,IAAI,CAAC,WAAW,GAAG,MAAM;CACzB,IAAI,CAAC,OAAO,GAAG,EAAE;CACjB,SAAS,IAAI,CAAC,KAAK,EAAE;CACrB,EAAE,CAAC,CAAC,UAAU,KAAK,EAAE;CACrB,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC;CACnE,IAAI,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,EAAE;CACpD,MAAM,IAAI,EAAE;CACZ,QAAQ;CACR,UAAU,OAAO;CACjB,YAAY,qEAAqE;CACjF,UAAU,KAAK,EAAE,KAAK;CACtB,SAAS;CACT,OAAO;CACP,KAAK,CAAC;CACN,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,OAAO;CACrD,MAAM,sKAAsK;CAC5K,IAAI,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC;CAC5C,IAAI,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,EAAE;CACrD,MAAM,kBAAkB,EAAE;CAC1B,QAAQ,OAAO,EAAE,WAAW;CAC5B,QAAQ,KAAK,EAAE,aAAa;CAC5B,OAAO;CACP,KAAK,CAAC;CACN,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;CACtD,MAAM,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;CACnE,KAAK;CACL,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO;CACxC,MAAM;CACN,QAAQ,OAAO,EAAE,iDAAiD;CAClE,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM;CACN,QAAQ,OAAO;CACf,UAAU,uGAAuG;CACjH,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,KAAK;CACL,GAAG,EAAE,KAAK,CAAC;CACX"
      }
    },
    {
      "name": "inject",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444904,
      "end": 1702937444904,
      "order": "normal"
    }
  ]
}
