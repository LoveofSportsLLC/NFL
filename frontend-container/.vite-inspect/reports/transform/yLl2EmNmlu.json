{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/amazon-cognito-identity-js/es/CognitoUserPool.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*!\n * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport Client from './Client';\nimport CognitoUser from './CognitoUser';\nimport StorageHelper from './StorageHelper';\nvar USER_POOL_ID_MAX_LENGTH = 55;\n\n/** @class */\nvar CognitoUserPool = /*#__PURE__*/function () {\n  /**\n   * Constructs a new CognitoUserPool object\n   * @param {object} data Creation options.\n   * @param {string} data.UserPoolId Cognito user pool id.\n   * @param {string} data.ClientId User pool application client id.\n   * @param {string} data.endpoint Optional custom service endpoint.\n   * @param {object} data.fetchOptions Optional options for fetch API.\n   *        (only credentials option is supported)\n   * @param {object} data.Storage Optional storage object.\n   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional:\n   *        boolean flag indicating if the data collection is enabled\n   *        to support cognito advanced security features. By default, this\n   *        flag is set to true.\n   */\n  function CognitoUserPool(data, wrapRefreshSessionCallback) {\n    var _ref = data || {},\n      UserPoolId = _ref.UserPoolId,\n      ClientId = _ref.ClientId,\n      endpoint = _ref.endpoint,\n      fetchOptions = _ref.fetchOptions,\n      AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag;\n    if (!UserPoolId || !ClientId) {\n      throw new Error('Both UserPoolId and ClientId are required.');\n    }\n    if (UserPoolId.length > USER_POOL_ID_MAX_LENGTH || !/^[\\w-]+_[0-9a-zA-Z]+$/.test(UserPoolId)) {\n      throw new Error('Invalid UserPoolId format.');\n    }\n    var region = UserPoolId.split('_')[0];\n    this.userPoolId = UserPoolId;\n    this.clientId = ClientId;\n    this.client = new Client(region, endpoint, fetchOptions);\n\n    /**\n     * By default, AdvancedSecurityDataCollectionFlag is set to true,\n     * if no input value is provided.\n     */\n    this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag !== false;\n    this.storage = data.Storage || new StorageHelper().getStorage();\n    if (wrapRefreshSessionCallback) {\n      this.wrapRefreshSessionCallback = wrapRefreshSessionCallback;\n    }\n  }\n\n  /**\n   * @returns {string} the user pool id\n   */\n  var _proto = CognitoUserPool.prototype;\n  _proto.getUserPoolId = function getUserPoolId() {\n    return this.userPoolId;\n  }\n\n  /**\n   * @returns {string} the user pool name\n   */;\n  _proto.getUserPoolName = function getUserPoolName() {\n    return this.getUserPoolId().split('_')[1];\n  }\n\n  /**\n   * @returns {string} the client id\n   */;\n  _proto.getClientId = function getClientId() {\n    return this.clientId;\n  }\n\n  /**\n   * @typedef {object} SignUpResult\n   * @property {CognitoUser} user New user.\n   * @property {bool} userConfirmed If the user is already confirmed.\n   */\n  /**\n   * method for signing up a user\n   * @param {string} username User's username.\n   * @param {string} password Plain-text initial password entered by user.\n   * @param {(AttributeArg[])=} userAttributes New user attributes.\n   * @param {(AttributeArg[])=} validationData Application metadata.\n   * @param {(AttributeArg[])=} clientMetadata Client metadata.\n   * @param {nodeCallback<SignUpResult>} callback Called on error or with the new user.\n   * @param {ClientMetadata} clientMetadata object which is passed from client to Cognito Lambda trigger\n   * @returns {void}\n   */;\n  _proto.signUp = function signUp(username, password, userAttributes, validationData, callback, clientMetadata) {\n    var _this = this;\n    var jsonReq = {\n      ClientId: this.clientId,\n      Username: username,\n      Password: password,\n      UserAttributes: userAttributes,\n      ValidationData: validationData,\n      ClientMetadata: clientMetadata\n    };\n    if (this.getUserContextData(username)) {\n      jsonReq.UserContextData = this.getUserContextData(username);\n    }\n    this.client.request('SignUp', jsonReq, function (err, data) {\n      if (err) {\n        return callback(err, null);\n      }\n      var cognitoUser = {\n        Username: username,\n        Pool: _this,\n        Storage: _this.storage\n      };\n      var returnData = {\n        user: new CognitoUser(cognitoUser),\n        userConfirmed: data.UserConfirmed,\n        userSub: data.UserSub,\n        codeDeliveryDetails: data.CodeDeliveryDetails\n      };\n      return callback(null, returnData);\n    });\n  }\n\n  /**\n   * method for getting the current user of the application from the local storage\n   *\n   * @returns {CognitoUser} the user retrieved from storage\n   */;\n  _proto.getCurrentUser = function getCurrentUser() {\n    var lastUserKey = \"CognitoIdentityServiceProvider.\" + this.clientId + \".LastAuthUser\";\n    var lastAuthUser = this.storage.getItem(lastUserKey);\n    if (lastAuthUser) {\n      var cognitoUser = {\n        Username: lastAuthUser,\n        Pool: this,\n        Storage: this.storage\n      };\n      return new CognitoUser(cognitoUser);\n    }\n    return null;\n  }\n\n  /**\n   * This method returns the encoded data string used for cognito advanced security feature.\n   * This would be generated only when developer has included the JS used for collecting the\n   * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n   * features\n   * @param {string} username the username for the context data\n   * @returns {string} the user context data\n   **/;\n  _proto.getUserContextData = function getUserContextData(username) {\n    if (typeof AmazonCognitoAdvancedSecurityData === 'undefined') {\n      return undefined;\n    }\n    /* eslint-disable */\n    var amazonCognitoAdvancedSecurityDataConst = AmazonCognitoAdvancedSecurityData;\n    /* eslint-enable */\n\n    if (this.advancedSecurityDataCollectionFlag) {\n      var advancedSecurityData = amazonCognitoAdvancedSecurityDataConst.getData(username, this.userPoolId, this.clientId);\n      if (advancedSecurityData) {\n        var userContextData = {\n          EncodedData: advancedSecurityData\n        };\n        return userContextData;\n      }\n    }\n    return {};\n  };\n  return CognitoUserPool;\n}();\nexport { CognitoUserPool as default };",
      "start": 1702937441872,
      "end": 1702937441920,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441920,
      "end": 1702937441920,
      "order": "normal"
    }
  ]
}
