{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/ListGroupItem.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  // eslint-disable-next-line no-nested-ternary\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  process.env.NODE_ENV !== \"production\" ? warning(as || !(!action && props.href), '`action=false` and `href` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;",
      "start": 1702937441483,
      "end": 1702937441500,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441500,
      "end": 1702937441500,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "\"use client\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport warning from \"warning\";\nimport useEventCallback from \"@restart/hooks/useEventCallback\";\nimport { useNavItem } from \"@restart/ui/NavItem\";\nimport { makeEventKey } from \"@restart/ui/SelectableContext\";\nimport { useBootstrapPrefix } from \"./ThemeProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /* @__PURE__ */ React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, \"list-group-item\");\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback((event) => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    navItemProps.onClick(event);\n  });\n  if (disabled && props.tabIndex === void 0) {\n    props.tabIndex = -1;\n    props[\"aria-disabled\"] = true;\n  }\n  const Component = as || (action ? props.href ? \"a\" : \"button\" : \"div\");\n  false ? warning(as || !(!action && props.href), \"`action=false` and `href` should not be used together.\") : void 0;\n  return /* @__PURE__ */ _jsx(Component, {\n    ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && \"active\", disabled && \"disabled\", variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = \"ListGroupItem\";\nexport default ListGroupItem;\n",
      "start": 1702937441500,
      "end": 1702937441514,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1702937441514,
      "end": 1702937441514,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441514,
      "end": 1702937441514,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441514,
      "end": 1702937441514,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441514,
      "end": 1702937441514,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441514,
      "end": 1702937441514,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441514,
      "end": 1702937441514,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441514,
      "end": 1702937441514,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441514,
      "end": 1702937441514,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441514,
      "end": 1702937441514,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441514,
      "end": 1702937441514,
      "order": "normal"
    }
  ]
}
