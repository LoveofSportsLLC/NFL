{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/pascaligo.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = pascaligo\npascaligo.displayName = 'pascaligo'\npascaligo.aliases = []\nfunction pascaligo(Prism) {\n  ;(function (Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n    var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\n      /<braces>/g,\n      function () {\n        return braces\n      }\n    )\n    var pascaligo = (Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\n              /<type>/g,\n              function () {\n                return type\n              }\n            ),\n            'i'\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n              return type\n            }),\n            'i'\n          ),\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /(:\\s*)<type>/.source.replace(/<type>/g, function () {\n              return type\n            })\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      keyword: {\n        pattern:\n          /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: [\n        // Hexadecimal, octal and binary\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n      ],\n      operator:\n        /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    })\n    var classNameInside = [\n      'comment',\n      'keyword',\n      'builtin',\n      'operator',\n      'punctuation'\n    ].reduce(function (accum, key) {\n      accum[key] = pascaligo[key]\n      return accum\n    }, {})\n    pascaligo['class-name'].forEach(function (p) {\n      p.inside = classNameInside\n    })\n  })(Prism)\n}\n",
      "start": 1702937445004,
      "end": 1702937445028,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar pascaligo_1;\nvar hasRequiredPascaligo;\n\nfunction requirePascaligo () {\n\tif (hasRequiredPascaligo) return pascaligo_1;\n\thasRequiredPascaligo = 1;\n\t'use strict'\n\n\tpascaligo_1 = pascaligo\n\tpascaligo.displayName = 'pascaligo'\n\tpascaligo.aliases = []\n\tfunction pascaligo(Prism) {\n\t  ;(function (Prism) {\n\t    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n\t    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n\t    var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\n\t      /<braces>/g,\n\t      function () {\n\t        return braces\n\t      }\n\t    )\n\t    var pascaligo = (Prism.languages.pascaligo = {\n\t      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n\t      string: {\n\t        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n\t        greedy: true\n\t      },\n\t      'class-name': [\n\t        {\n\t          pattern: RegExp(\n\t            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\n\t              /<type>/g,\n\t              function () {\n\t                return type\n\t              }\n\t            ),\n\t            'i'\n\t          ),\n\t          lookbehind: true,\n\t          inside: null // see below\n\t        },\n\t        {\n\t          pattern: RegExp(\n\t            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n\t              return type\n\t            }),\n\t            'i'\n\t          ),\n\t          inside: null // see below\n\t        },\n\t        {\n\t          pattern: RegExp(\n\t            /(:\\s*)<type>/.source.replace(/<type>/g, function () {\n\t              return type\n\t            })\n\t          ),\n\t          lookbehind: true,\n\t          inside: null // see below\n\t        }\n\t      ],\n\t      keyword: {\n\t        pattern:\n\t          /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n\t        lookbehind: true\n\t      },\n\t      boolean: {\n\t        pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n\t        lookbehind: true\n\t      },\n\t      builtin: {\n\t        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n\t        lookbehind: true\n\t      },\n\t      function: /\\b\\w+(?=\\s*\\()/,\n\t      number: [\n\t        // Hexadecimal, octal and binary\n\t        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n\t        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n\t      ],\n\t      operator:\n\t        /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n\t      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n\t    })\n\t    var classNameInside = [\n\t      'comment',\n\t      'keyword',\n\t      'builtin',\n\t      'operator',\n\t      'punctuation'\n\t    ].reduce(function (accum, key) {\n\t      accum[key] = pascaligo[key]\n\t      return accum\n\t    }, {})\n\t    pascaligo['class-name'].forEach(function (p) {\n\t      p.inside = classNameInside\n\t    })\n\t  })(Prism)\n\t}\n\treturn pascaligo_1;\n}\n\nexport { requirePascaligo as __require };",
      "start": 1702937445028,
      "end": 1702937445029,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937445029,
      "end": 1702937445029,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445029,
      "end": 1702937445029,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445029,
      "end": 1702937445029,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445029,
      "end": 1702937445029,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445029,
      "end": 1702937445029,
      "order": "normal"
    }
  ]
}
