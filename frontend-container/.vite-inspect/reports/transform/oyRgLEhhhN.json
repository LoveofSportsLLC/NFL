{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/graphql/validation/rules/UniqueOperationTypesRule.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nexport function UniqueOperationTypesRule(context) {\n  const schema = context.getSchema();\n  const definedOperationTypes = Object.create(null);\n  const existingOperationTypes = schema\n    ? {\n        query: schema.getQueryType(),\n        mutation: schema.getMutationType(),\n        subscription: schema.getSubscriptionType(),\n      }\n    : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes,\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // See: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const operationTypesNodes =\n      (_node$operationTypes = node.operationTypes) !== null &&\n      _node$operationTypes !== void 0\n        ? _node$operationTypes\n        : [];\n\n    for (const operationType of operationTypesNodes) {\n      const operation = operationType.operation;\n      const alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(\n          new GraphQLError(\n            `Type for ${operation} already defined in the schema. It cannot be redefined.`,\n            {\n              nodes: operationType,\n            },\n          ),\n        );\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one ${operation} type in schema.`,\n            {\n              nodes: [alreadyDefinedOperationType, operationType],\n            },\n          ),\n        );\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n",
      "start": 1702937443092,
      "end": 1702937443106,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937443106,
      "end": 1702937443106,
      "order": "normal"
    }
  ]
}
