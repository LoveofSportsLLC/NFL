{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/AccordionButton.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;",
      "start": 1702937441296,
      "end": 1702937441419,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441419,
      "end": 1702937441419,
      "order": "normal"
    }
  ]
}
