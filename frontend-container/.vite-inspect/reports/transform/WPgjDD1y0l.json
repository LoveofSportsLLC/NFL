{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/reason.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = reason\nreason.displayName = 'reason'\nreason.aliases = []\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword:\n      /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    char: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      greedy: true\n    },\n    // Negative look-ahead prevents from matching things like String.capitalize\n    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }) // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n",
      "start": 1702937445039,
      "end": 1702937445059,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar reason_1;\nvar hasRequiredReason;\n\nfunction requireReason () {\n\tif (hasRequiredReason) return reason_1;\n\thasRequiredReason = 1;\n\t'use strict'\n\n\treason_1 = reason\n\treason.displayName = 'reason'\n\treason.aliases = []\n\tfunction reason(Prism) {\n\t  Prism.languages.reason = Prism.languages.extend('clike', {\n\t    string: {\n\t      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n\t      greedy: true\n\t    },\n\t    // 'class-name' must be matched *after* 'constructor' defined below\n\t    'class-name': /\\b[A-Z]\\w*/,\n\t    keyword:\n\t      /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n\t    operator:\n\t      /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n\t  })\n\t  Prism.languages.insertBefore('reason', 'class-name', {\n\t    char: {\n\t      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n\t      greedy: true\n\t    },\n\t    // Negative look-ahead prevents from matching things like String.capitalize\n\t    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n\t    label: {\n\t      pattern: /\\b[a-z]\\w*(?=::)/,\n\t      alias: 'symbol'\n\t    }\n\t  }) // We can't match functions property, so let's not even try.\n\t  delete Prism.languages.reason.function\n\t}\n\treturn reason_1;\n}\n\nexport { requireReason as __require };",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,SAAc,GAAG,MAAM;CACvB,MAAM,CAAC,WAAW,GAAG,QAAQ;CAC7B,MAAM,CAAC,OAAO,GAAG,EAAE;CACnB,SAAS,MAAM,CAAC,KAAK,EAAE;CACvB,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE;CAC3D,IAAI,MAAM,EAAE;CACZ,MAAM,OAAO,EAAE,qCAAqC;CACpD,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL;CACA,IAAI,YAAY,EAAE,YAAY;CAC9B,IAAI,OAAO;CACX,MAAM,2RAA2R;CACjS,IAAI,QAAQ;CACZ,MAAM,qGAAqG;CAC3G,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,EAAE,YAAY,EAAE;CACvD,IAAI,IAAI,EAAE;CACV,MAAM,OAAO,EAAE,+DAA+D;CAC9E,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL;CACA,IAAI,WAAW,EAAE,uBAAuB;CACxC,IAAI,KAAK,EAAE;CACX,MAAM,OAAO,EAAE,kBAAkB;CACjC,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ;CACxC"
      }
    },
    {
      "name": "inject",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445059,
      "end": 1702937445059,
      "order": "normal"
    }
  ]
}
