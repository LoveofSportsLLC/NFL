{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/pages/docs/EnvironmentVariables.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nconst Intro = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Introduction</h3>\r\n    <p className=\"text-lg\">\r\n      Your project can consume variables declared in your environment as if they\r\n      were declared locally in your JS files. By default you will have{\" \"}\r\n      <code>NODE_ENV</code> defined for you, and any other environment variables\r\n      starting with <code>VITE_</code>.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst Adding = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Adding environment variables</h3>\r\n    <p className=\"text-lg\">\r\n      To define permanent environment variables, create a file called{\" \"}\r\n      <code>.env</code> in the root of your project:\r\n    </p>\r\n\r\n    <Code>VITE_NOT_SECRET_CODE=abcdef</Code>\r\n\r\n    <p className=\"text-lg\">\r\n      Note: You need to restart the development server after changing{\" \"}\r\n      <code>.env</code> files.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst Accessing = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Accessing environment variables</h3>\r\n    <p className=\"text-lg\">\r\n      Environment variables will be defined for you on <code>process.env</code>.\r\n      For example, having an environment variable named{\" \"}\r\n      <code>VITE_NOT_SECRET_CODE</code> will be exposed in your JS as{\" \"}\r\n      <code>import.meta.env.VITE_NOT_SECRET_CODE</code>.\r\n    </p>\r\n\r\n    <Code>{`if (import.meta.env.NODE_ENV !== 'production') {\r\n  // do something\r\n}`}</Code>\r\n\r\n    <Code>{`<title>{import.meta.env.VITE_WEBSITE_NAME}</title>`}</Code>\r\n\r\n    <p className=\"text-lg\">\r\n      Note: You need to restart the development server after changing{\" \"}\r\n      <code>.env</code> files.\r\n    </p>\r\n  </div>\r\n);\r\nconst LearnMore = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Learn more</h3>\r\n    <p className=\"text-lg\">\r\n      To learn more about environment variables,{\" \"}\r\n      <a\r\n        href=\"https://vitejs.dev/guide/env-and-mode.html\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        click here\r\n      </a>\r\n      .\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst EnvironmentVariables = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Environment Variables\" />\r\n    <Container fluid className=\"p-0\">\r\n      <Row>\r\n        <Col lg={10} xl={8} className=\"col-xxl-7 mx-auto\">\r\n          <h1>Environment Variables</h1>\r\n          <hr className=\"my-4\" />\r\n          <Intro />\r\n          <Adding />\r\n          <Accessing />\r\n          <LearnMore />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default EnvironmentVariables;\r\n",
      "start": 1702937440809,
      "end": 1702937440872,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937440872,
      "end": 1702937440872,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937440872,
      "end": 1702937440872,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Code from \"../../components/Code\";\nconst Intro = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Introduction\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Your project can consume variables declared in your environment as if they were declared locally in your JS files. By default you will have\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"NODE_ENV\" }),\n    \" defined for you, and any other environment variables starting with \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"VITE_\" }),\n    \".\"\n  ] })\n] });\nconst Adding = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Adding environment variables\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"To define permanent environment variables, create a file called\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \".env\" }),\n    \" in the root of your project:\"\n  ] }),\n  /* @__PURE__ */ jsx(Code, { children: \"VITE_NOT_SECRET_CODE=abcdef\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Note: You need to restart the development server after changing\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \".env\" }),\n    \" files.\"\n  ] })\n] });\nconst Accessing = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Accessing environment variables\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Environment variables will be defined for you on \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"process.env\" }),\n    \". For example, having an environment variable named\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"VITE_NOT_SECRET_CODE\" }),\n    \" will be exposed in your JS as\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"import.meta.env.VITE_NOT_SECRET_CODE\" }),\n    \".\"\n  ] }),\n  /* @__PURE__ */ jsx(Code, { children: `if (import.meta.env.NODE_ENV !== 'production') {\n  // do something\n}` }),\n  /* @__PURE__ */ jsx(Code, { children: `<title>{import.meta.env.VITE_WEBSITE_NAME}</title>` }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Note: You need to restart the development server after changing\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \".env\" }),\n    \" files.\"\n  ] })\n] });\nconst LearnMore = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Learn more\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"To learn more about environment variables,\",\n    \" \",\n    /* @__PURE__ */ jsx(\n      \"a\",\n      {\n        href: \"https://vitejs.dev/guide/env-and-mode.html\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"click here\"\n      }\n    ),\n    \".\"\n  ] })\n] });\nconst EnvironmentVariables = () => /* @__PURE__ */ jsxs(React.Fragment, { children: [\n  /* @__PURE__ */ jsx(Helmet, { title: \"Environment Variables\" }),\n  /* @__PURE__ */ jsx(Container, { fluid: true, className: \"p-0\", children: /* @__PURE__ */ jsx(Row, { children: /* @__PURE__ */ jsxs(Col, { lg: 10, xl: 8, className: \"col-xxl-7 mx-auto\", children: [\n    /* @__PURE__ */ jsx(\"h1\", { children: \"Environment Variables\" }),\n    /* @__PURE__ */ jsx(\"hr\", { className: \"my-4\" }),\n    /* @__PURE__ */ jsx(Intro, {}),\n    /* @__PURE__ */ jsx(Adding, {}),\n    /* @__PURE__ */ jsx(Accessing, {}),\n    /* @__PURE__ */ jsx(LearnMore, {})\n  ] }) }) })\n] });\nexport default EnvironmentVariables;\n",
      "start": 1702937440872,
      "end": 1702937440875,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/pages/docs/EnvironmentVariables.jsx"
        ],
        "sourcesContent": [
          "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nconst Intro = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Introduction</h3>\r\n    <p className=\"text-lg\">\r\n      Your project can consume variables declared in your environment as if they\r\n      were declared locally in your JS files. By default you will have{\" \"}\r\n      <code>NODE_ENV</code> defined for you, and any other environment variables\r\n      starting with <code>VITE_</code>.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst Adding = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Adding environment variables</h3>\r\n    <p className=\"text-lg\">\r\n      To define permanent environment variables, create a file called{\" \"}\r\n      <code>.env</code> in the root of your project:\r\n    </p>\r\n\r\n    <Code>VITE_NOT_SECRET_CODE=abcdef</Code>\r\n\r\n    <p className=\"text-lg\">\r\n      Note: You need to restart the development server after changing{\" \"}\r\n      <code>.env</code> files.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst Accessing = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Accessing environment variables</h3>\r\n    <p className=\"text-lg\">\r\n      Environment variables will be defined for you on <code>process.env</code>.\r\n      For example, having an environment variable named{\" \"}\r\n      <code>VITE_NOT_SECRET_CODE</code> will be exposed in your JS as{\" \"}\r\n      <code>import.meta.env.VITE_NOT_SECRET_CODE</code>.\r\n    </p>\r\n\r\n    <Code>{`if (import.meta.env.NODE_ENV !== 'production') {\r\n  // do something\r\n}`}</Code>\r\n\r\n    <Code>{`<title>{import.meta.env.VITE_WEBSITE_NAME}</title>`}</Code>\r\n\r\n    <p className=\"text-lg\">\r\n      Note: You need to restart the development server after changing{\" \"}\r\n      <code>.env</code> files.\r\n    </p>\r\n  </div>\r\n);\r\nconst LearnMore = () => (\r\n  <div className=\"mb-5\">\r\n    <h3>Learn more</h3>\r\n    <p className=\"text-lg\">\r\n      To learn more about environment variables,{\" \"}\r\n      <a\r\n        href=\"https://vitejs.dev/guide/env-and-mode.html\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        click here\r\n      </a>\r\n      .\r\n    </p>\r\n  </div>\r\n);\r\n\r\nconst EnvironmentVariables = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Environment Variables\" />\r\n    <Container fluid className=\"p-0\">\r\n      <Row>\r\n        <Col lg={10} xl={8} className=\"col-xxl-7 mx-auto\">\r\n          <h1>Environment Variables</h1>\r\n          <hr className=\"my-4\" />\r\n          <Intro />\r\n          <Adding />\r\n          <Accessing />\r\n          <LearnMore />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default EnvironmentVariables;\r\n"
        ],
        "mappings": "AAQI,cACA,YADA;AARJ,OAAO,WAAW;AAClB,SAAS,cAAc;AACvB,SAAS,KAAK,WAAW,WAAW;AAEpC,OAAO,UAAU;AAEjB,MAAM,QAAQ,MACZ,qBAAC,SAAI,WAAU,QACb;AAAA,sBAAC,QAAG,0BAAY;AAAA,EAChB,qBAAC,OAAE,WAAU,WAAU;AAAA;AAAA,IAE4C;AAAA,IACjE,oBAAC,UAAK,sBAAQ;AAAA,IAAO;AAAA,IACP,oBAAC,UAAK,mBAAK;AAAA,IAAO;AAAA,KAClC;AAAA,GACF;AAGF,MAAM,SAAS,MACb,qBAAC,SAAI,WAAU,QACb;AAAA,sBAAC,QAAG,0CAA4B;AAAA,EAChC,qBAAC,OAAE,WAAU,WAAU;AAAA;AAAA,IAC2C;AAAA,IAChE,oBAAC,UAAK,kBAAI;AAAA,IAAO;AAAA,KACnB;AAAA,EAEA,oBAAC,QAAK,yCAA2B;AAAA,EAEjC,qBAAC,OAAE,WAAU,WAAU;AAAA;AAAA,IAC2C;AAAA,IAChE,oBAAC,UAAK,kBAAI;AAAA,IAAO;AAAA,KACnB;AAAA,GACF;AAGF,MAAM,YAAY,MAChB,qBAAC,SAAI,WAAU,QACb;AAAA,sBAAC,QAAG,6CAA+B;AAAA,EACnC,qBAAC,OAAE,WAAU,WAAU;AAAA;AAAA,IAC4B,oBAAC,UAAK,yBAAW;AAAA,IAAO;AAAA,IACvB;AAAA,IAClD,oBAAC,UAAK,kCAAoB;AAAA,IAAO;AAAA,IAA+B;AAAA,IAChE,oBAAC,UAAK,kDAAoC;AAAA,IAAO;AAAA,KACnD;AAAA,EAEA,oBAAC,QAAM;AAAA;AAAA,IAER;AAAA,EAEC,oBAAC,QAAM,gEAAqD;AAAA,EAE5D,qBAAC,OAAE,WAAU,WAAU;AAAA;AAAA,IAC2C;AAAA,IAChE,oBAAC,UAAK,kBAAI;AAAA,IAAO;AAAA,KACnB;AAAA,GACF;AAEF,MAAM,YAAY,MAChB,qBAAC,SAAI,WAAU,QACb;AAAA,sBAAC,QAAG,wBAAU;AAAA,EACd,qBAAC,OAAE,WAAU,WAAU;AAAA;AAAA,IACsB;AAAA,IAC3C;AAAA,MAAC;AAAA;AAAA,QACC,MAAK;AAAA,QACL,QAAO;AAAA,QACP,KAAI;AAAA,QACL;AAAA;AAAA,IAED;AAAA,IAAI;AAAA,KAEN;AAAA,GACF;AAGF,MAAM,uBAAuB,MAC3B,qBAAC,MAAM,UAAN,EACC;AAAA,sBAAC,UAAO,OAAM,yBAAwB;AAAA,EACtC,oBAAC,aAAU,OAAK,MAAC,WAAU,OACzB,8BAAC,OACC,+BAAC,OAAI,IAAI,IAAI,IAAI,GAAG,WAAU,qBAC5B;AAAA,wBAAC,QAAG,mCAAqB;AAAA,IACzB,oBAAC,QAAG,WAAU,QAAO;AAAA,IACrB,oBAAC,SAAM;AAAA,IACP,oBAAC,UAAO;AAAA,IACR,oBAAC,aAAU;AAAA,IACX,oBAAC,aAAU;AAAA,KACb,GACF,GACF;AAAA,GACF;AAGF,eAAe;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937440876,
      "end": 1702937440876,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Code from \"../../components/Code\";\nconst Intro = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Introduction\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Your project can consume variables declared in your environment as if they were declared locally in your JS files. By default you will have\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"NODE_ENV\" }),\n    \" defined for you, and any other environment variables starting with \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"VITE_\" }),\n    \".\"\n  ] })\n] });\nconst Adding = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Adding environment variables\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"To define permanent environment variables, create a file called\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \".env\" }),\n    \" in the root of your project:\"\n  ] }),\n  /* @__PURE__ */ jsx(Code, { children: \"VITE_NOT_SECRET_CODE=abcdef\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Note: You need to restart the development server after changing\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \".env\" }),\n    \" files.\"\n  ] })\n] });\nconst Accessing = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Accessing environment variables\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Environment variables will be defined for you on \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"process.env\" }),\n    \". For example, having an environment variable named\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"VITE_NOT_SECRET_CODE\" }),\n    \" will be exposed in your JS as\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"import.meta.env.VITE_NOT_SECRET_CODE\" }),\n    \".\"\n  ] }),\n  /* @__PURE__ */ jsx(Code, { children: `if (import.meta.env.NODE_ENV !== 'production') {\n  // do something\n}` }),\n  /* @__PURE__ */ jsx(Code, { children: `<title>{import.meta.env.VITE_WEBSITE_NAME}</title>` }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Note: You need to restart the development server after changing\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \".env\" }),\n    \" files.\"\n  ] })\n] });\nconst LearnMore = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Learn more\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"To learn more about environment variables,\",\n    \" \",\n    /* @__PURE__ */ jsx(\n      \"a\",\n      {\n        href: \"https://vitejs.dev/guide/env-and-mode.html\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"click here\"\n      }\n    ),\n    \".\"\n  ] })\n] });\nconst EnvironmentVariables = () => /* @__PURE__ */ jsxs(React.Fragment, { children: [\n  /* @__PURE__ */ jsx(Helmet, { title: \"Environment Variables\" }),\n  /* @__PURE__ */ jsx(Container, { fluid: true, className: \"p-0\", children: /* @__PURE__ */ jsx(Row, { children: /* @__PURE__ */ jsxs(Col, { lg: 10, xl: 8, className: \"col-xxl-7 mx-auto\", children: [\n    /* @__PURE__ */ jsx(\"h1\", { children: \"Environment Variables\" }),\n    /* @__PURE__ */ jsx(\"hr\", { className: \"my-4\" }),\n    /* @__PURE__ */ jsx(Intro, {}),\n    /* @__PURE__ */ jsx(Adding, {}),\n    /* @__PURE__ */ jsx(Accessing, {}),\n    /* @__PURE__ */ jsx(LearnMore, {})\n  ] }) }) })\n] });\nexport default EnvironmentVariables;\n",
      "start": 1702937440876,
      "end": 1702937440889,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1702937440889,
      "end": 1702937440889,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937440889,
      "end": 1702937440889,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937440889,
      "end": 1702937440889,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937440889,
      "end": 1702937440889,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937440889,
      "end": 1702937440889,
      "order": "normal"
    },
    {
      "name": "inject",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Code from \"../../components/Code\";\nconst Intro = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Introduction\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Your project can consume variables declared in your environment as if they were declared locally in your JS files. By default you will have\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"NODE_ENV\" }),\n    \" defined for you, and any other environment variables starting with \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"VITE_\" }),\n    \".\"\n  ] })\n] });\nconst Adding = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Adding environment variables\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"To define permanent environment variables, create a file called\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \".env\" }),\n    \" in the root of your project:\"\n  ] }),\n  /* @__PURE__ */ jsx(Code, { children: \"VITE_NOT_SECRET_CODE=abcdef\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Note: You need to restart the development server after changing\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \".env\" }),\n    \" files.\"\n  ] })\n] });\nconst Accessing = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Accessing environment variables\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Environment variables will be defined for you on \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"process.env\" }),\n    \". For example, having an environment variable named\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"VITE_NOT_SECRET_CODE\" }),\n    \" will be exposed in your JS as\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \"import.meta.env.VITE_NOT_SECRET_CODE\" }),\n    \".\"\n  ] }),\n  /* @__PURE__ */ jsx(Code, { children: `if (import.meta.env.NODE_ENV !== 'production') {\n  // do something\n}` }),\n  /* @__PURE__ */ jsx(Code, { children: `<title>{import.meta.env.VITE_WEBSITE_NAME}</title>` }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"Note: You need to restart the development server after changing\",\n    \" \",\n    /* @__PURE__ */ jsx(\"code\", { children: \".env\" }),\n    \" files.\"\n  ] })\n] });\nconst LearnMore = () => /* @__PURE__ */ jsxs(\"div\", { className: \"mb-5\", children: [\n  /* @__PURE__ */ jsx(\"h3\", { children: \"Learn more\" }),\n  /* @__PURE__ */ jsxs(\"p\", { className: \"text-lg\", children: [\n    \"To learn more about environment variables,\",\n    \" \",\n    /* @__PURE__ */ jsx(\n      \"a\",\n      {\n        href: \"https://vitejs.dev/guide/env-and-mode.html\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"click here\"\n      }\n    ),\n    \".\"\n  ] })\n] });\nconst EnvironmentVariables = () => /* @__PURE__ */ jsxs(React.Fragment, { children: [\n  /* @__PURE__ */ jsx(Helmet, { title: \"Environment Variables\" }),\n  /* @__PURE__ */ jsx(Container, { fluid: true, className: \"p-0\", children: /* @__PURE__ */ jsx(Row, { children: /* @__PURE__ */ jsxs(Col, { lg: 10, xl: 8, className: \"col-xxl-7 mx-auto\", children: [\n    /* @__PURE__ */ jsx(\"h1\", { children: \"Environment Variables\" }),\n    /* @__PURE__ */ jsx(\"hr\", { className: \"my-4\" }),\n    /* @__PURE__ */ jsx(Intro, {}),\n    /* @__PURE__ */ jsx(Adding, {}),\n    /* @__PURE__ */ jsx(Accessing, {}),\n    /* @__PURE__ */ jsx(LearnMore, {})\n  ] }) }) })\n] });\nexport default EnvironmentVariables;\n",
      "start": 1702937440889,
      "end": 1702937440890,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClvjtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACztE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpxtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjhtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClvM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937440890,
      "end": 1702937440890,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937440890,
      "end": 1702937440890,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937440890,
      "end": 1702937440890,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937440890,
      "end": 1702937440890,
      "order": "normal"
    }
  ]
}
