{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/highlight.js/lib/languages/yaml.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: YAML\nDescription: Yet Another Markdown Language\nAuthor: Stefan Wienert <stwienert@gmail.com>\nContributors: Carl Baxter <carl@cbax.tech>\nRequires: ruby.js\nWebsite: https://yaml.org\nCategory: common, config\n*/\nfunction yaml(hljs) {\n  var LITERALS = 'true false yes no null';\n\n  // YAML spec allows non-reserved URI characters in tags.\n  var URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+';\n\n  // Define keys as starting with a word character\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\n  // ...and ending with a colon followed immediately by a space, tab or newline.\n  // The YAML spec allows for much more than this, but this covers most use-cases.\n  var KEY = {\n    className: 'attr',\n    variants: [\n      { begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)' },\n      { begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)' }, // double quoted keys\n      { begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)' } // single quoted keys\n    ]\n  };\n\n  var TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { begin: /\\{\\{/, end: /\\}\\}/ }, // jinja templates Ansible\n      { begin: /%\\{/, end: /\\}/ } // Ruby i18n\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      { begin: /'/, end: /'/ },\n      { begin: /\"/, end: /\"/ },\n      { begin: /\\S+/ }\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  // Strings inside of value containers (objects) can't contain braces,\n  // brackets, or commas\n  var CONTAINER_STRING = hljs.inherit(STRING, {\n    variants: [\n      { begin: /'/, end: /'/ },\n      { begin: /\"/, end: /\"/ },\n      { begin: /[^\\s,{}[\\]]+/ }\n    ]\n  });\n\n  var DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\n  var TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\n  var FRACTION_RE = '(\\\\.[0-9]*)?';\n  var ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\n  var TIMESTAMP = {\n    className: 'number',\n    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\n  };\n\n  var VALUE_CONTAINER = {\n    end: ',',\n    endsWithParent: true,\n    excludeEnd: true,\n    keywords: LITERALS,\n    relevance: 0\n  };\n  var OBJECT = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: [VALUE_CONTAINER],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n  var ARRAY = {\n    begin: '\\\\[',\n    end: '\\\\]',\n    contains: [VALUE_CONTAINER],\n    illegal: '\\\\n',\n    relevance: 0\n  };\n\n  var MODES = [\n    KEY,\n    {\n      className: 'meta',\n      begin: '^---\\\\s*$',\n      relevance: 10\n    },\n    { // multi line string\n      // Blocks start with a | or > followed by a newline\n      //\n      // Indentation of subsequent lines must be the same to\n      // be considered part of the block\n      className: 'string',\n      begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\n    },\n    { // Ruby/Rails erb\n      begin: '<%[%=-]?',\n      end: '[%-]?%>',\n      subLanguage: 'ruby',\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0\n    },\n    { // named tags\n      className: 'type',\n      begin: '!\\\\w+!' + URI_CHARACTERS\n    },\n    // https://yaml.org/spec/1.2/spec.html#id2784064\n    { // verbatim tags\n      className: 'type',\n      begin: '!<' + URI_CHARACTERS + \">\"\n    },\n    { // primary tags\n      className: 'type',\n      begin: '!' + URI_CHARACTERS\n    },\n    { // secondary tags\n      className: 'type',\n      begin: '!!' + URI_CHARACTERS\n    },\n    { // fragment id &ref\n      className: 'meta',\n      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // fragment reference *ref\n      className: 'meta',\n      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n    },\n    { // array listing\n      className: 'bullet',\n      // TODO: remove |$ hack when we have proper look-ahead support\n      begin: '-(?=[ ]|$)',\n      relevance: 0\n    },\n    hljs.HASH_COMMENT_MODE,\n    {\n      beginKeywords: LITERALS,\n      keywords: { literal: LITERALS }\n    },\n    TIMESTAMP,\n    // numbers are any valid C-style number that\n    // sit isolated from other words\n    {\n      className: 'number',\n      begin: hljs.C_NUMBER_RE + '\\\\b',\n      relevance: 0\n    },\n    OBJECT,\n    ARRAY,\n    STRING\n  ];\n\n  var VALUE_MODES = [...MODES];\n  VALUE_MODES.pop();\n  VALUE_MODES.push(CONTAINER_STRING);\n  VALUE_CONTAINER.contains = VALUE_MODES;\n\n  return {\n    name: 'YAML',\n    case_insensitive: true,\n    aliases: [ 'yml' ],\n    contains: MODES\n  };\n}\n\nmodule.exports = yaml;\n",
      "start": 1702937444588,
      "end": 1702937444643,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444643,
      "end": 1702937444643,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444643,
      "end": 1702937444643,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444643,
      "end": 1702937444643,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444643,
      "end": 1702937444643,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444643,
      "end": 1702937444643,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444643,
      "end": 1702937444643,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444643,
      "end": 1702937444643,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444643,
      "end": 1702937444643,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444643,
      "end": 1702937444643,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444643,
      "end": 1702937444643,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: YAML\nDescription: Yet Another Markdown Language\nAuthor: Stefan Wienert <stwienert@gmail.com>\nContributors: Carl Baxter <carl@cbax.tech>\nRequires: ruby.js\nWebsite: https://yaml.org\nCategory: common, config\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar yaml_1;\nvar hasRequiredYaml;\n\nfunction requireYaml () {\n\tif (hasRequiredYaml) return yaml_1;\n\thasRequiredYaml = 1;\n\tfunction yaml(hljs) {\n\t  var LITERALS = 'true false yes no null';\n\n\t  // YAML spec allows non-reserved URI characters in tags.\n\t  var URI_CHARACTERS = '[\\\\w#;/?:@&=+$,.~*\\'()[\\\\]]+';\n\n\t  // Define keys as starting with a word character\n\t  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\n\t  // ...and ending with a colon followed immediately by a space, tab or newline.\n\t  // The YAML spec allows for much more than this, but this covers most use-cases.\n\t  var KEY = {\n\t    className: 'attr',\n\t    variants: [\n\t      { begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)' },\n\t      { begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)' }, // double quoted keys\n\t      { begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)' } // single quoted keys\n\t    ]\n\t  };\n\n\t  var TEMPLATE_VARIABLES = {\n\t    className: 'template-variable',\n\t    variants: [\n\t      { begin: /\\{\\{/, end: /\\}\\}/ }, // jinja templates Ansible\n\t      { begin: /%\\{/, end: /\\}/ } // Ruby i18n\n\t    ]\n\t  };\n\t  var STRING = {\n\t    className: 'string',\n\t    relevance: 0,\n\t    variants: [\n\t      { begin: /'/, end: /'/ },\n\t      { begin: /\"/, end: /\"/ },\n\t      { begin: /\\S+/ }\n\t    ],\n\t    contains: [\n\t      hljs.BACKSLASH_ESCAPE,\n\t      TEMPLATE_VARIABLES\n\t    ]\n\t  };\n\n\t  // Strings inside of value containers (objects) can't contain braces,\n\t  // brackets, or commas\n\t  var CONTAINER_STRING = hljs.inherit(STRING, {\n\t    variants: [\n\t      { begin: /'/, end: /'/ },\n\t      { begin: /\"/, end: /\"/ },\n\t      { begin: /[^\\s,{}[\\]]+/ }\n\t    ]\n\t  });\n\n\t  var DATE_RE = '[0-9]{4}(-[0-9][0-9]){0,2}';\n\t  var TIME_RE = '([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?';\n\t  var FRACTION_RE = '(\\\\.[0-9]*)?';\n\t  var ZONE_RE = '([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?';\n\t  var TIMESTAMP = {\n\t    className: 'number',\n\t    begin: '\\\\b' + DATE_RE + TIME_RE + FRACTION_RE + ZONE_RE + '\\\\b'\n\t  };\n\n\t  var VALUE_CONTAINER = {\n\t    end: ',',\n\t    endsWithParent: true,\n\t    excludeEnd: true,\n\t    keywords: LITERALS,\n\t    relevance: 0\n\t  };\n\t  var OBJECT = {\n\t    begin: /\\{/,\n\t    end: /\\}/,\n\t    contains: [VALUE_CONTAINER],\n\t    illegal: '\\\\n',\n\t    relevance: 0\n\t  };\n\t  var ARRAY = {\n\t    begin: '\\\\[',\n\t    end: '\\\\]',\n\t    contains: [VALUE_CONTAINER],\n\t    illegal: '\\\\n',\n\t    relevance: 0\n\t  };\n\n\t  var MODES = [\n\t    KEY,\n\t    {\n\t      className: 'meta',\n\t      begin: '^---\\\\s*$',\n\t      relevance: 10\n\t    },\n\t    { // multi line string\n\t      // Blocks start with a | or > followed by a newline\n\t      //\n\t      // Indentation of subsequent lines must be the same to\n\t      // be considered part of the block\n\t      className: 'string',\n\t      begin: '[\\\\|>]([1-9]?[+-])?[ ]*\\\\n( +)[^ ][^\\\\n]*\\\\n(\\\\2[^\\\\n]+\\\\n?)*'\n\t    },\n\t    { // Ruby/Rails erb\n\t      begin: '<%[%=-]?',\n\t      end: '[%-]?%>',\n\t      subLanguage: 'ruby',\n\t      excludeBegin: true,\n\t      excludeEnd: true,\n\t      relevance: 0\n\t    },\n\t    { // named tags\n\t      className: 'type',\n\t      begin: '!\\\\w+!' + URI_CHARACTERS\n\t    },\n\t    // https://yaml.org/spec/1.2/spec.html#id2784064\n\t    { // verbatim tags\n\t      className: 'type',\n\t      begin: '!<' + URI_CHARACTERS + \">\"\n\t    },\n\t    { // primary tags\n\t      className: 'type',\n\t      begin: '!' + URI_CHARACTERS\n\t    },\n\t    { // secondary tags\n\t      className: 'type',\n\t      begin: '!!' + URI_CHARACTERS\n\t    },\n\t    { // fragment id &ref\n\t      className: 'meta',\n\t      begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$'\n\t    },\n\t    { // fragment reference *ref\n\t      className: 'meta',\n\t      begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n\t    },\n\t    { // array listing\n\t      className: 'bullet',\n\t      // TODO: remove |$ hack when we have proper look-ahead support\n\t      begin: '-(?=[ ]|$)',\n\t      relevance: 0\n\t    },\n\t    hljs.HASH_COMMENT_MODE,\n\t    {\n\t      beginKeywords: LITERALS,\n\t      keywords: { literal: LITERALS }\n\t    },\n\t    TIMESTAMP,\n\t    // numbers are any valid C-style number that\n\t    // sit isolated from other words\n\t    {\n\t      className: 'number',\n\t      begin: hljs.C_NUMBER_RE + '\\\\b',\n\t      relevance: 0\n\t    },\n\t    OBJECT,\n\t    ARRAY,\n\t    STRING\n\t  ];\n\n\t  var VALUE_MODES = [...MODES];\n\t  VALUE_MODES.pop();\n\t  VALUE_MODES.push(CONTAINER_STRING);\n\t  VALUE_CONTAINER.contains = VALUE_MODES;\n\n\t  return {\n\t    name: 'YAML',\n\t    case_insensitive: true,\n\t    aliases: [ 'yml' ],\n\t    contains: MODES\n\t  };\n\t}\n\n\tyaml_1 = yaml;\n\treturn yaml_1;\n}\n\nexport { requireYaml as __require };",
      "start": 1702937444643,
      "end": 1702937444644,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;;;;CASA,SAAS,IAAI,CAAC,IAAI,EAAE;CACpB,EAAE,IAAI,QAAQ,GAAG,wBAAwB,CAAC;AAC1C;CACA;CACA,EAAE,IAAI,cAAc,GAAG,8BAA8B,CAAC;AACtD;CACA;CACA;CACA;CACA;CACA,EAAE,IAAI,GAAG,GAAG;CACZ,IAAI,SAAS,EAAE,MAAM;CACrB,IAAI,QAAQ,EAAE;CACd,MAAM,EAAE,KAAK,EAAE,8BAA8B,EAAE;CAC/C,MAAM,EAAE,KAAK,EAAE,gCAAgC,EAAE;CACjD,MAAM,EAAE,KAAK,EAAE,kCAAkC,EAAE;CACnD,KAAK;CACL,GAAG,CAAC;AACJ;CACA,EAAE,IAAI,kBAAkB,GAAG;CAC3B,IAAI,SAAS,EAAE,mBAAmB;CAClC,IAAI,QAAQ,EAAE;CACd,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE;CACpC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE;CACjC,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,IAAI,MAAM,GAAG;CACf,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,SAAS,EAAE,CAAC;CAChB,IAAI,QAAQ,EAAE;CACd,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;CAC9B,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;CAC9B,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE;CACtB,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM,IAAI,CAAC,gBAAgB;CAC3B,MAAM,kBAAkB;CACxB,KAAK;CACL,GAAG,CAAC;AACJ;CACA;CACA;CACA,EAAE,IAAI,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;CAC9C,IAAI,QAAQ,EAAE;CACd,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;CAC9B,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;CAC9B,MAAM,EAAE,KAAK,EAAE,cAAc,EAAE;CAC/B,KAAK;CACL,GAAG,CAAC,CAAC;AACL;CACA,EAAE,IAAI,OAAO,GAAG,4BAA4B,CAAC;CAC7C,EAAE,IAAI,OAAO,GAAG,wCAAwC,CAAC;CACzD,EAAE,IAAI,WAAW,GAAG,cAAc,CAAC;CACnC,EAAE,IAAI,OAAO,GAAG,6CAA6C,CAAC;CAC9D,EAAE,IAAI,SAAS,GAAG;CAClB,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,KAAK,EAAE,KAAK,GAAG,OAAO,GAAG,OAAO,GAAG,WAAW,GAAG,OAAO,GAAG,KAAK;CACpE,GAAG,CAAC;AACJ;CACA,EAAE,IAAI,eAAe,GAAG;CACxB,IAAI,GAAG,EAAE,GAAG;CACZ,IAAI,cAAc,EAAE,IAAI;CACxB,IAAI,UAAU,EAAE,IAAI;CACpB,IAAI,QAAQ,EAAE,QAAQ;CACtB,IAAI,SAAS,EAAE,CAAC;CAChB,GAAG,CAAC;CACJ,EAAE,IAAI,MAAM,GAAG;CACf,IAAI,KAAK,EAAE,IAAI;CACf,IAAI,GAAG,EAAE,IAAI;CACb,IAAI,QAAQ,EAAE,CAAC,eAAe,CAAC;CAC/B,IAAI,OAAO,EAAE,KAAK;CAClB,IAAI,SAAS,EAAE,CAAC;CAChB,GAAG,CAAC;CACJ,EAAE,IAAI,KAAK,GAAG;CACd,IAAI,KAAK,EAAE,KAAK;CAChB,IAAI,GAAG,EAAE,KAAK;CACd,IAAI,QAAQ,EAAE,CAAC,eAAe,CAAC;CAC/B,IAAI,OAAO,EAAE,KAAK;CAClB,IAAI,SAAS,EAAE,CAAC;CAChB,GAAG,CAAC;AACJ;CACA,EAAE,IAAI,KAAK,GAAG;CACd,IAAI,GAAG;CACP,IAAI;CACJ,MAAM,SAAS,EAAE,MAAM;CACvB,MAAM,KAAK,EAAE,WAAW;CACxB,MAAM,SAAS,EAAE,EAAE;CACnB,KAAK;CACL,IAAI;CACJ;CACA;CACA;CACA;CACA,MAAM,SAAS,EAAE,QAAQ;CACzB,MAAM,KAAK,EAAE,+DAA+D;CAC5E,KAAK;CACL,IAAI;CACJ,MAAM,KAAK,EAAE,UAAU;CACvB,MAAM,GAAG,EAAE,SAAS;CACpB,MAAM,WAAW,EAAE,MAAM;CACzB,MAAM,YAAY,EAAE,IAAI;CACxB,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,SAAS,EAAE,CAAC;CAClB,KAAK;CACL,IAAI;CACJ,MAAM,SAAS,EAAE,MAAM;CACvB,MAAM,KAAK,EAAE,QAAQ,GAAG,cAAc;CACtC,KAAK;CACL;CACA,IAAI;CACJ,MAAM,SAAS,EAAE,MAAM;CACvB,MAAM,KAAK,EAAE,IAAI,GAAG,cAAc,GAAG,GAAG;CACxC,KAAK;CACL,IAAI;CACJ,MAAM,SAAS,EAAE,MAAM;CACvB,MAAM,KAAK,EAAE,GAAG,GAAG,cAAc;CACjC,KAAK;CACL,IAAI;CACJ,MAAM,SAAS,EAAE,MAAM;CACvB,MAAM,KAAK,EAAE,IAAI,GAAG,cAAc;CAClC,KAAK;CACL,IAAI;CACJ,MAAM,SAAS,EAAE,MAAM;CACvB,MAAM,KAAK,EAAE,GAAG,GAAG,IAAI,CAAC,mBAAmB,GAAG,GAAG;CACjD,KAAK;CACL,IAAI;CACJ,MAAM,SAAS,EAAE,MAAM;CACvB,MAAM,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,mBAAmB,GAAG,GAAG;CACnD,KAAK;CACL,IAAI;CACJ,MAAM,SAAS,EAAE,QAAQ;CACzB;CACA,MAAM,KAAK,EAAE,YAAY;CACzB,MAAM,SAAS,EAAE,CAAC;CAClB,KAAK;CACL,IAAI,IAAI,CAAC,iBAAiB;CAC1B,IAAI;CACJ,MAAM,aAAa,EAAE,QAAQ;CAC7B,MAAM,QAAQ,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE;CACrC,KAAK;CACL,IAAI,SAAS;CACb;CACA;CACA,IAAI;CACJ,MAAM,SAAS,EAAE,QAAQ;CACzB,MAAM,KAAK,EAAE,IAAI,CAAC,WAAW,GAAG,KAAK;CACrC,MAAM,SAAS,EAAE,CAAC;CAClB,KAAK;CACL,IAAI,MAAM;CACV,IAAI,KAAK;CACT,IAAI,MAAM;CACV,GAAG,CAAC;AACJ;CACA,EAAE,IAAI,WAAW,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;CAC/B,EAAE,WAAW,CAAC,GAAG,EAAE,CAAC;CACpB,EAAE,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;CACrC,EAAE,eAAe,CAAC,QAAQ,GAAG,WAAW,CAAC;AACzC;CACA,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,MAAM;CAChB,IAAI,gBAAgB,EAAE,IAAI;CAC1B,IAAI,OAAO,EAAE,EAAE,KAAK,EAAE;CACtB,IAAI,QAAQ,EAAE,KAAK;CACnB,GAAG,CAAC;CACJ,CAAC;AACD;AACA,OAAc,GAAG,IAAI"
      }
    },
    {
      "name": "inject",
      "start": 1702937444644,
      "end": 1702937444644,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444644,
      "end": 1702937444644,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444644,
      "end": 1702937444644,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444644,
      "end": 1702937444644,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444644,
      "end": 1702937444644,
      "order": "normal"
    }
  ]
}
