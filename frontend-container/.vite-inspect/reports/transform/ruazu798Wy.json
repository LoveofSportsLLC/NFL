{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/@restart/hooks/esm/useMergeState.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useCallback, useState } from 'react';\n\n/**\n * Updates state, partial updates are merged into existing state values\n */\n\n/**\n * Mimics a React class component's state model, of having a single unified\n * `state` object and an updater that merges updates into the existing state, as\n * opposed to replacing it.\n *\n * ```js\n * const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n *\n * setState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n *\n * setState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n * ```\n *\n * @param initialState The initial state object\n */\nexport default function useMergeState(initialState) {\n  const [state, setState] = useState(initialState);\n  const updater = useCallback(update => {\n    if (update === null) return;\n    if (typeof update === 'function') {\n      setState(state => {\n        const nextState = update(state);\n        return nextState == null ? state : Object.assign({}, state, nextState);\n      });\n    } else {\n      setState(state => Object.assign({}, state, update));\n    }\n  }, [setState]);\n  return [state, updater];\n}",
      "start": 1702937443996,
      "end": 1702937444011,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444011,
      "end": 1702937444011,
      "order": "normal"
    }
  ]
}
