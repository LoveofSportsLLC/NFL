{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/property-information/lib/util/defined-info.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nvar Info = require('./info')\nvar types = require('./types')\n\nmodule.exports = DefinedInfo\n\nDefinedInfo.prototype = new Info()\nDefinedInfo.prototype.defined = true\n\nvar checks = [\n  'boolean',\n  'booleanish',\n  'overloadedBoolean',\n  'number',\n  'commaSeparated',\n  'spaceSeparated',\n  'commaOrSpaceSeparated'\n]\nvar checksLength = checks.length\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  var index = -1\n  var check\n\n  mark(this, 'space', space)\n\n  Info.call(this, property, attribute)\n\n  while (++index < checksLength) {\n    check = checks[index]\n    mark(this, check, (mask & types[check]) === types[check])\n  }\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n",
      "start": 1702937445385,
      "end": 1702937445395,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445395,
      "end": 1702937445395,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445395,
      "end": 1702937445395,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445395,
      "end": 1702937445395,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445395,
      "end": 1702937445395,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445395,
      "end": 1702937445395,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445395,
      "end": 1702937445395,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445395,
      "end": 1702937445395,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445395,
      "end": 1702937445395,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445395,
      "end": 1702937445395,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445395,
      "end": 1702937445395,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport require$$0 from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/property-information/lib/util/info.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/property-information/lib/util/types.js?commonjs-proxy\";\n\n'use strict'\n\nvar Info = require$$0\nvar types = require$$1\n\nvar definedInfo = DefinedInfo\n\nDefinedInfo.prototype = new Info()\nDefinedInfo.prototype.defined = true\n\nvar checks = [\n  'boolean',\n  'booleanish',\n  'overloadedBoolean',\n  'number',\n  'commaSeparated',\n  'spaceSeparated',\n  'commaOrSpaceSeparated'\n]\nvar checksLength = checks.length\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  var index = -1\n  var check\n\n  mark(this, 'space', space)\n\n  Info.call(this, property, attribute)\n\n  while (++index < checksLength) {\n    check = checks[index]\n    mark(this, check, (mask & types[check]) === types[check])\n  }\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n\nexport default /*@__PURE__*/commonjsHelpers.getDefaultExportFromCjs(definedInfo);\nexport { definedInfo as __moduleExports };",
      "start": 1702937445395,
      "end": 1702937445399,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;AAAA,YAAY;AACZ;AACA,IAAI,IAAI,GAAG,UAAiB;AAC5B,IAAI,KAAK,GAAG,UAAkB;AAC9B;IACA,WAAc,GAAG,WAAW;AAC5B;AACA,WAAW,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE;AAClC,WAAW,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI;AACpC;AACA,IAAI,MAAM,GAAG;AACb,EAAE,SAAS;AACX,EAAE,YAAY;AACd,EAAE,mBAAmB;AACrB,EAAE,QAAQ;AACV,EAAE,gBAAgB;AAClB,EAAE,gBAAgB;AAClB,EAAE,uBAAuB;AACzB,CAAC;AACD,IAAI,YAAY,GAAG,MAAM,CAAC,MAAM;AAChC;AACA,SAAS,WAAW,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE;AACvD,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC;AAChB,EAAE,IAAI,KAAK;AACX;AACA,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC;AAC5B;AACA,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC;AACtC;AACA,EAAE,OAAO,EAAE,KAAK,GAAG,YAAY,EAAE;AACjC,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACzB,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7D,GAAG;AACH,CAAC;AACD;AACA,SAAS,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;AAClC,EAAE,IAAI,KAAK,EAAE;AACb,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK;AACvB,GAAG;AACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937445399,
      "end": 1702937445399,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445399,
      "end": 1702937445399,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445399,
      "end": 1702937445399,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445399,
      "end": 1702937445399,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445399,
      "end": 1702937445399,
      "order": "normal"
    }
  ]
}
