{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/highlight.js/lib/languages/gradle.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Gradle\nDescription: Gradle is an open-source build automation tool focused on flexibility and performance.\nWebsite: https://gradle.org\nAuthor: Damian Mee <mee.damian@gmail.com>\n*/\n\nfunction gradle(hljs) {\n  return {\n    name: 'Gradle',\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'task project allprojects subprojects artifacts buildscript configurations ' +\n        'dependencies repositories sourceSets description delete from into include ' +\n        'exclude source classpath destinationDir includes options sourceCompatibility ' +\n        'targetCompatibility group flatDir doLast doFirst flatten todir fromdir ant ' +\n        'def abstract break case catch continue default do else extends final finally ' +\n        'for if implements instanceof native new private protected public return static ' +\n        'switch synchronized throw throws transient try volatile while strictfp package ' +\n        'import false null super this true antlrtask checkstyle codenarc copy boolean ' +\n        'byte char class double float int interface long short void compile runTime ' +\n        'file fileTree abs any append asList asWritable call collect compareTo count ' +\n        'div dump each eachByte eachFile eachLine every find findAll flatten getAt ' +\n        'getErr getIn getOut getText grep immutable inject inspect intersect invokeMethods ' +\n        'isCase join leftShift minus multiply newInputStream newOutputStream newPrintWriter ' +\n        'newReader newWriter next plus pop power previous print println push putAt read ' +\n        'readBytes readLines reverse reverseEach round size sort splitEachLine step subMap ' +\n        'times toInteger toList tokenize upto waitForOrKill withPrintWriter withReader ' +\n        'withStream withWriter withWriterAppend write writeLine'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.REGEXP_MODE\n\n    ]\n  };\n}\n\nmodule.exports = gradle;\n",
      "start": 1702937444335,
      "end": 1702937444376,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Gradle\nDescription: Gradle is an open-source build automation tool focused on flexibility and performance.\nWebsite: https://gradle.org\nAuthor: Damian Mee <mee.damian@gmail.com>\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar gradle_1;\nvar hasRequiredGradle;\n\nfunction requireGradle () {\n\tif (hasRequiredGradle) return gradle_1;\n\thasRequiredGradle = 1;\n\tfunction gradle(hljs) {\n\t  return {\n\t    name: 'Gradle',\n\t    case_insensitive: true,\n\t    keywords: {\n\t      keyword:\n\t        'task project allprojects subprojects artifacts buildscript configurations ' +\n\t        'dependencies repositories sourceSets description delete from into include ' +\n\t        'exclude source classpath destinationDir includes options sourceCompatibility ' +\n\t        'targetCompatibility group flatDir doLast doFirst flatten todir fromdir ant ' +\n\t        'def abstract break case catch continue default do else extends final finally ' +\n\t        'for if implements instanceof native new private protected public return static ' +\n\t        'switch synchronized throw throws transient try volatile while strictfp package ' +\n\t        'import false null super this true antlrtask checkstyle codenarc copy boolean ' +\n\t        'byte char class double float int interface long short void compile runTime ' +\n\t        'file fileTree abs any append asList asWritable call collect compareTo count ' +\n\t        'div dump each eachByte eachFile eachLine every find findAll flatten getAt ' +\n\t        'getErr getIn getOut getText grep immutable inject inspect intersect invokeMethods ' +\n\t        'isCase join leftShift minus multiply newInputStream newOutputStream newPrintWriter ' +\n\t        'newReader newWriter next plus pop power previous print println push putAt read ' +\n\t        'readBytes readLines reverse reverseEach round size sort splitEachLine step subMap ' +\n\t        'times toInteger toList tokenize upto waitForOrKill withPrintWriter withReader ' +\n\t        'withStream withWriter withWriterAppend write writeLine'\n\t    },\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      hljs.APOS_STRING_MODE,\n\t      hljs.QUOTE_STRING_MODE,\n\t      hljs.NUMBER_MODE,\n\t      hljs.REGEXP_MODE\n\n\t    ]\n\t  };\n\t}\n\n\tgradle_1 = gradle;\n\treturn gradle_1;\n}\n\nexport { requireGradle as __require };",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;;;CAOA,SAAS,MAAM,CAAC,IAAI,EAAE;CACtB,EAAE,OAAO;CACT,IAAI,IAAI,EAAE,QAAQ;CAClB,IAAI,gBAAgB,EAAE,IAAI;CAC1B,IAAI,QAAQ,EAAE;CACd,MAAM,OAAO;CACb,QAAQ,4EAA4E;CACpF,QAAQ,4EAA4E;CACpF,QAAQ,+EAA+E;CACvF,QAAQ,6EAA6E;CACrF,QAAQ,+EAA+E;CACvF,QAAQ,iFAAiF;CACzF,QAAQ,iFAAiF;CACzF,QAAQ,+EAA+E;CACvF,QAAQ,6EAA6E;CACrF,QAAQ,8EAA8E;CACtF,QAAQ,4EAA4E;CACpF,QAAQ,oFAAoF;CAC5F,QAAQ,qFAAqF;CAC7F,QAAQ,iFAAiF;CACzF,QAAQ,oFAAoF;CAC5F,QAAQ,gFAAgF;CACxF,QAAQ,wDAAwD;CAChE,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM,IAAI,CAAC,mBAAmB;CAC9B,MAAM,IAAI,CAAC,oBAAoB;CAC/B,MAAM,IAAI,CAAC,gBAAgB;CAC3B,MAAM,IAAI,CAAC,iBAAiB;CAC5B,MAAM,IAAI,CAAC,WAAW;CACtB,MAAM,IAAI,CAAC,WAAW;AACtB;CACA,KAAK;CACL,GAAG,CAAC;CACJ,CAAC;AACD;AACA,SAAc,GAAG,MAAM"
      }
    },
    {
      "name": "inject",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444377,
      "end": 1702937444377,
      "order": "normal"
    }
  ]
}
