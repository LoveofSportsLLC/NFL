{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/tremor.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = tremor\ntremor.displayName = 'tremor'\ntremor.aliases = []\nfunction tremor(Prism) {\n  ;(function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword:\n        /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number:\n        /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator:\n        /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    }\n    var interpolationPattern =\n      /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(\n        /(^|[^\\\\])/.source +\n          '(?:' +\n          '\"\"\"(?:' +\n          /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"\"\"' +\n          '|' +\n          '\"(?:' +\n          /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"' +\n          ')'\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.troy = Prism.languages['tremor']\n    Prism.languages.trickle = Prism.languages['tremor']\n  })(Prism)\n}\n",
      "start": 1702937445090,
      "end": 1702937445118,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar tremor_1;\nvar hasRequiredTremor;\n\nfunction requireTremor () {\n\tif (hasRequiredTremor) return tremor_1;\n\thasRequiredTremor = 1;\n\t'use strict'\n\n\ttremor_1 = tremor\n\ttremor.displayName = 'tremor'\n\ttremor.aliases = []\n\tfunction tremor(Prism) {\n\t  ;(function (Prism) {\n\t    Prism.languages.tremor = {\n\t      comment: {\n\t        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n\t        lookbehind: true\n\t      },\n\t      'interpolated-string': null,\n\t      // see below\n\t      extractor: {\n\t        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n\t        greedy: true,\n\t        inside: {\n\t          regex: {\n\t            pattern: /(^re)\\|[\\s\\S]+/,\n\t            lookbehind: true\n\t          },\n\t          function: /^\\w+/,\n\t          value: /\\|[\\s\\S]+/\n\t        }\n\t      },\n\t      identifier: {\n\t        pattern: /`[^`]*`/,\n\t        greedy: true\n\t      },\n\t      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n\t      keyword:\n\t        /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n\t      boolean: /\\b(?:false|null|true)\\b/i,\n\t      number:\n\t        /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n\t      'pattern-punctuation': {\n\t        pattern: /%(?=[({[])/,\n\t        alias: 'punctuation'\n\t      },\n\t      operator:\n\t        /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n\t      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n\t    }\n\t    var interpolationPattern =\n\t      /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source\n\t    Prism.languages.tremor['interpolated-string'] = {\n\t      pattern: RegExp(\n\t        /(^|[^\\\\])/.source +\n\t          '(?:' +\n\t          '\"\"\"(?:' +\n\t          /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source +\n\t          '|' +\n\t          interpolationPattern +\n\t          ')*\"\"\"' +\n\t          '|' +\n\t          '\"(?:' +\n\t          /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source +\n\t          '|' +\n\t          interpolationPattern +\n\t          ')*\"' +\n\t          ')'\n\t      ),\n\t      lookbehind: true,\n\t      greedy: true,\n\t      inside: {\n\t        interpolation: {\n\t          pattern: RegExp(interpolationPattern),\n\t          inside: {\n\t            punctuation: /^#\\{|\\}$/,\n\t            expression: {\n\t              pattern: /[\\s\\S]+/,\n\t              inside: Prism.languages.tremor\n\t            }\n\t          }\n\t        },\n\t        string: /[\\s\\S]+/\n\t      }\n\t    }\n\t    Prism.languages.troy = Prism.languages['tremor']\n\t    Prism.languages.trickle = Prism.languages['tremor']\n\t  })(Prism)\n\t}\n\treturn tremor_1;\n}\n\nexport { requireTremor as __require };",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,SAAc,GAAG,MAAM;CACvB,MAAM,CAAC,WAAW,GAAG,QAAQ;CAC7B,MAAM,CAAC,OAAO,GAAG,EAAE;CACnB,SAAS,MAAM,CAAC,KAAK,EAAE;CACvB,EAAE,CAAC,CAAC,UAAU,KAAK,EAAE;CACrB,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG;CAC7B,MAAM,OAAO,EAAE;CACf,QAAQ,OAAO,EAAE,+CAA+C;CAChE,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM,qBAAqB,EAAE,IAAI;CACjC;CACA,MAAM,SAAS,EAAE;CACjB,QAAQ,OAAO,EAAE,mDAAmD;CACpE,QAAQ,MAAM,EAAE,IAAI;CACpB,QAAQ,MAAM,EAAE;CAChB,UAAU,KAAK,EAAE;CACjB,YAAY,OAAO,EAAE,gBAAgB;CACrC,YAAY,UAAU,EAAE,IAAI;CAC5B,WAAW;CACX,UAAU,QAAQ,EAAE,MAAM;CAC1B,UAAU,KAAK,EAAE,WAAW;CAC5B,SAAS;CACT,OAAO;CACP,MAAM,UAAU,EAAE;CAClB,QAAQ,OAAO,EAAE,SAAS;CAC1B,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP,MAAM,QAAQ,EAAE,mCAAmC;CACnD,MAAM,OAAO;CACb,QAAQ,kUAAkU;CAC1U,MAAM,OAAO,EAAE,0BAA0B;CACzC,MAAM,MAAM;CACZ,QAAQ,8EAA8E;CACtF,MAAM,qBAAqB,EAAE;CAC7B,QAAQ,OAAO,EAAE,YAAY;CAC7B,QAAQ,KAAK,EAAE,aAAa;CAC5B,OAAO;CACP,MAAM,QAAQ;CACd,QAAQ,uFAAuF;CAC/F,MAAM,WAAW,EAAE,qBAAqB;CACxC,KAAK;CACL,IAAI,IAAI,oBAAoB;CAC5B,MAAM,iEAAiE,CAAC,MAAM;CAC9E,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAAC,GAAG;CACpD,MAAM,OAAO,EAAE,MAAM;CACrB,QAAQ,WAAW,CAAC,MAAM;CAC1B,UAAU,KAAK;CACf,UAAU,QAAQ;CAClB,UAAU,kCAAkC,CAAC,MAAM;CACnD,UAAU,GAAG;CACb,UAAU,oBAAoB;CAC9B,UAAU,OAAO;CACjB,UAAU,GAAG;CACb,UAAU,MAAM;CAChB,UAAU,uCAAuC,CAAC,MAAM;CACxD,UAAU,GAAG;CACb,UAAU,oBAAoB;CAC9B,UAAU,KAAK;CACf,UAAU,GAAG;CACb,OAAO;CACP,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,MAAM,EAAE,IAAI;CAClB,MAAM,MAAM,EAAE;CACd,QAAQ,aAAa,EAAE;CACvB,UAAU,OAAO,EAAE,MAAM,CAAC,oBAAoB,CAAC;CAC/C,UAAU,MAAM,EAAE;CAClB,YAAY,WAAW,EAAE,UAAU;CACnC,YAAY,UAAU,EAAE;CACxB,cAAc,OAAO,EAAE,SAAS;CAChC,cAAc,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;CAC5C,aAAa;CACb,WAAW;CACX,SAAS;CACT,QAAQ,MAAM,EAAE,SAAS;CACzB,OAAO;CACP,KAAK;CACL,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;CACpD,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;CACvD,GAAG,EAAE,KAAK,CAAC;CACX"
      }
    },
    {
      "name": "inject",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445118,
      "end": 1702937445118,
      "order": "normal"
    }
  ]
}
