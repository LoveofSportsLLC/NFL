{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/css-extras.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var selectorInside\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: (selectorInside = {\n        'pseudo-element':\n          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [\n              string,\n              {\n                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                lookbehind: true\n              }\n            ],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [\n          {\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              number: /[\\dn]+/,\n              operator: /[+-]/\n            }\n          },\n          {\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n            lookbehind: true\n          }\n        ],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n        punctuation: /[(),]/\n      })\n    }\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\n      selectorInside\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    })\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [\n        {\n          pattern:\n            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    })\n  })(Prism)\n}\n",
      "start": 1702937444852,
      "end": 1702937444878,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar cssExtras_1;\nvar hasRequiredCssExtras;\n\nfunction requireCssExtras () {\n\tif (hasRequiredCssExtras) return cssExtras_1;\n\thasRequiredCssExtras = 1;\n\t'use strict'\n\n\tcssExtras_1 = cssExtras\n\tcssExtras.displayName = 'cssExtras'\n\tcssExtras.aliases = []\n\tfunction cssExtras(Prism) {\n\t  ;(function (Prism) {\n\t    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n\t    var selectorInside\n\t    Prism.languages.css.selector = {\n\t      pattern: Prism.languages.css.selector.pattern,\n\t      lookbehind: true,\n\t      inside: (selectorInside = {\n\t        'pseudo-element':\n\t          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n\t        'pseudo-class': /:[-\\w]+/,\n\t        class: /\\.[-\\w]+/,\n\t        id: /#[-\\w]+/,\n\t        attribute: {\n\t          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n\t          greedy: true,\n\t          inside: {\n\t            punctuation: /^\\[|\\]$/,\n\t            'case-sensitivity': {\n\t              pattern: /(\\s)[si]$/i,\n\t              lookbehind: true,\n\t              alias: 'keyword'\n\t            },\n\t            namespace: {\n\t              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n\t              lookbehind: true,\n\t              inside: {\n\t                punctuation: /\\|$/\n\t              }\n\t            },\n\t            'attr-name': {\n\t              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n\t              lookbehind: true\n\t            },\n\t            'attr-value': [\n\t              string,\n\t              {\n\t                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n\t                lookbehind: true\n\t              }\n\t            ],\n\t            operator: /[|~*^$]?=/\n\t          }\n\t        },\n\t        'n-th': [\n\t          {\n\t            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n\t            lookbehind: true,\n\t            inside: {\n\t              number: /[\\dn]+/,\n\t              operator: /[+-]/\n\t            }\n\t          },\n\t          {\n\t            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n\t            lookbehind: true\n\t          }\n\t        ],\n\t        combinator: />|\\+|~|\\|\\|/,\n\t        // the `tag` token has been existed and removed.\n\t        // because we can't find a perfect tokenize to match it.\n\t        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n\t        punctuation: /[(),]/\n\t      })\n\t    }\n\t    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\n\t      selectorInside\n\t    Prism.languages.insertBefore('css', 'property', {\n\t      variable: {\n\t        pattern:\n\t          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n\t        lookbehind: true\n\t      }\n\t    })\n\t    var unit = {\n\t      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n\t      lookbehind: true\n\t    } // 123 -123 .123 -.123 12.3 -12.3\n\t    var number = {\n\t      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n\t      lookbehind: true\n\t    }\n\t    Prism.languages.insertBefore('css', 'function', {\n\t      operator: {\n\t        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n\t        lookbehind: true\n\t      },\n\t      // CAREFUL!\n\t      // Previewers and Inline color use hexcode and color.\n\t      hexcode: {\n\t        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n\t        alias: 'color'\n\t      },\n\t      color: [\n\t        {\n\t          pattern:\n\t            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n\t          lookbehind: true\n\t        },\n\t        {\n\t          pattern:\n\t            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n\t          inside: {\n\t            unit: unit,\n\t            number: number,\n\t            function: /[\\w-]+(?=\\()/,\n\t            punctuation: /[(),]/\n\t          }\n\t        }\n\t      ],\n\t      // it's important that there is no boundary assertion after the hex digits\n\t      entity: /\\\\[\\da-f]{1,8}/i,\n\t      unit: unit,\n\t      number: number\n\t    })\n\t  })(Prism)\n\t}\n\treturn cssExtras_1;\n}\n\nexport { requireCssExtras as __require };",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444878,
      "end": 1702937444878,
      "order": "normal"
    }
  ]
}
