{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/highlight.js/lib/languages/scala.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Scala\nCategory: functional\nAuthor: Jan Berkel <jan.berkel@gmail.com>\nContributors: Erik Osheim <d_m@plastic-idolatry.com>\nWebsite: https://www.scala-lang.org\n*/\n\nfunction scala(hljs) {\n  const ANNOTATION = {\n    className: 'meta',\n    begin: '@[A-Za-z]+'\n  };\n\n  // used in strings for escaping/interpolation/substitution\n  const SUBST = {\n    className: 'subst',\n    variants: [\n      {\n        begin: '\\\\$[A-Za-z0-9_]+'\n      },\n      {\n        begin: /\\$\\{/,\n        end: /\\}/\n      }\n    ]\n  };\n\n  const STRING = {\n    className: 'string',\n    variants: [\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"'\n      },\n      {\n        begin: '\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n      {\n        begin: '[a-z]+\"',\n        end: '\"',\n        illegal: '\\\\n',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          SUBST\n        ]\n      },\n      {\n        className: 'string',\n        begin: '[a-z]+\"\"\"',\n        end: '\"\"\"',\n        contains: [ SUBST ],\n        relevance: 10\n      }\n    ]\n\n  };\n\n  const SYMBOL = {\n    className: 'symbol',\n    begin: '\\'\\\\w[\\\\w\\\\d_]*(?!\\')'\n  };\n\n  const TYPE = {\n    className: 'type',\n    begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n    relevance: 0\n  };\n\n  const NAME = {\n    className: 'title',\n    begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,\n    relevance: 0\n  };\n\n  const CLASS = {\n    className: 'class',\n    beginKeywords: 'class object trait type',\n    end: /[:={\\[\\n;]/,\n    excludeEnd: true,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        beginKeywords: 'extends with',\n        relevance: 10\n      },\n      {\n        begin: /\\[/,\n        end: /\\]/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0,\n        contains: [ TYPE ]\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0,\n        contains: [ TYPE ]\n      },\n      NAME\n    ]\n  };\n\n  const METHOD = {\n    className: 'function',\n    beginKeywords: 'def',\n    end: /[:={\\[(\\n;]/,\n    excludeEnd: true,\n    contains: [ NAME ]\n  };\n\n  return {\n    name: 'Scala',\n    keywords: {\n      literal: 'true false null',\n      keyword: 'type yield lazy override def with val var sealed abstract private trait object if forSome for while throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      STRING,\n      SYMBOL,\n      TYPE,\n      METHOD,\n      CLASS,\n      hljs.C_NUMBER_MODE,\n      ANNOTATION\n    ]\n  };\n}\n\nmodule.exports = scala;\n",
      "start": 1702937444557,
      "end": 1702937444591,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444591,
      "end": 1702937444591,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444591,
      "end": 1702937444591,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444591,
      "end": 1702937444591,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444591,
      "end": 1702937444591,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444591,
      "end": 1702937444591,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444591,
      "end": 1702937444591,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444591,
      "end": 1702937444591,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444591,
      "end": 1702937444591,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444591,
      "end": 1702937444591,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444591,
      "end": 1702937444591,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Scala\nCategory: functional\nAuthor: Jan Berkel <jan.berkel@gmail.com>\nContributors: Erik Osheim <d_m@plastic-idolatry.com>\nWebsite: https://www.scala-lang.org\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar scala_1;\nvar hasRequiredScala;\n\nfunction requireScala () {\n\tif (hasRequiredScala) return scala_1;\n\thasRequiredScala = 1;\n\tfunction scala(hljs) {\n\t  const ANNOTATION = {\n\t    className: 'meta',\n\t    begin: '@[A-Za-z]+'\n\t  };\n\n\t  // used in strings for escaping/interpolation/substitution\n\t  const SUBST = {\n\t    className: 'subst',\n\t    variants: [\n\t      {\n\t        begin: '\\\\$[A-Za-z0-9_]+'\n\t      },\n\t      {\n\t        begin: /\\$\\{/,\n\t        end: /\\}/\n\t      }\n\t    ]\n\t  };\n\n\t  const STRING = {\n\t    className: 'string',\n\t    variants: [\n\t      {\n\t        begin: '\"\"\"',\n\t        end: '\"\"\"'\n\t      },\n\t      {\n\t        begin: '\"',\n\t        end: '\"',\n\t        illegal: '\\\\n',\n\t        contains: [ hljs.BACKSLASH_ESCAPE ]\n\t      },\n\t      {\n\t        begin: '[a-z]+\"',\n\t        end: '\"',\n\t        illegal: '\\\\n',\n\t        contains: [\n\t          hljs.BACKSLASH_ESCAPE,\n\t          SUBST\n\t        ]\n\t      },\n\t      {\n\t        className: 'string',\n\t        begin: '[a-z]+\"\"\"',\n\t        end: '\"\"\"',\n\t        contains: [ SUBST ],\n\t        relevance: 10\n\t      }\n\t    ]\n\n\t  };\n\n\t  const SYMBOL = {\n\t    className: 'symbol',\n\t    begin: '\\'\\\\w[\\\\w\\\\d_]*(?!\\')'\n\t  };\n\n\t  const TYPE = {\n\t    className: 'type',\n\t    begin: '\\\\b[A-Z][A-Za-z0-9_]*',\n\t    relevance: 0\n\t  };\n\n\t  const NAME = {\n\t    className: 'title',\n\t    begin: /[^0-9\\n\\t \"'(),.`{}\\[\\]:;][^\\n\\t \"'(),.`{}\\[\\]:;]+|[^0-9\\n\\t \"'(),.`{}\\[\\]:;=]/,\n\t    relevance: 0\n\t  };\n\n\t  const CLASS = {\n\t    className: 'class',\n\t    beginKeywords: 'class object trait type',\n\t    end: /[:={\\[\\n;]/,\n\t    excludeEnd: true,\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      {\n\t        beginKeywords: 'extends with',\n\t        relevance: 10\n\t      },\n\t      {\n\t        begin: /\\[/,\n\t        end: /\\]/,\n\t        excludeBegin: true,\n\t        excludeEnd: true,\n\t        relevance: 0,\n\t        contains: [ TYPE ]\n\t      },\n\t      {\n\t        className: 'params',\n\t        begin: /\\(/,\n\t        end: /\\)/,\n\t        excludeBegin: true,\n\t        excludeEnd: true,\n\t        relevance: 0,\n\t        contains: [ TYPE ]\n\t      },\n\t      NAME\n\t    ]\n\t  };\n\n\t  const METHOD = {\n\t    className: 'function',\n\t    beginKeywords: 'def',\n\t    end: /[:={\\[(\\n;]/,\n\t    excludeEnd: true,\n\t    contains: [ NAME ]\n\t  };\n\n\t  return {\n\t    name: 'Scala',\n\t    keywords: {\n\t      literal: 'true false null',\n\t      keyword: 'type yield lazy override def with val var sealed abstract private trait object if forSome for while throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit'\n\t    },\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.C_BLOCK_COMMENT_MODE,\n\t      STRING,\n\t      SYMBOL,\n\t      TYPE,\n\t      METHOD,\n\t      CLASS,\n\t      hljs.C_NUMBER_MODE,\n\t      ANNOTATION\n\t    ]\n\t  };\n\t}\n\n\tscala_1 = scala;\n\treturn scala_1;\n}\n\nexport { requireScala as __require };",
      "start": 1702937444591,
      "end": 1702937444592,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937444592,
      "end": 1702937444592,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444592,
      "end": 1702937444592,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444592,
      "end": 1702937444592,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444592,
      "end": 1702937444592,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444592,
      "end": 1702937444592,
      "order": "normal"
    }
  ]
}
