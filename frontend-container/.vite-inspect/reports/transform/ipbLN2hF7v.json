{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/DropdownToggle.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use client\";\n\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;",
      "start": 1702937441462,
      "end": 1702937441483,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441483,
      "end": 1702937441483,
      "order": "normal"
    }
  ]
}
