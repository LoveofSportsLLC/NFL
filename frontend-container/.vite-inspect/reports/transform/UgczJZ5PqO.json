{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/@restart/hooks/esm/useMounted.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}",
      "start": 1702937443113,
      "end": 1702937443133,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937443133,
      "end": 1702937443133,
      "order": "normal"
    }
  ]
}
