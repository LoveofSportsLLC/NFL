{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/velocity.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = velocity\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\nfunction velocity(Prism) {\n  ;(function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|\\]\\]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n",
      "start": 1702937445109,
      "end": 1702937445130,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar velocity_1;\nvar hasRequiredVelocity;\n\nfunction requireVelocity () {\n\tif (hasRequiredVelocity) return velocity_1;\n\thasRequiredVelocity = 1;\n\t'use strict'\n\n\tvelocity_1 = velocity\n\tvelocity.displayName = 'velocity'\n\tvelocity.aliases = []\n\tfunction velocity(Prism) {\n\t  ;(function (Prism) {\n\t    Prism.languages.velocity = Prism.languages.extend('markup', {})\n\t    var velocity = {\n\t      variable: {\n\t        pattern:\n\t          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n\t        lookbehind: true,\n\t        inside: {} // See below\n\t      },\n\t      string: {\n\t        pattern: /\"[^\"]*\"|'[^']*'/,\n\t        greedy: true\n\t      },\n\t      number: /\\b\\d+\\b/,\n\t      boolean: /\\b(?:false|true)\\b/,\n\t      operator:\n\t        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n\t      punctuation: /[(){}[\\]:,.]/\n\t    }\n\t    velocity.variable.inside = {\n\t      string: velocity['string'],\n\t      function: {\n\t        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n\t        lookbehind: true\n\t      },\n\t      number: velocity['number'],\n\t      boolean: velocity['boolean'],\n\t      punctuation: velocity['punctuation']\n\t    }\n\t    Prism.languages.insertBefore('velocity', 'comment', {\n\t      unparsed: {\n\t        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n\t        lookbehind: true,\n\t        greedy: true,\n\t        inside: {\n\t          punctuation: /^#\\[\\[|\\]\\]#$/\n\t        }\n\t      },\n\t      'velocity-comment': [\n\t        {\n\t          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n\t          lookbehind: true,\n\t          greedy: true,\n\t          alias: 'comment'\n\t        },\n\t        {\n\t          pattern: /(^|[^\\\\])##.*/,\n\t          lookbehind: true,\n\t          greedy: true,\n\t          alias: 'comment'\n\t        }\n\t      ],\n\t      directive: {\n\t        pattern:\n\t          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n\t        lookbehind: true,\n\t        inside: {\n\t          keyword: {\n\t            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n\t            inside: {\n\t              punctuation: /[{}]/\n\t            }\n\t          },\n\t          rest: velocity\n\t        }\n\t      },\n\t      variable: velocity['variable']\n\t    })\n\t    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n\t      Prism.languages.velocity\n\t  })(Prism)\n\t}\n\treturn velocity_1;\n}\n\nexport { requireVelocity as __require };",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,WAAc,GAAG,QAAQ;CACzB,QAAQ,CAAC,WAAW,GAAG,UAAU;CACjC,QAAQ,CAAC,OAAO,GAAG,EAAE;CACrB,SAAS,QAAQ,CAAC,KAAK,EAAE;CACzB,EAAE,CAAC,CAAC,UAAU,KAAK,EAAE;CACrB,IAAI,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;CACnE,IAAI,IAAI,QAAQ,GAAG;CACnB,MAAM,QAAQ,EAAE;CAChB,QAAQ,OAAO;CACf,UAAU,2GAA2G;CACrH,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE,EAAE;CAClB,OAAO;CACP,MAAM,MAAM,EAAE;CACd,QAAQ,OAAO,EAAE,iBAAiB;CAClC,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP,MAAM,MAAM,EAAE,SAAS;CACvB,MAAM,OAAO,EAAE,oBAAoB;CACnC,MAAM,QAAQ;CACd,QAAQ,gEAAgE;CACxE,MAAM,WAAW,EAAE,cAAc;CACjC,KAAK;CACL,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG;CAC/B,MAAM,MAAM,EAAE,QAAQ,CAAC,QAAQ,CAAC;CAChC,MAAM,QAAQ,EAAE;CAChB,QAAQ,OAAO,EAAE,2BAA2B;CAC5C,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM,MAAM,EAAE,QAAQ,CAAC,QAAQ,CAAC;CAChC,MAAM,OAAO,EAAE,QAAQ,CAAC,SAAS,CAAC;CAClC,MAAM,WAAW,EAAE,QAAQ,CAAC,aAAa,CAAC;CAC1C,KAAK;CACL,IAAI,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,EAAE,SAAS,EAAE;CACxD,MAAM,QAAQ,EAAE;CAChB,QAAQ,OAAO,EAAE,6BAA6B;CAC9C,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE,IAAI;CACpB,QAAQ,MAAM,EAAE;CAChB,UAAU,WAAW,EAAE,eAAe;CACtC,SAAS;CACT,OAAO;CACP,MAAM,kBAAkB,EAAE;CAC1B,QAAQ;CACR,UAAU,OAAO,EAAE,yBAAyB;CAC5C,UAAU,UAAU,EAAE,IAAI;CAC1B,UAAU,MAAM,EAAE,IAAI;CACtB,UAAU,KAAK,EAAE,SAAS;CAC1B,SAAS;CACT,QAAQ;CACR,UAAU,OAAO,EAAE,eAAe;CAClC,UAAU,UAAU,EAAE,IAAI;CAC1B,UAAU,MAAM,EAAE,IAAI;CACtB,UAAU,KAAK,EAAE,SAAS;CAC1B,SAAS;CACT,OAAO;CACP,MAAM,SAAS,EAAE;CACjB,QAAQ,OAAO;CACf,UAAU,wFAAwF;CAClG,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE;CAChB,UAAU,OAAO,EAAE;CACnB,YAAY,OAAO,EAAE,4CAA4C;CACjE,YAAY,MAAM,EAAE;CACpB,cAAc,WAAW,EAAE,MAAM;CACjC,aAAa;CACb,WAAW;CACX,UAAU,IAAI,EAAE,QAAQ;CACxB,SAAS;CACT,OAAO;CACP,MAAM,QAAQ,EAAE,QAAQ,CAAC,UAAU,CAAC;CACpC,KAAK,CAAC;CACN,IAAI,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI;CACpE,MAAM,KAAK,CAAC,SAAS,CAAC,QAAQ;CAC9B,GAAG,EAAE,KAAK,CAAC;CACX"
      }
    },
    {
      "name": "inject",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445130,
      "end": 1702937445130,
      "order": "normal"
    }
  ]
}
