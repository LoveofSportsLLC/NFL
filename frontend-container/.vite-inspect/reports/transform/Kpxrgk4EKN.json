{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/highlight.js/lib/languages/rust.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\n\nfunction rust(hljs) {\n  const NUM_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  const KEYWORDS =\n    'abstract as async await become box break const continue crate do dyn ' +\n    'else enum extern false final fn for if impl in let loop macro match mod ' +\n    'move mut override priv pub ref return self Self static struct super ' +\n    'trait true try type typeof unsafe unsized use virtual where while yield';\n  const BUILTINS =\n    // functions\n    'drop ' +\n    // types\n    'i8 i16 i32 i64 i128 isize ' +\n    'u8 u16 u32 u64 u128 usize ' +\n    'f32 f64 ' +\n    'str char bool ' +\n    'Box Option Result String Vec ' +\n    // traits\n    'Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug ' +\n    'PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator ' +\n    'Extend IntoIterator DoubleEndedIterator ExactSizeIterator ' +\n    'SliceConcatExt ToString ' +\n    // macros\n    'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' +\n    'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' +\n    'include_bin! include_str! line! local_data_key! module_path! ' +\n    'option_env! print! println! select! stringify! try! unimplemented! ' +\n    'unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!';\n  return {\n    name: 'Rust',\n    aliases: [ 'rs' ],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      keyword:\n        KEYWORDS,\n      literal:\n        'true false Some None Ok Err',\n      built_in:\n        BUILTINS\n    },\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\n        contains: [ 'self' ]\n      }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: /b?\"/,\n        illegal: null\n      }),\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: /r(#*)\"(.|\\n)*?\"\\1(?!#)/\n          },\n          {\n            begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\n          }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n      },\n      {\n        className: 'number',\n        variants: [\n          {\n            begin: '\\\\b0b([01_]+)' + NUM_SUFFIX\n          },\n          {\n            begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX\n          },\n          {\n            begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX\n          },\n          {\n            begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +\n                   NUM_SUFFIX\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'fn',\n        end: '(\\\\(|<)',\n        excludeEnd: true,\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n      },\n      {\n        className: 'meta',\n        begin: '#!?\\\\[',\n        end: '\\\\]',\n        contains: [\n          {\n            className: 'meta-string',\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'type',\n        end: ';',\n        contains: [\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\n            endsParent: true\n          })\n        ],\n        illegal: '\\\\S'\n      },\n      {\n        className: 'class',\n        beginKeywords: 'trait enum struct union',\n        end: /\\{/,\n        contains: [\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\n            endsParent: true\n          })\n        ],\n        illegal: '[\\\\w\\\\d]'\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: {\n          built_in: BUILTINS\n        }\n      },\n      {\n        begin: '->'\n      }\n    ]\n  };\n}\n\nmodule.exports = rust;\n",
      "start": 1702937444552,
      "end": 1702937444587,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444587,
      "end": 1702937444587,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444587,
      "end": 1702937444587,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444587,
      "end": 1702937444587,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444587,
      "end": 1702937444587,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444587,
      "end": 1702937444587,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444587,
      "end": 1702937444587,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444587,
      "end": 1702937444587,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444587,
      "end": 1702937444587,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444587,
      "end": 1702937444587,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444587,
      "end": 1702937444587,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\nimport * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar rust_1;\nvar hasRequiredRust;\n\nfunction requireRust () {\n\tif (hasRequiredRust) return rust_1;\n\thasRequiredRust = 1;\n\tfunction rust(hljs) {\n\t  const NUM_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n\t  const KEYWORDS =\n\t    'abstract as async await become box break const continue crate do dyn ' +\n\t    'else enum extern false final fn for if impl in let loop macro match mod ' +\n\t    'move mut override priv pub ref return self Self static struct super ' +\n\t    'trait true try type typeof unsafe unsized use virtual where while yield';\n\t  const BUILTINS =\n\t    // functions\n\t    'drop ' +\n\t    // types\n\t    'i8 i16 i32 i64 i128 isize ' +\n\t    'u8 u16 u32 u64 u128 usize ' +\n\t    'f32 f64 ' +\n\t    'str char bool ' +\n\t    'Box Option Result String Vec ' +\n\t    // traits\n\t    'Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug ' +\n\t    'PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator ' +\n\t    'Extend IntoIterator DoubleEndedIterator ExactSizeIterator ' +\n\t    'SliceConcatExt ToString ' +\n\t    // macros\n\t    'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' +\n\t    'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' +\n\t    'include_bin! include_str! line! local_data_key! module_path! ' +\n\t    'option_env! print! println! select! stringify! try! unimplemented! ' +\n\t    'unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!';\n\t  return {\n\t    name: 'Rust',\n\t    aliases: [ 'rs' ],\n\t    keywords: {\n\t      $pattern: hljs.IDENT_RE + '!?',\n\t      keyword:\n\t        KEYWORDS,\n\t      literal:\n\t        'true false Some None Ok Err',\n\t      built_in:\n\t        BUILTINS\n\t    },\n\t    illegal: '</',\n\t    contains: [\n\t      hljs.C_LINE_COMMENT_MODE,\n\t      hljs.COMMENT('/\\\\*', '\\\\*/', {\n\t        contains: [ 'self' ]\n\t      }),\n\t      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n\t        begin: /b?\"/,\n\t        illegal: null\n\t      }),\n\t      {\n\t        className: 'string',\n\t        variants: [\n\t          {\n\t            begin: /r(#*)\"(.|\\n)*?\"\\1(?!#)/\n\t          },\n\t          {\n\t            begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'symbol',\n\t        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n\t      },\n\t      {\n\t        className: 'number',\n\t        variants: [\n\t          {\n\t            begin: '\\\\b0b([01_]+)' + NUM_SUFFIX\n\t          },\n\t          {\n\t            begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX\n\t          },\n\t          {\n\t            begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX\n\t          },\n\t          {\n\t            begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +\n\t                   NUM_SUFFIX\n\t          }\n\t        ],\n\t        relevance: 0\n\t      },\n\t      {\n\t        className: 'function',\n\t        beginKeywords: 'fn',\n\t        end: '(\\\\(|<)',\n\t        excludeEnd: true,\n\t        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n\t      },\n\t      {\n\t        className: 'meta',\n\t        begin: '#!?\\\\[',\n\t        end: '\\\\]',\n\t        contains: [\n\t          {\n\t            className: 'meta-string',\n\t            begin: /\"/,\n\t            end: /\"/\n\t          }\n\t        ]\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'type',\n\t        end: ';',\n\t        contains: [\n\t          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\n\t            endsParent: true\n\t          })\n\t        ],\n\t        illegal: '\\\\S'\n\t      },\n\t      {\n\t        className: 'class',\n\t        beginKeywords: 'trait enum struct union',\n\t        end: /\\{/,\n\t        contains: [\n\t          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\n\t            endsParent: true\n\t          })\n\t        ],\n\t        illegal: '[\\\\w\\\\d]'\n\t      },\n\t      {\n\t        begin: hljs.IDENT_RE + '::',\n\t        keywords: {\n\t          built_in: BUILTINS\n\t        }\n\t      },\n\t      {\n\t        begin: '->'\n\t      }\n\t    ]\n\t  };\n\t}\n\n\trust_1 = rust;\n\treturn rust_1;\n}\n\nexport { requireRust as __require };",
      "start": 1702937444587,
      "end": 1702937444588,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937444588,
      "end": 1702937444588,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444588,
      "end": 1702937444588,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444588,
      "end": 1702937444588,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444588,
      "end": 1702937444588,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444588,
      "end": 1702937444588,
      "order": "normal"
    }
  ]
}
