{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/kotlin.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\nfunction kotlin(Prism) {\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n",
      "start": 1702937444940,
      "end": 1702937444966,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar kotlin_1;\nvar hasRequiredKotlin;\n\nfunction requireKotlin () {\n\tif (hasRequiredKotlin) return kotlin_1;\n\thasRequiredKotlin = 1;\n\t'use strict'\n\n\tkotlin_1 = kotlin\n\tkotlin.displayName = 'kotlin'\n\tkotlin.aliases = ['kt', 'kts']\n\tfunction kotlin(Prism) {\n\t  ;(function (Prism) {\n\t    Prism.languages.kotlin = Prism.languages.extend('clike', {\n\t      keyword: {\n\t        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n\t        pattern:\n\t          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n\t        lookbehind: true\n\t      },\n\t      function: [\n\t        {\n\t          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n\t          greedy: true\n\t        },\n\t        {\n\t          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n\t          lookbehind: true,\n\t          greedy: true\n\t        }\n\t      ],\n\t      number:\n\t        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n\t      operator:\n\t        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n\t    })\n\t    delete Prism.languages.kotlin['class-name']\n\t    var interpolationInside = {\n\t      'interpolation-punctuation': {\n\t        pattern: /^\\$\\{?|\\}$/,\n\t        alias: 'punctuation'\n\t      },\n\t      expression: {\n\t        pattern: /[\\s\\S]+/,\n\t        inside: Prism.languages.kotlin\n\t      }\n\t    }\n\t    Prism.languages.insertBefore('kotlin', 'string', {\n\t      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n\t      'string-literal': [\n\t        {\n\t          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n\t          alias: 'multiline',\n\t          inside: {\n\t            interpolation: {\n\t              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n\t              inside: interpolationInside\n\t            },\n\t            string: /[\\s\\S]+/\n\t          }\n\t        },\n\t        {\n\t          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n\t          alias: 'singleline',\n\t          inside: {\n\t            interpolation: {\n\t              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n\t              lookbehind: true,\n\t              inside: interpolationInside\n\t            },\n\t            string: /[\\s\\S]+/\n\t          }\n\t        }\n\t      ],\n\t      char: {\n\t        // https://kotlinlang.org/spec/expressions.html#character-literals\n\t        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n\t        greedy: true\n\t      }\n\t    })\n\t    delete Prism.languages.kotlin['string']\n\t    Prism.languages.insertBefore('kotlin', 'keyword', {\n\t      annotation: {\n\t        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n\t        alias: 'builtin'\n\t      }\n\t    })\n\t    Prism.languages.insertBefore('kotlin', 'function', {\n\t      label: {\n\t        pattern: /\\b\\w+@|@\\w+\\b/,\n\t        alias: 'symbol'\n\t      }\n\t    })\n\t    Prism.languages.kt = Prism.languages.kotlin\n\t    Prism.languages.kts = Prism.languages.kotlin\n\t  })(Prism)\n\t}\n\treturn kotlin_1;\n}\n\nexport { requireKotlin as __require };",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444966,
      "end": 1702937444966,
      "order": "normal"
    }
  ]
}
