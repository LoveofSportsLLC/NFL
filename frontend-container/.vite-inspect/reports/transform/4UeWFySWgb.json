{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/pascal.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = pascal\npascal.displayName = 'pascal'\npascal.aliases = ['objectpascal']\nfunction pascal(Prism) {\n  // Based on Free Pascal\n  /* TODO\nSupport inline asm ?\n*/\n  Prism.languages.pascal = {\n    directive: {\n      pattern: /\\{\\$[\\s\\S]*?\\}/,\n      greedy: true,\n      alias: ['marco', 'property']\n    },\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    asm: {\n      pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n    keyword: [\n      {\n        // Turbo Pascal\n        pattern:\n          /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Object Pascal\n        pattern:\n          /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Modifiers\n        pattern:\n          /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }\n    ],\n    number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n    ],\n    operator: [\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\n      {\n        pattern:\n          /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  }\n  Prism.languages.pascal.asm.inside = Prism.languages.extend('pascal', {\n    asm: undefined,\n    keyword: undefined,\n    operator: undefined\n  })\n  Prism.languages.objectpascal = Prism.languages.pascal\n}\n",
      "start": 1702937444996,
      "end": 1702937445027,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar pascal_1;\nvar hasRequiredPascal;\n\nfunction requirePascal () {\n\tif (hasRequiredPascal) return pascal_1;\n\thasRequiredPascal = 1;\n\t'use strict'\n\n\tpascal_1 = pascal\n\tpascal.displayName = 'pascal'\n\tpascal.aliases = ['objectpascal']\n\tfunction pascal(Prism) {\n\t  // Based on Free Pascal\n\t  /* TODO\n\tSupport inline asm ?\n\t*/\n\t  Prism.languages.pascal = {\n\t    directive: {\n\t      pattern: /\\{\\$[\\s\\S]*?\\}/,\n\t      greedy: true,\n\t      alias: ['marco', 'property']\n\t    },\n\t    comment: {\n\t      pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n\t      greedy: true\n\t    },\n\t    string: {\n\t      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n\t      greedy: true\n\t    },\n\t    asm: {\n\t      pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n\t      lookbehind: true,\n\t      greedy: true,\n\t      inside: null // see below\n\t    },\n\t    keyword: [\n\t      {\n\t        // Turbo Pascal\n\t        pattern:\n\t          /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n\t        lookbehind: true\n\t      },\n\t      {\n\t        // Free Pascal\n\t        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n\t        lookbehind: true\n\t      },\n\t      {\n\t        // Object Pascal\n\t        pattern:\n\t          /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n\t        lookbehind: true\n\t      },\n\t      {\n\t        // Modifiers\n\t        pattern:\n\t          /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n\t        lookbehind: true\n\t      }\n\t    ],\n\t    number: [\n\t      // Hexadecimal, octal and binary\n\t      /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n\t      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n\t    ],\n\t    operator: [\n\t      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\n\t      {\n\t        pattern:\n\t          /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n\t        lookbehind: true\n\t      }\n\t    ],\n\t    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n\t  }\n\t  Prism.languages.pascal.asm.inside = Prism.languages.extend('pascal', {\n\t    asm: undefined,\n\t    keyword: undefined,\n\t    operator: undefined\n\t  })\n\t  Prism.languages.objectpascal = Prism.languages.pascal\n\t}\n\treturn pascal_1;\n}\n\nexport { requirePascal as __require };",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,SAAc,GAAG,MAAM;CACvB,MAAM,CAAC,WAAW,GAAG,QAAQ;CAC7B,MAAM,CAAC,OAAO,GAAG,CAAC,cAAc,CAAC;CACjC,SAAS,MAAM,CAAC,KAAK,EAAE;CACvB;CACA;CACA;CACA;CACA,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG;CAC3B,IAAI,SAAS,EAAE;CACf,MAAM,OAAO,EAAE,gBAAgB;CAC/B,MAAM,MAAM,EAAE,IAAI;CAClB,MAAM,KAAK,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC;CAClC,KAAK;CACL,IAAI,OAAO,EAAE;CACb,MAAM,OAAO,EAAE,sCAAsC;CACrD,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,MAAM,EAAE;CACZ,MAAM,OAAO,EAAE,uDAAuD;CACtE,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,GAAG,EAAE;CACT,MAAM,OAAO,EAAE,oCAAoC;CACnD,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,MAAM,EAAE,IAAI;CAClB,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,OAAO,EAAE;CACb,MAAM;CACN;CACA,QAAQ,OAAO;CACf,UAAU,gTAAgT;CAC1T,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM;CACN;CACA,QAAQ,OAAO,EAAE,8CAA8C;CAC/D,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM;CACN;CACA,QAAQ,OAAO;CACf,UAAU,kKAAkK;CAC5K,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM;CACN;CACA,QAAQ,OAAO;CACf,UAAU,khBAAkhB;CAC5hB,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,KAAK;CACL,IAAI,MAAM,EAAE;CACZ;CACA,MAAM,yBAAyB;CAC/B,MAAM,gCAAgC;CACtC,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM,8CAA8C;CACpD,MAAM;CACN,QAAQ,OAAO;CACf,UAAU,yEAAyE;CACnF,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,KAAK;CACL,IAAI,WAAW,EAAE,wBAAwB;CACzC,GAAG;CACH,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE;CACvE,IAAI,GAAG,EAAE,SAAS;CAClB,IAAI,OAAO,EAAE,SAAS;CACtB,IAAI,QAAQ,EAAE,SAAS;CACvB,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM;CACvD"
      }
    },
    {
      "name": "inject",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445027,
      "end": 1702937445027,
      "order": "normal"
    }
  ]
}
