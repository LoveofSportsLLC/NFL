{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/q.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = q\nq.displayName = 'q'\nq.aliases = []\nfunction q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern:\n          /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      },\n      {\n        pattern: /^#!.+/m,\n        greedy: true\n      }\n    ],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern:\n        /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number:\n      /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword:\n      /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  }\n}\n",
      "start": 1702937445029,
      "end": 1702937445055,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445055,
      "end": 1702937445055,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445055,
      "end": 1702937445055,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445055,
      "end": 1702937445055,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445055,
      "end": 1702937445055,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445055,
      "end": 1702937445055,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445055,
      "end": 1702937445055,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445055,
      "end": 1702937445055,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445055,
      "end": 1702937445055,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445055,
      "end": 1702937445055,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445055,
      "end": 1702937445055,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar q_1;\nvar hasRequiredQ;\n\nfunction requireQ () {\n\tif (hasRequiredQ) return q_1;\n\thasRequiredQ = 1;\n\t'use strict'\n\n\tq_1 = q\n\tq.displayName = 'q'\n\tq.aliases = []\n\tfunction q(Prism) {\n\t  Prism.languages.q = {\n\t    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t    comment: [\n\t      // From http://code.kx.com/wiki/Reference/Slash:\n\t      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n\t      {\n\t        pattern: /([\\t )\\]}])\\/.*/,\n\t        lookbehind: true,\n\t        greedy: true\n\t      }, // From http://code.kx.com/wiki/Reference/Slash:\n\t      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n\t      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n\t      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n\t      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n\t      {\n\t        pattern:\n\t          /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n\t        lookbehind: true,\n\t        greedy: true\n\t      }, // From http://code.kx.com/wiki/Reference/Slash:\n\t      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n\t      {\n\t        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n\t        greedy: true\n\t      },\n\t      {\n\t        pattern: /^#!.+/m,\n\t        greedy: true\n\t      }\n\t    ],\n\t    symbol: /`(?::\\S+|[\\w.]*)/,\n\t    datetime: {\n\t      pattern:\n\t        /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n\t      alias: 'number'\n\t    },\n\t    // The negative look-ahead prevents bad highlighting\n\t    // of verbs 0: and 1:\n\t    number:\n\t      /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n\t    keyword:\n\t      /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n\t    adverb: {\n\t      pattern: /['\\/\\\\]:?|\\beach\\b/,\n\t      alias: 'function'\n\t    },\n\t    verb: {\n\t      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n\t      alias: 'operator'\n\t    },\n\t    punctuation: /[(){}\\[\\];.]/\n\t  }\n\t}\n\treturn q_1;\n}\n\nexport { requireQ as __require };",
      "start": 1702937445055,
      "end": 1702937445056,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,IAAc,GAAG,CAAC;CAClB,CAAC,CAAC,WAAW,GAAG,GAAG;CACnB,CAAC,CAAC,OAAO,GAAG,EAAE;CACd,SAAS,CAAC,CAAC,KAAK,EAAE;CAClB,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG;CACtB,IAAI,MAAM,EAAE,uBAAuB;CACnC,IAAI,OAAO,EAAE;CACb;CACA;CACA,MAAM;CACN,QAAQ,OAAO,EAAE,iBAAiB;CAClC,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP;CACA;CACA;CACA;CACA,MAAM;CACN,QAAQ,OAAO;CACf,UAAU,mGAAmG;CAC7G,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP;CACA,MAAM;CACN,QAAQ,OAAO,EAAE,+BAA+B;CAChD,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP,MAAM;CACN,QAAQ,OAAO,EAAE,QAAQ;CACzB,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP,KAAK;CACL,IAAI,MAAM,EAAE,kBAAkB;CAC9B,IAAI,QAAQ,EAAE;CACd,MAAM,OAAO;CACb,QAAQ,4IAA4I;CACpJ,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK;CACL;CACA;CACA,IAAI,MAAM;CACV,MAAM,yFAAyF;CAC/F,IAAI,OAAO;CACX,MAAM,s4BAAs4B;CAC54B,IAAI,MAAM,EAAE;CACZ,MAAM,OAAO,EAAE,oBAAoB;CACnC,MAAM,KAAK,EAAE,UAAU;CACvB,KAAK;CACL,IAAI,IAAI,EAAE;CACV,MAAM,OAAO,EAAE,6DAA6D;CAC5E,MAAM,KAAK,EAAE,UAAU;CACvB,KAAK;CACL,IAAI,WAAW,EAAE,cAAc;CAC/B,GAAG;CACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937445056,
      "end": 1702937445056,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445056,
      "end": 1702937445056,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445056,
      "end": 1702937445056,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445056,
      "end": 1702937445056,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445056,
      "end": 1702937445056,
      "order": "normal"
    }
  ]
}
