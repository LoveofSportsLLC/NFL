{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/pages/forms/InputGroups.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Dropdown,\r\n  FormControl,\r\n  DropdownButton,\r\n  SplitButton,\r\n  InputGroup,\r\n  Row,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\nconst Default = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Default</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text>@</InputGroup.Text>\r\n        <Form.Control placeholder=\"Username\" />\r\n      </InputGroup>\r\n      <InputGroup className=\"mb-3\">\r\n        <Form.Control placeholder=\"Recipient's username\" />\r\n        <InputGroup.Text>@example.com</InputGroup.Text>\r\n      </InputGroup>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text>https://example.com/users/</InputGroup.Text>\r\n        <Form.Control />\r\n      </InputGroup>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text>$</InputGroup.Text>\r\n        <Form.Control />\r\n        <InputGroup.Text>.00</InputGroup.Text>\r\n      </InputGroup>\r\n      <InputGroup>\r\n        <InputGroup.Text>$</InputGroup.Text>\r\n        <InputGroup.Text>0.00</InputGroup.Text>\r\n        <Form.Control />\r\n      </InputGroup>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst CheckboxAndRadioAddons = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Checkbox and radio addons</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" />\r\n            <FormControl\r\n              aria-label=\"Text input with checkbox\"\r\n              placeholder=\"Checkbox\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <InputGroup>\r\n            <InputGroup.Radio aria-label=\"Radio button for following text input\" />\r\n            <FormControl\r\n              aria-label=\"Text input with radio button\"\r\n              placeholder=\"Radio\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Sizing = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Sizing</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <InputGroup className=\"mb-3\" size=\"lg\">\r\n        <InputGroup.Text>@</InputGroup.Text>\r\n        <Form.Control placeholder=\"Username\" />\r\n      </InputGroup>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text>@</InputGroup.Text>\r\n        <Form.Control placeholder=\"Username\" />\r\n      </InputGroup>\r\n      <InputGroup size=\"sm\">\r\n        <InputGroup.Text>@</InputGroup.Text>\r\n        <Form.Control placeholder=\"Username\" />\r\n      </InputGroup>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst ButtonAddons = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Button addons</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <InputGroup className=\"mb-3\">\r\n        <Button variant=\"secondary\" id=\"button-addon1\">\r\n          Button\r\n        </Button>\r\n        <FormControl\r\n          aria-label=\"Example text with button addon\"\r\n          aria-describedby=\"basic-addon1\"\r\n        />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"Recipient's username\"\r\n          aria-label=\"Recipient's username\"\r\n          aria-describedby=\"basic-addon2\"\r\n        />\r\n        <Button variant=\"secondary\" id=\"button-addon2\">\r\n          Button\r\n        </Button>\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-3\">\r\n        <Button variant=\"secondary\">Button</Button>\r\n        <Button variant=\"secondary\">Button</Button>\r\n        <FormControl aria-label=\"Example text with two button addons\" />\r\n      </InputGroup>\r\n\r\n      <InputGroup>\r\n        <FormControl\r\n          placeholder=\"Recipient's username\"\r\n          aria-label=\"Recipient's username with two button addons\"\r\n        />\r\n        <Button variant=\"secondary\">Button</Button>\r\n        <Button variant=\"secondary\">Button</Button>\r\n      </InputGroup>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst ButtonsWithDropdowns = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Buttons with dropdowns</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <InputGroup className=\"mb-3\">\r\n        <DropdownButton\r\n          variant=\"secondary\"\r\n          title=\"Dropdown\"\r\n          id=\"input-group-dropdown-1\"\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </DropdownButton>\r\n        <FormControl aria-label=\"Text input with dropdown button\" />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl aria-label=\"Text input with dropdown button\" />\r\n\r\n        <DropdownButton\r\n          variant=\"secondary\"\r\n          title=\"Dropdown\"\r\n          id=\"input-group-dropdown-2\"\r\n          align=\"end\"\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </DropdownButton>\r\n      </InputGroup>\r\n\r\n      <InputGroup>\r\n        <DropdownButton\r\n          variant=\"secondary\"\r\n          title=\"Dropdown\"\r\n          id=\"input-group-dropdown-3\"\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </DropdownButton>\r\n        <FormControl aria-label=\"Text input with 2 dropdown buttons\" />\r\n        <DropdownButton\r\n          variant=\"secondary\"\r\n          title=\"Dropdown\"\r\n          id=\"input-group-dropdown-4\"\r\n          align=\"end\"\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </DropdownButton>\r\n      </InputGroup>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst SegmentedButtons = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Segmented buttons</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <InputGroup className=\"mb-3\">\r\n        <SplitButton\r\n          variant=\"secondary\"\r\n          title=\"Action\"\r\n          id=\"segmented-button-dropdown-1\"\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </SplitButton>\r\n        <FormControl aria-label=\"Text input with dropdown button\" />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl aria-label=\"Text input with dropdown button\" />\r\n        <SplitButton\r\n          variant=\"secondary\"\r\n          title=\"Action\"\r\n          id=\"segmented-button-dropdown-2\"\r\n          alignRight\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </SplitButton>\r\n      </InputGroup>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst InputGroups = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Input Groups\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Input Groups</h1>\r\n\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <Default />\r\n          <CheckboxAndRadioAddons />\r\n          <Sizing />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <ButtonAddons />\r\n          <ButtonsWithDropdowns />\r\n          <SegmentedButtons />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default InputGroups;\r\n",
      "start": 1702937436962,
      "end": 1702937440808,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937440808,
      "end": 1702937440808,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937440808,
      "end": 1702937440808,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport {\n  Card,\n  Col,\n  Container,\n  Dropdown,\n  FormControl,\n  DropdownButton,\n  SplitButton,\n  InputGroup,\n  Row,\n  Button,\n  Form\n} from \"react-bootstrap\";\nconst Default = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Default\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(InputGroup.Text, { children: \"@\" }),\n      /* @__PURE__ */ jsx(Form.Control, { placeholder: \"Username\" })\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(Form.Control, { placeholder: \"Recipient's username\" }),\n      /* @__PURE__ */ jsx(InputGroup.Text, { children: \"@example.com\" })\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(InputGroup.Text, { children: \"https://example.com/users/\" }),\n      /* @__PURE__ */ jsx(Form.Control, {})\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(InputGroup.Text, { children: \"$\" }),\n      /* @__PURE__ */ jsx(Form.Control, {}),\n      /* @__PURE__ */ jsx(InputGroup.Text, { children: \".00\" })\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { children: [\n      /* @__PURE__ */ jsx(InputGroup.Text, { children: \"$\" }),\n      /* @__PURE__ */ jsx(InputGroup.Text, { children: \"0.00\" }),\n      /* @__PURE__ */ jsx(Form.Control, {})\n    ] })\n  ] })\n] });\nconst CheckboxAndRadioAddons = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Checkbox and radio addons\" }) }),\n  /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsxs(Row, { children: [\n    /* @__PURE__ */ jsx(Col, { lg: \"6\", children: /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(InputGroup.Checkbox, { \"aria-label\": \"Checkbox for following text input\" }),\n      /* @__PURE__ */ jsx(\n        FormControl,\n        {\n          \"aria-label\": \"Text input with checkbox\",\n          placeholder: \"Checkbox\"\n        }\n      )\n    ] }) }),\n    /* @__PURE__ */ jsx(Col, { lg: \"6\", children: /* @__PURE__ */ jsxs(InputGroup, { children: [\n      /* @__PURE__ */ jsx(InputGroup.Radio, { \"aria-label\": \"Radio button for following text input\" }),\n      /* @__PURE__ */ jsx(\n        FormControl,\n        {\n          \"aria-label\": \"Text input with radio button\",\n          placeholder: \"Radio\"\n        }\n      )\n    ] }) })\n  ] }) })\n] });\nconst Sizing = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Sizing\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", size: \"lg\", children: [\n      /* @__PURE__ */ jsx(InputGroup.Text, { children: \"@\" }),\n      /* @__PURE__ */ jsx(Form.Control, { placeholder: \"Username\" })\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(InputGroup.Text, { children: \"@\" }),\n      /* @__PURE__ */ jsx(Form.Control, { placeholder: \"Username\" })\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { size: \"sm\", children: [\n      /* @__PURE__ */ jsx(InputGroup.Text, { children: \"@\" }),\n      /* @__PURE__ */ jsx(Form.Control, { placeholder: \"Username\" })\n    ] })\n  ] })\n] });\nconst ButtonAddons = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Button addons\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(Button, { variant: \"secondary\", id: \"button-addon1\", children: \"Button\" }),\n      /* @__PURE__ */ jsx(\n        FormControl,\n        {\n          \"aria-label\": \"Example text with button addon\",\n          \"aria-describedby\": \"basic-addon1\"\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(\n        FormControl,\n        {\n          placeholder: \"Recipient's username\",\n          \"aria-label\": \"Recipient's username\",\n          \"aria-describedby\": \"basic-addon2\"\n        }\n      ),\n      /* @__PURE__ */ jsx(Button, { variant: \"secondary\", id: \"button-addon2\", children: \"Button\" })\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(Button, { variant: \"secondary\", children: \"Button\" }),\n      /* @__PURE__ */ jsx(Button, { variant: \"secondary\", children: \"Button\" }),\n      /* @__PURE__ */ jsx(FormControl, { \"aria-label\": \"Example text with two button addons\" })\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { children: [\n      /* @__PURE__ */ jsx(\n        FormControl,\n        {\n          placeholder: \"Recipient's username\",\n          \"aria-label\": \"Recipient's username with two button addons\"\n        }\n      ),\n      /* @__PURE__ */ jsx(Button, { variant: \"secondary\", children: \"Button\" }),\n      /* @__PURE__ */ jsx(Button, { variant: \"secondary\", children: \"Button\" })\n    ] })\n  ] })\n] });\nconst ButtonsWithDropdowns = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Buttons with dropdowns\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsxs(\n        DropdownButton,\n        {\n          variant: \"secondary\",\n          title: \"Dropdown\",\n          id: \"input-group-dropdown-1\",\n          children: [\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Another action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Something else here\" }),\n            /* @__PURE__ */ jsx(Dropdown.Divider, {}),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Separated link\" })\n          ]\n        }\n      ),\n      /* @__PURE__ */ jsx(FormControl, { \"aria-label\": \"Text input with dropdown button\" })\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(FormControl, { \"aria-label\": \"Text input with dropdown button\" }),\n      /* @__PURE__ */ jsxs(\n        DropdownButton,\n        {\n          variant: \"secondary\",\n          title: \"Dropdown\",\n          id: \"input-group-dropdown-2\",\n          align: \"end\",\n          children: [\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Another action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Something else here\" }),\n            /* @__PURE__ */ jsx(Dropdown.Divider, {}),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Separated link\" })\n          ]\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { children: [\n      /* @__PURE__ */ jsxs(\n        DropdownButton,\n        {\n          variant: \"secondary\",\n          title: \"Dropdown\",\n          id: \"input-group-dropdown-3\",\n          children: [\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Another action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Something else here\" }),\n            /* @__PURE__ */ jsx(Dropdown.Divider, {}),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Separated link\" })\n          ]\n        }\n      ),\n      /* @__PURE__ */ jsx(FormControl, { \"aria-label\": \"Text input with 2 dropdown buttons\" }),\n      /* @__PURE__ */ jsxs(\n        DropdownButton,\n        {\n          variant: \"secondary\",\n          title: \"Dropdown\",\n          id: \"input-group-dropdown-4\",\n          align: \"end\",\n          children: [\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Another action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Something else here\" }),\n            /* @__PURE__ */ jsx(Dropdown.Divider, {}),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Separated link\" })\n          ]\n        }\n      )\n    ] })\n  ] })\n] });\nconst SegmentedButtons = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Segmented buttons\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsxs(\n        SplitButton,\n        {\n          variant: \"secondary\",\n          title: \"Action\",\n          id: \"segmented-button-dropdown-1\",\n          children: [\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Another action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Something else here\" }),\n            /* @__PURE__ */ jsx(Dropdown.Divider, {}),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Separated link\" })\n          ]\n        }\n      ),\n      /* @__PURE__ */ jsx(FormControl, { \"aria-label\": \"Text input with dropdown button\" })\n    ] }),\n    /* @__PURE__ */ jsxs(InputGroup, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(FormControl, { \"aria-label\": \"Text input with dropdown button\" }),\n      /* @__PURE__ */ jsxs(\n        SplitButton,\n        {\n          variant: \"secondary\",\n          title: \"Action\",\n          id: \"segmented-button-dropdown-2\",\n          alignRight: true,\n          children: [\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Another action\" }),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Something else here\" }),\n            /* @__PURE__ */ jsx(Dropdown.Divider, {}),\n            /* @__PURE__ */ jsx(Dropdown.Item, { href: \"#\", children: \"Separated link\" })\n          ]\n        }\n      )\n    ] })\n  ] })\n] });\nconst InputGroups = () => /* @__PURE__ */ jsxs(React.Fragment, { children: [\n  /* @__PURE__ */ jsx(Helmet, { title: \"Input Groups\" }),\n  /* @__PURE__ */ jsxs(Container, { fluid: true, className: \"p-0\", children: [\n    /* @__PURE__ */ jsx(\"h1\", { className: \"h3 mb-3\", children: \"Input Groups\" }),\n    /* @__PURE__ */ jsxs(Row, { children: [\n      /* @__PURE__ */ jsxs(Col, { lg: \"6\", children: [\n        /* @__PURE__ */ jsx(Default, {}),\n        /* @__PURE__ */ jsx(CheckboxAndRadioAddons, {}),\n        /* @__PURE__ */ jsx(Sizing, {})\n      ] }),\n      /* @__PURE__ */ jsxs(Col, { lg: \"6\", children: [\n        /* @__PURE__ */ jsx(ButtonAddons, {}),\n        /* @__PURE__ */ jsx(ButtonsWithDropdowns, {}),\n        /* @__PURE__ */ jsx(SegmentedButtons, {})\n      ] })\n    ] })\n  ] })\n] });\nexport default InputGroups;\n",
      "start": 1702937440808,
      "end": 1702937440821,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/pages/forms/InputGroups.jsx"
        ],
        "sourcesContent": [
          "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Dropdown,\r\n  FormControl,\r\n  DropdownButton,\r\n  SplitButton,\r\n  InputGroup,\r\n  Row,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\nconst Default = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Default</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text>@</InputGroup.Text>\r\n        <Form.Control placeholder=\"Username\" />\r\n      </InputGroup>\r\n      <InputGroup className=\"mb-3\">\r\n        <Form.Control placeholder=\"Recipient's username\" />\r\n        <InputGroup.Text>@example.com</InputGroup.Text>\r\n      </InputGroup>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text>https://example.com/users/</InputGroup.Text>\r\n        <Form.Control />\r\n      </InputGroup>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text>$</InputGroup.Text>\r\n        <Form.Control />\r\n        <InputGroup.Text>.00</InputGroup.Text>\r\n      </InputGroup>\r\n      <InputGroup>\r\n        <InputGroup.Text>$</InputGroup.Text>\r\n        <InputGroup.Text>0.00</InputGroup.Text>\r\n        <Form.Control />\r\n      </InputGroup>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst CheckboxAndRadioAddons = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Checkbox and radio addons</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <InputGroup className=\"mb-3\">\r\n            <InputGroup.Checkbox aria-label=\"Checkbox for following text input\" />\r\n            <FormControl\r\n              aria-label=\"Text input with checkbox\"\r\n              placeholder=\"Checkbox\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <InputGroup>\r\n            <InputGroup.Radio aria-label=\"Radio button for following text input\" />\r\n            <FormControl\r\n              aria-label=\"Text input with radio button\"\r\n              placeholder=\"Radio\"\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Sizing = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Sizing</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <InputGroup className=\"mb-3\" size=\"lg\">\r\n        <InputGroup.Text>@</InputGroup.Text>\r\n        <Form.Control placeholder=\"Username\" />\r\n      </InputGroup>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Text>@</InputGroup.Text>\r\n        <Form.Control placeholder=\"Username\" />\r\n      </InputGroup>\r\n      <InputGroup size=\"sm\">\r\n        <InputGroup.Text>@</InputGroup.Text>\r\n        <Form.Control placeholder=\"Username\" />\r\n      </InputGroup>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst ButtonAddons = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Button addons</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <InputGroup className=\"mb-3\">\r\n        <Button variant=\"secondary\" id=\"button-addon1\">\r\n          Button\r\n        </Button>\r\n        <FormControl\r\n          aria-label=\"Example text with button addon\"\r\n          aria-describedby=\"basic-addon1\"\r\n        />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"Recipient's username\"\r\n          aria-label=\"Recipient's username\"\r\n          aria-describedby=\"basic-addon2\"\r\n        />\r\n        <Button variant=\"secondary\" id=\"button-addon2\">\r\n          Button\r\n        </Button>\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-3\">\r\n        <Button variant=\"secondary\">Button</Button>\r\n        <Button variant=\"secondary\">Button</Button>\r\n        <FormControl aria-label=\"Example text with two button addons\" />\r\n      </InputGroup>\r\n\r\n      <InputGroup>\r\n        <FormControl\r\n          placeholder=\"Recipient's username\"\r\n          aria-label=\"Recipient's username with two button addons\"\r\n        />\r\n        <Button variant=\"secondary\">Button</Button>\r\n        <Button variant=\"secondary\">Button</Button>\r\n      </InputGroup>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst ButtonsWithDropdowns = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Buttons with dropdowns</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <InputGroup className=\"mb-3\">\r\n        <DropdownButton\r\n          variant=\"secondary\"\r\n          title=\"Dropdown\"\r\n          id=\"input-group-dropdown-1\"\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </DropdownButton>\r\n        <FormControl aria-label=\"Text input with dropdown button\" />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl aria-label=\"Text input with dropdown button\" />\r\n\r\n        <DropdownButton\r\n          variant=\"secondary\"\r\n          title=\"Dropdown\"\r\n          id=\"input-group-dropdown-2\"\r\n          align=\"end\"\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </DropdownButton>\r\n      </InputGroup>\r\n\r\n      <InputGroup>\r\n        <DropdownButton\r\n          variant=\"secondary\"\r\n          title=\"Dropdown\"\r\n          id=\"input-group-dropdown-3\"\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </DropdownButton>\r\n        <FormControl aria-label=\"Text input with 2 dropdown buttons\" />\r\n        <DropdownButton\r\n          variant=\"secondary\"\r\n          title=\"Dropdown\"\r\n          id=\"input-group-dropdown-4\"\r\n          align=\"end\"\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </DropdownButton>\r\n      </InputGroup>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst SegmentedButtons = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Segmented buttons</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <InputGroup className=\"mb-3\">\r\n        <SplitButton\r\n          variant=\"secondary\"\r\n          title=\"Action\"\r\n          id=\"segmented-button-dropdown-1\"\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </SplitButton>\r\n        <FormControl aria-label=\"Text input with dropdown button\" />\r\n      </InputGroup>\r\n\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl aria-label=\"Text input with dropdown button\" />\r\n        <SplitButton\r\n          variant=\"secondary\"\r\n          title=\"Action\"\r\n          id=\"segmented-button-dropdown-2\"\r\n          alignRight\r\n        >\r\n          <Dropdown.Item href=\"#\">Action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\r\n          <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\r\n        </SplitButton>\r\n      </InputGroup>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst InputGroups = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Input Groups\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Input Groups</h1>\r\n\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <Default />\r\n          <CheckboxAndRadioAddons />\r\n          <Sizing />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <ButtonAddons />\r\n          <ButtonsWithDropdowns />\r\n          <SegmentedButtons />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default InputGroups;\r\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937440821,
      "end": 1702937440822,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937440822,
      "end": 1702937440822,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937440822,
      "end": 1702937440822,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937440822,
      "end": 1702937440822,
      "order": "normal"
    }
  ]
}
