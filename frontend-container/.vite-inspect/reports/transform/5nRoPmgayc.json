{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/contexts/SidebarProvider.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useState } from \"react\";\r\nimport { SIDEBAR_POSITION, SIDEBAR_BEHAVIOR } from \"../constants\";\r\nimport useSettingsState from \"../hooks/useSettingsState\";\r\nimport SidebarContext from \"./SidebarContext\";\r\n\r\nfunction SidebarProvider({ children }) {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [position, setPosition] = useSettingsState(\r\n    \"sidebarPosition\",\r\n    SIDEBAR_POSITION.LEFT,\r\n  );\r\n\r\n  // State for the behavior of the sidebar (e.g., sticky or static)\r\n  const [behavior, setBehavior] = useSettingsState(\r\n    \"sidebarBehavior\",\r\n    SIDEBAR_BEHAVIOR.STICKY,\r\n  );\r\n\r\n  return (\r\n    <SidebarContext.Provider\r\n      value={{\r\n        isOpen,\r\n        setIsOpen,\r\n        position,\r\n        setPosition,\r\n        behavior,\r\n        setBehavior,\r\n      }}\r\n    >\r\n      {children}\r\n    </SidebarContext.Provider>\r\n  );\r\n}\r\n\r\nexport default SidebarProvider;\r\n",
      "start": 1702937435960,
      "end": 1702937436068,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937436069,
      "end": 1702937436069,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937436069,
      "end": 1702937436069,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx } from \"react/jsx-runtime\";\nimport React, { useState } from \"react\";\nimport { SIDEBAR_POSITION, SIDEBAR_BEHAVIOR } from \"../constants\";\nimport useSettingsState from \"../hooks/useSettingsState\";\nimport SidebarContext from \"./SidebarContext\";\nfunction SidebarProvider({ children }) {\n  const [isOpen, setIsOpen] = useState(true);\n  const [position, setPosition] = useSettingsState(\n    \"sidebarPosition\",\n    SIDEBAR_POSITION.LEFT\n  );\n  const [behavior, setBehavior] = useSettingsState(\n    \"sidebarBehavior\",\n    SIDEBAR_BEHAVIOR.STICKY\n  );\n  return /* @__PURE__ */ jsx(\n    SidebarContext.Provider,\n    {\n      value: {\n        isOpen,\n        setIsOpen,\n        position,\n        setPosition,\n        behavior,\n        setBehavior\n      },\n      children\n    }\n  );\n}\nexport default SidebarProvider;\n",
      "start": 1702937436069,
      "end": 1702937436193,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/contexts/SidebarProvider.jsx"
        ],
        "sourcesContent": [
          "import React, { useState } from \"react\";\r\nimport { SIDEBAR_POSITION, SIDEBAR_BEHAVIOR } from \"../constants\";\r\nimport useSettingsState from \"../hooks/useSettingsState\";\r\nimport SidebarContext from \"./SidebarContext\";\r\n\r\nfunction SidebarProvider({ children }) {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [position, setPosition] = useSettingsState(\r\n    \"sidebarPosition\",\r\n    SIDEBAR_POSITION.LEFT,\r\n  );\r\n\r\n  // State for the behavior of the sidebar (e.g., sticky or static)\r\n  const [behavior, setBehavior] = useSettingsState(\r\n    \"sidebarBehavior\",\r\n    SIDEBAR_BEHAVIOR.STICKY,\r\n  );\r\n\r\n  return (\r\n    <SidebarContext.Provider\r\n      value={{\r\n        isOpen,\r\n        setIsOpen,\r\n        position,\r\n        setPosition,\r\n        behavior,\r\n        setBehavior,\r\n      }}\r\n    >\r\n      {children}\r\n    </SidebarContext.Provider>\r\n  );\r\n}\r\n\r\nexport default SidebarProvider;\r\n"
        ],
        "mappings": "AAmBI;AAnBJ,OAAO,SAAS,gBAAgB;AAChC,SAAS,kBAAkB,wBAAwB;AACnD,OAAO,sBAAsB;AAC7B,OAAO,oBAAoB;AAE3B,SAAS,gBAAgB,EAAE,SAAS,GAAG;AACrC,QAAM,CAAC,QAAQ,SAAS,IAAI,SAAS,IAAI;AACzC,QAAM,CAAC,UAAU,WAAW,IAAI;AAAA,IAC9B;AAAA,IACA,iBAAiB;AAAA,EACnB;AAGA,QAAM,CAAC,UAAU,WAAW,IAAI;AAAA,IAC9B;AAAA,IACA,iBAAiB;AAAA,EACnB;AAEA,SACE;AAAA,IAAC,eAAe;AAAA,IAAf;AAAA,MACC,OAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MAEC;AAAA;AAAA,EACH;AAEJ;AAEA,eAAe;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937436193,
      "end": 1702937436193,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937436193,
      "end": 1702937436193,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937436193,
      "end": 1702937436193,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937436193,
      "end": 1702937436193,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937436193,
      "end": 1702937436193,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937436193,
      "end": 1702937436193,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937436193,
      "end": 1702937436193,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937436193,
      "end": 1702937436193,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937436193,
      "end": 1702937436193,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937436193,
      "end": 1702937436193,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937436193,
      "end": 1702937436193,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937436193,
      "end": 1702937436194,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937436194,
      "end": 1702937436194,
      "order": "normal"
    }
  ]
}
