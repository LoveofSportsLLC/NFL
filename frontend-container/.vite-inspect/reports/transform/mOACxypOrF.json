{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/pages/forms/FloatingLabels.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FloatingLabel,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nconst InputComponent = () => (\r\n  <Card>\r\n    <Card.Header className=\"pb-0\">\r\n      <Card.Title className=\"mb-0\">Input</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <FloatingLabel\r\n        controlId=\"floatingInput\"\r\n        label=\"Email address\"\r\n        className=\"mb-3\"\r\n      >\r\n        <Form.Control type=\"email\" placeholder=\"name@example.com\" />\r\n      </FloatingLabel>\r\n      <FloatingLabel controlId=\"floatingInput\" label=\"Email address\">\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"name@example.com\"\r\n          defaultValue=\"name@example.com\"\r\n        />\r\n      </FloatingLabel>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst TextareaComponent = () => (\r\n  <Card>\r\n    <Card.Header className=\"pb-0\">\r\n      <Card.Title className=\"mb-0\">Textarea</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <FloatingLabel controlId=\"floatingTextarea2\" label=\"Comments\">\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          placeholder=\"Leave a comment here\"\r\n          style={{ height: \"100px\" }}\r\n        />\r\n      </FloatingLabel>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst SelectComponent = () => (\r\n  <Card>\r\n    <Card.Header className=\"pb-0\">\r\n      <Card.Title className=\"mb-0\">Select</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <FloatingLabel controlId=\"floatingSelect\" label=\"Works with selects\">\r\n        <Form.Select aria-label=\"Floating label select example\">\r\n          <option>Open this select menu</option>\r\n          <option value=\"1\">One</option>\r\n          <option value=\"2\">Two</option>\r\n          <option value=\"3\">Three</option>\r\n        </Form.Select>\r\n      </FloatingLabel>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Layout = () => (\r\n  <Card>\r\n    <Card.Header className=\"pb-0\">\r\n      <Card.Title className=\"mb-0\">Layout</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"g-2\">\r\n        <Col md>\r\n          <FloatingLabel controlId=\"floatingInputGrid\" label=\"Email address\">\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"name@example.com\"\r\n              defaultValue=\"name@example.com\"\r\n            />\r\n          </FloatingLabel>\r\n        </Col>\r\n        <Col md>\r\n          <FloatingLabel\r\n            controlId=\"floatingSelectGrid\"\r\n            label=\"Works with selects\"\r\n          >\r\n            <Form.Select aria-label=\"Floating label select example\">\r\n              <option>Open this select menu</option>\r\n              <option value=\"1\">One</option>\r\n              <option value=\"2\">Two</option>\r\n              <option value=\"3\">Three</option>\r\n            </Form.Select>\r\n          </FloatingLabel>\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst ReadOnly = () => (\r\n  <Card>\r\n    <Card.Header className=\"pb-0\">\r\n      <Card.Title className=\"mb-0\">Read only</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <FloatingLabel controlId=\"floatingInput\" label=\"Readonly input\">\r\n        <Form.Control readOnly type=\"text\" defaultValue=\"Contents\" />\r\n      </FloatingLabel>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst FloatingLabels = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Floating Labels\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Floating Labels</h1>\r\n\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <InputComponent />\r\n          <TextareaComponent />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <SelectComponent />\r\n          <Layout />\r\n          <ReadOnly />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default FloatingLabels;\r\n",
      "start": 1702937436962,
      "end": 1702937440808,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937440808,
      "end": 1702937440808,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937440808,
      "end": 1702937440808,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport {\n  Card,\n  Col,\n  Container,\n  Form,\n  FloatingLabel,\n  Row\n} from \"react-bootstrap\";\nconst InputComponent = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { className: \"pb-0\", children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Input\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsx(\n      FloatingLabel,\n      {\n        controlId: \"floatingInput\",\n        label: \"Email address\",\n        className: \"mb-3\",\n        children: /* @__PURE__ */ jsx(Form.Control, { type: \"email\", placeholder: \"name@example.com\" })\n      }\n    ),\n    /* @__PURE__ */ jsx(FloatingLabel, { controlId: \"floatingInput\", label: \"Email address\", children: /* @__PURE__ */ jsx(\n      Form.Control,\n      {\n        type: \"email\",\n        placeholder: \"name@example.com\",\n        defaultValue: \"name@example.com\"\n      }\n    ) })\n  ] })\n] });\nconst TextareaComponent = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { className: \"pb-0\", children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Textarea\" }) }),\n  /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsx(FloatingLabel, { controlId: \"floatingTextarea2\", label: \"Comments\", children: /* @__PURE__ */ jsx(\n    Form.Control,\n    {\n      as: \"textarea\",\n      placeholder: \"Leave a comment here\",\n      style: { height: \"100px\" }\n    }\n  ) }) })\n] });\nconst SelectComponent = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { className: \"pb-0\", children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Select\" }) }),\n  /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsx(FloatingLabel, { controlId: \"floatingSelect\", label: \"Works with selects\", children: /* @__PURE__ */ jsxs(Form.Select, { \"aria-label\": \"Floating label select example\", children: [\n    /* @__PURE__ */ jsx(\"option\", { children: \"Open this select menu\" }),\n    /* @__PURE__ */ jsx(\"option\", { value: \"1\", children: \"One\" }),\n    /* @__PURE__ */ jsx(\"option\", { value: \"2\", children: \"Two\" }),\n    /* @__PURE__ */ jsx(\"option\", { value: \"3\", children: \"Three\" })\n  ] }) }) })\n] });\nconst Layout = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { className: \"pb-0\", children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Layout\" }) }),\n  /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsxs(Row, { className: \"g-2\", children: [\n    /* @__PURE__ */ jsx(Col, { md: true, children: /* @__PURE__ */ jsx(FloatingLabel, { controlId: \"floatingInputGrid\", label: \"Email address\", children: /* @__PURE__ */ jsx(\n      Form.Control,\n      {\n        type: \"email\",\n        placeholder: \"name@example.com\",\n        defaultValue: \"name@example.com\"\n      }\n    ) }) }),\n    /* @__PURE__ */ jsx(Col, { md: true, children: /* @__PURE__ */ jsx(\n      FloatingLabel,\n      {\n        controlId: \"floatingSelectGrid\",\n        label: \"Works with selects\",\n        children: /* @__PURE__ */ jsxs(Form.Select, { \"aria-label\": \"Floating label select example\", children: [\n          /* @__PURE__ */ jsx(\"option\", { children: \"Open this select menu\" }),\n          /* @__PURE__ */ jsx(\"option\", { value: \"1\", children: \"One\" }),\n          /* @__PURE__ */ jsx(\"option\", { value: \"2\", children: \"Two\" }),\n          /* @__PURE__ */ jsx(\"option\", { value: \"3\", children: \"Three\" })\n        ] })\n      }\n    ) })\n  ] }) })\n] });\nconst ReadOnly = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { className: \"pb-0\", children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Read only\" }) }),\n  /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsx(FloatingLabel, { controlId: \"floatingInput\", label: \"Readonly input\", children: /* @__PURE__ */ jsx(Form.Control, { readOnly: true, type: \"text\", defaultValue: \"Contents\" }) }) })\n] });\nconst FloatingLabels = () => /* @__PURE__ */ jsxs(React.Fragment, { children: [\n  /* @__PURE__ */ jsx(Helmet, { title: \"Floating Labels\" }),\n  /* @__PURE__ */ jsxs(Container, { fluid: true, className: \"p-0\", children: [\n    /* @__PURE__ */ jsx(\"h1\", { className: \"h3 mb-3\", children: \"Floating Labels\" }),\n    /* @__PURE__ */ jsxs(Row, { children: [\n      /* @__PURE__ */ jsxs(Col, { lg: \"6\", children: [\n        /* @__PURE__ */ jsx(InputComponent, {}),\n        /* @__PURE__ */ jsx(TextareaComponent, {})\n      ] }),\n      /* @__PURE__ */ jsxs(Col, { lg: \"6\", children: [\n        /* @__PURE__ */ jsx(SelectComponent, {}),\n        /* @__PURE__ */ jsx(Layout, {}),\n        /* @__PURE__ */ jsx(ReadOnly, {})\n      ] })\n    ] })\n  ] })\n] });\nexport default FloatingLabels;\n",
      "start": 1702937440808,
      "end": 1702937440824,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/pages/forms/FloatingLabels.jsx"
        ],
        "sourcesContent": [
          "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FloatingLabel,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nconst InputComponent = () => (\r\n  <Card>\r\n    <Card.Header className=\"pb-0\">\r\n      <Card.Title className=\"mb-0\">Input</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <FloatingLabel\r\n        controlId=\"floatingInput\"\r\n        label=\"Email address\"\r\n        className=\"mb-3\"\r\n      >\r\n        <Form.Control type=\"email\" placeholder=\"name@example.com\" />\r\n      </FloatingLabel>\r\n      <FloatingLabel controlId=\"floatingInput\" label=\"Email address\">\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"name@example.com\"\r\n          defaultValue=\"name@example.com\"\r\n        />\r\n      </FloatingLabel>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst TextareaComponent = () => (\r\n  <Card>\r\n    <Card.Header className=\"pb-0\">\r\n      <Card.Title className=\"mb-0\">Textarea</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <FloatingLabel controlId=\"floatingTextarea2\" label=\"Comments\">\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          placeholder=\"Leave a comment here\"\r\n          style={{ height: \"100px\" }}\r\n        />\r\n      </FloatingLabel>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst SelectComponent = () => (\r\n  <Card>\r\n    <Card.Header className=\"pb-0\">\r\n      <Card.Title className=\"mb-0\">Select</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <FloatingLabel controlId=\"floatingSelect\" label=\"Works with selects\">\r\n        <Form.Select aria-label=\"Floating label select example\">\r\n          <option>Open this select menu</option>\r\n          <option value=\"1\">One</option>\r\n          <option value=\"2\">Two</option>\r\n          <option value=\"3\">Three</option>\r\n        </Form.Select>\r\n      </FloatingLabel>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Layout = () => (\r\n  <Card>\r\n    <Card.Header className=\"pb-0\">\r\n      <Card.Title className=\"mb-0\">Layout</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Row className=\"g-2\">\r\n        <Col md>\r\n          <FloatingLabel controlId=\"floatingInputGrid\" label=\"Email address\">\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"name@example.com\"\r\n              defaultValue=\"name@example.com\"\r\n            />\r\n          </FloatingLabel>\r\n        </Col>\r\n        <Col md>\r\n          <FloatingLabel\r\n            controlId=\"floatingSelectGrid\"\r\n            label=\"Works with selects\"\r\n          >\r\n            <Form.Select aria-label=\"Floating label select example\">\r\n              <option>Open this select menu</option>\r\n              <option value=\"1\">One</option>\r\n              <option value=\"2\">Two</option>\r\n              <option value=\"3\">Three</option>\r\n            </Form.Select>\r\n          </FloatingLabel>\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst ReadOnly = () => (\r\n  <Card>\r\n    <Card.Header className=\"pb-0\">\r\n      <Card.Title className=\"mb-0\">Read only</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <FloatingLabel controlId=\"floatingInput\" label=\"Readonly input\">\r\n        <Form.Control readOnly type=\"text\" defaultValue=\"Contents\" />\r\n      </FloatingLabel>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst FloatingLabels = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Floating Labels\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Floating Labels</h1>\r\n\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <InputComponent />\r\n          <TextareaComponent />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <SelectComponent />\r\n          <Layout />\r\n          <ReadOnly />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default FloatingLabels;\r\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937440824,
      "end": 1702937440824,
      "order": "normal"
    }
  ]
}
