{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/dom-helpers/esm/addEventListener.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;",
      "start": 1702937442073,
      "end": 1702937442093,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937442093,
      "end": 1702937442093,
      "order": "normal"
    }
  ]
}
