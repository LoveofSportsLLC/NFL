{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/ada.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = ada\nada.displayName = 'ada'\nada.aliases = []\nfunction ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\n    number: [\n      {\n        pattern:\n          /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      },\n      {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }\n    ],\n    'attr-name': /\\b'\\w+/,\n    keyword:\n      /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:\\w)*\\b/i\n  }\n}\n",
      "start": 1702937444702,
      "end": 1702937444821,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444821,
      "end": 1702937444821,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444821,
      "end": 1702937444821,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444821,
      "end": 1702937444821,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444821,
      "end": 1702937444821,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444821,
      "end": 1702937444821,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444821,
      "end": 1702937444821,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444821,
      "end": 1702937444821,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444821,
      "end": 1702937444821,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444821,
      "end": 1702937444821,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444821,
      "end": 1702937444821,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar ada_1;\nvar hasRequiredAda;\n\nfunction requireAda () {\n\tif (hasRequiredAda) return ada_1;\n\thasRequiredAda = 1;\n\t'use strict'\n\n\tada_1 = ada\n\tada.displayName = 'ada'\n\tada.aliases = []\n\tfunction ada(Prism) {\n\t  Prism.languages.ada = {\n\t    comment: /--.*/,\n\t    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\n\t    number: [\n\t      {\n\t        pattern:\n\t          /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n\t      },\n\t      {\n\t        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n\t      }\n\t    ],\n\t    'attr-name': /\\b'\\w+/,\n\t    keyword:\n\t      /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n\t    boolean: /\\b(?:false|true)\\b/i,\n\t    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n\t    punctuation: /\\.\\.?|[,;():]/,\n\t    char: /'.'/,\n\t    variable: /\\b[a-z](?:\\w)*\\b/i\n\t  }\n\t}\n\treturn ada_1;\n}\n\nexport { requireAda as __require };",
      "start": 1702937444821,
      "end": 1702937444822,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,MAAc,GAAG,GAAG;CACpB,GAAG,CAAC,WAAW,GAAG,KAAK;CACvB,GAAG,CAAC,OAAO,GAAG,EAAE;CAChB,SAAS,GAAG,CAAC,KAAK,EAAE;CACpB,EAAE,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG;CACxB,IAAI,OAAO,EAAE,MAAM;CACnB,IAAI,MAAM,EAAE,sBAAsB;CAClC,IAAI,MAAM,EAAE;CACZ,MAAM;CACN,QAAQ,OAAO;CACf,UAAU,yFAAyF;CACnG,OAAO;CACP,MAAM;CACN,QAAQ,OAAO,EAAE,0DAA0D;CAC3E,OAAO;CACP,KAAK;CACL,IAAI,WAAW,EAAE,QAAQ;CACzB,IAAI,OAAO;CACX,MAAM,4cAA4c;CACld,IAAI,OAAO,EAAE,qBAAqB;CAClC,IAAI,QAAQ,EAAE,oCAAoC;CAClD,IAAI,WAAW,EAAE,eAAe;CAChC,IAAI,IAAI,EAAE,KAAK;CACf,IAAI,QAAQ,EAAE,mBAAmB;CACjC,GAAG;CACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937444822,
      "end": 1702937444822,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444822,
      "end": 1702937444822,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444822,
      "end": 1702937444822,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444822,
      "end": 1702937444822,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444822,
      "end": 1702937444822,
      "order": "normal"
    }
  ]
}
