{
  "resolvedId": "/app/src/components/Settings.jsx",
  "transforms": [
    {
      "name": "__load__",
      "result": "import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Alert, Button } from \"react-bootstrap\";\r\n\r\nimport { Sliders, BookOpen } from \"react-feather\";\r\n\r\nimport {\r\n  SIDEBAR_POSITION,\r\n  SIDEBAR_BEHAVIOR,\r\n  LAYOUT,\r\n  THEME,\r\n} from \"../constants\";\r\nimport useOuterClick from \"../hooks/useOuterClick\";\r\nimport { useTheme } from \"../hooks/useTheme\";\r\nimport useSidebar from \"../hooks/useSidebar\";\r\nimport useLayout from \"../hooks/useLayout\";\r\n\r\nconst themeOptions = [\r\n  {\r\n    name: \"Default\",\r\n    value: THEME.DEFAULT,\r\n  },\r\n  {\r\n    name: \"Colored\",\r\n    value: THEME.COLORED,\r\n  },\r\n  {\r\n    name: \"Dark\",\r\n    value: THEME.DARK,\r\n  },\r\n  {\r\n    name: \"Light\",\r\n    value: THEME.LIGHT,\r\n  },\r\n];\r\n\r\nconst sidebarPositionOptions = [\r\n  {\r\n    name: \"Left\",\r\n    value: SIDEBAR_POSITION.LEFT,\r\n  },\r\n  {\r\n    name: \"Right\",\r\n    value: SIDEBAR_POSITION.RIGHT,\r\n  },\r\n];\r\n\r\nconst sidebarBehaviorOptions = [\r\n  {\r\n    name: \"Sticky\",\r\n    value: SIDEBAR_BEHAVIOR.STICKY,\r\n  },\r\n  {\r\n    name: \"Fixed\",\r\n    value: SIDEBAR_BEHAVIOR.FIXED,\r\n  },\r\n  {\r\n    name: \"Compact\",\r\n    value: SIDEBAR_BEHAVIOR.COMPACT,\r\n  },\r\n];\r\n\r\nconst layoutOptions = [\r\n  {\r\n    name: \"Fluid\",\r\n    value: LAYOUT.FLUID,\r\n  },\r\n  {\r\n    name: \"Boxed\",\r\n    value: LAYOUT.BOXED,\r\n  },\r\n];\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Settings = () => {\r\n  const query = useQuery();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const { theme, setTheme } = useTheme();\r\n  const { position, setPosition, behavior, setBehavior } = useSidebar();\r\n  const { layout, setLayout } = useLayout();\r\n\r\n  const innerRef = useOuterClick(() => {\r\n    setIsOpen(false);\r\n  });\r\n\r\n  const setSettingByQueryParam = (name, set) => {\r\n    const value = query.get(name);\r\n    if (value) {\r\n      set(value);\r\n    }\r\n  };\r\n\r\n  // Read from query parameter (e.g. ?theme=dark)\r\n  // only for demo purposes\r\n  useEffect(() => {\r\n    setSettingByQueryParam(\"theme\", setTheme);\r\n    setSettingByQueryParam(\"sidebarPosition\", setPosition);\r\n    setSettingByQueryParam(\"sidebarBehavior\", setBehavior);\r\n    setSettingByQueryParam(\"layout\", setLayout);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={innerRef}\r\n      className={`settings js-settings ${isOpen ? \"open\" : \"\"}`}\r\n    >\r\n      <div className=\"settings-toggle\">\r\n        <div\r\n          className=\"settings-toggle-option settings-toggle-option-text js-settings-toggle\"\r\n          title=\"Theme Builder\"\r\n          onClick={() => setIsOpen(true)}\r\n        >\r\n          <Sliders className=\"feather align-middle\" /> Builder\r\n        </div>\r\n        <a\r\n          className=\"settings-toggle-option\"\r\n          title=\"Documentation\"\r\n          href=\"/docs/introduction\"\r\n          target=\"_blank\"\r\n        >\r\n          <BookOpen className=\"feather align-middle\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"settings-panel\">\r\n        <div className=\"settings-content\">\r\n          <div className=\"settings-title d-flex align-items-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close float-right js-settings-toggle\"\r\n              aria-label=\"Close\"\r\n              onClick={() => setIsOpen(false)}\r\n            ></button>\r\n            <h4 className=\"mb-0 ms-2 d-inline-block\">Theme Builder</h4>\r\n          </div>\r\n          <div className=\"settings-body\">\r\n            <Alert variant=\"primary\">\r\n              <div className=\"alert-message\">\r\n                <strong>Hey there!</strong> Set your own customized style below.\r\n                Choose the ones that best fits your needs.\r\n              </div>\r\n            </Alert>\r\n\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Color scheme</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                The perfect color mode for your app.\r\n              </span>\r\n              <div className=\"row g-0 text-center mx-n1 mb-2\">\r\n                {themeOptions.map(({ name, value }) => (\r\n                  <div className=\"col-6\" key={value}>\r\n                    <label className=\"mx-1 d-block mb-1\">\r\n                      <input\r\n                        className=\"settings-scheme-label\"\r\n                        type=\"radio\"\r\n                        name=\"theme\"\r\n                        value={value}\r\n                        checked={theme === value}\r\n                        onChange={() => setTheme(value)}\r\n                      />\r\n                      <div className=\"settings-scheme\">\r\n                        <div\r\n                          className={`settings-scheme-theme settings-scheme-theme-${value}`}\r\n                        ></div>\r\n                      </div>\r\n                    </label>\r\n                    {name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar position\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle the position of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarPositionOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"sidebarPosition\"\r\n                      value={value}\r\n                      checked={position === value}\r\n                      onChange={() => setPosition(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar behavior\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Change the behavior of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarBehaviorOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"sidebarBehavior\"\r\n                      value={value}\r\n                      checked={behavior === value}\r\n                      onChange={() => setBehavior(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Layout</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle container layout system.\r\n              </span>\r\n              <div>\r\n                {layoutOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"layout\"\r\n                      value={value}\r\n                      checked={layout === value}\r\n                      onChange={() => setLayout(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"settings-footer\">\r\n            <div className=\"d-grid\">\r\n              <Button\r\n                as=\"a\"\r\n                rel=\"noreferrer\"\r\n                href=\"https://themes.getbootstrap.com/product/appstack-react-admin-dashboard-template/\"\r\n                target=\"_blank\"\r\n                variant=\"primary\"\r\n                size=\"lg\"\r\n              >\r\n                Purchase\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n",
      "start": 1703474741438,
      "end": 1703474741438,
      "sourcemaps": {
        "version": 3,
        "names": [
          "React",
          "useEffect",
          "useState",
          "useLocation",
          "Alert",
          "Button",
          "Sliders",
          "BookOpen",
          "SIDEBAR_POSITION",
          "SIDEBAR_BEHAVIOR",
          "LAYOUT",
          "THEME",
          "useOuterClick",
          "useTheme",
          "useSidebar",
          "useLayout",
          "themeOptions",
          "name",
          "value",
          "DEFAULT",
          "COLORED",
          "DARK",
          "LIGHT",
          "sidebarPositionOptions",
          "LEFT",
          "RIGHT",
          "sidebarBehaviorOptions",
          "STICKY",
          "FIXED",
          "COMPACT",
          "layoutOptions",
          "FLUID",
          "BOXED",
          "useQuery",
          "_s",
          "URLSearchParams",
          "search",
          "Settings",
          "_s2",
          "query",
          "isOpen",
          "setIsOpen",
          "theme",
          "setTheme",
          "position",
          "setPosition",
          "behavior",
          "setBehavior",
          "layout",
          "setLayout",
          "innerRef",
          "setSettingByQueryParam",
          "set",
          "get",
          "map",
          "_c",
          "$RefreshReg$"
        ],
        "sources": [
          "/app/src/components/Settings.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Alert, Button } from \"react-bootstrap\";\r\n\r\nimport { Sliders, BookOpen } from \"react-feather\";\r\n\r\nimport {\r\n  SIDEBAR_POSITION,\r\n  SIDEBAR_BEHAVIOR,\r\n  LAYOUT,\r\n  THEME,\r\n} from \"../constants\";\r\nimport useOuterClick from \"../hooks/useOuterClick\";\r\nimport { useTheme } from \"../hooks/useTheme\";\r\nimport useSidebar from \"../hooks/useSidebar\";\r\nimport useLayout from \"../hooks/useLayout\";\r\n\r\nconst themeOptions = [\r\n  {\r\n    name: \"Default\",\r\n    value: THEME.DEFAULT,\r\n  },\r\n  {\r\n    name: \"Colored\",\r\n    value: THEME.COLORED,\r\n  },\r\n  {\r\n    name: \"Dark\",\r\n    value: THEME.DARK,\r\n  },\r\n  {\r\n    name: \"Light\",\r\n    value: THEME.LIGHT,\r\n  },\r\n];\r\n\r\nconst sidebarPositionOptions = [\r\n  {\r\n    name: \"Left\",\r\n    value: SIDEBAR_POSITION.LEFT,\r\n  },\r\n  {\r\n    name: \"Right\",\r\n    value: SIDEBAR_POSITION.RIGHT,\r\n  },\r\n];\r\n\r\nconst sidebarBehaviorOptions = [\r\n  {\r\n    name: \"Sticky\",\r\n    value: SIDEBAR_BEHAVIOR.STICKY,\r\n  },\r\n  {\r\n    name: \"Fixed\",\r\n    value: SIDEBAR_BEHAVIOR.FIXED,\r\n  },\r\n  {\r\n    name: \"Compact\",\r\n    value: SIDEBAR_BEHAVIOR.COMPACT,\r\n  },\r\n];\r\n\r\nconst layoutOptions = [\r\n  {\r\n    name: \"Fluid\",\r\n    value: LAYOUT.FLUID,\r\n  },\r\n  {\r\n    name: \"Boxed\",\r\n    value: LAYOUT.BOXED,\r\n  },\r\n];\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Settings = () => {\r\n  const query = useQuery();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const { theme, setTheme } = useTheme();\r\n  const { position, setPosition, behavior, setBehavior } = useSidebar();\r\n  const { layout, setLayout } = useLayout();\r\n\r\n  const innerRef = useOuterClick(() => {\r\n    setIsOpen(false);\r\n  });\r\n\r\n  const setSettingByQueryParam = (name, set) => {\r\n    const value = query.get(name);\r\n    if (value) {\r\n      set(value);\r\n    }\r\n  };\r\n\r\n  // Read from query parameter (e.g. ?theme=dark)\r\n  // only for demo purposes\r\n  useEffect(() => {\r\n    setSettingByQueryParam(\"theme\", setTheme);\r\n    setSettingByQueryParam(\"sidebarPosition\", setPosition);\r\n    setSettingByQueryParam(\"sidebarBehavior\", setBehavior);\r\n    setSettingByQueryParam(\"layout\", setLayout);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={innerRef}\r\n      className={`settings js-settings ${isOpen ? \"open\" : \"\"}`}\r\n    >\r\n      <div className=\"settings-toggle\">\r\n        <div\r\n          className=\"settings-toggle-option settings-toggle-option-text js-settings-toggle\"\r\n          title=\"Theme Builder\"\r\n          onClick={() => setIsOpen(true)}\r\n        >\r\n          <Sliders className=\"feather align-middle\" /> Builder\r\n        </div>\r\n        <a\r\n          className=\"settings-toggle-option\"\r\n          title=\"Documentation\"\r\n          href=\"/docs/introduction\"\r\n          target=\"_blank\"\r\n        >\r\n          <BookOpen className=\"feather align-middle\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"settings-panel\">\r\n        <div className=\"settings-content\">\r\n          <div className=\"settings-title d-flex align-items-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close float-right js-settings-toggle\"\r\n              aria-label=\"Close\"\r\n              onClick={() => setIsOpen(false)}\r\n            ></button>\r\n            <h4 className=\"mb-0 ms-2 d-inline-block\">Theme Builder</h4>\r\n          </div>\r\n          <div className=\"settings-body\">\r\n            <Alert variant=\"primary\">\r\n              <div className=\"alert-message\">\r\n                <strong>Hey there!</strong> Set your own customized style below.\r\n                Choose the ones that best fits your needs.\r\n              </div>\r\n            </Alert>\r\n\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Color scheme</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                The perfect color mode for your app.\r\n              </span>\r\n              <div className=\"row g-0 text-center mx-n1 mb-2\">\r\n                {themeOptions.map(({ name, value }) => (\r\n                  <div className=\"col-6\" key={value}>\r\n                    <label className=\"mx-1 d-block mb-1\">\r\n                      <input\r\n                        className=\"settings-scheme-label\"\r\n                        type=\"radio\"\r\n                        name=\"theme\"\r\n                        value={value}\r\n                        checked={theme === value}\r\n                        onChange={() => setTheme(value)}\r\n                      />\r\n                      <div className=\"settings-scheme\">\r\n                        <div\r\n                          className={`settings-scheme-theme settings-scheme-theme-${value}`}\r\n                        ></div>\r\n                      </div>\r\n                    </label>\r\n                    {name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar position\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle the position of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarPositionOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"sidebarPosition\"\r\n                      value={value}\r\n                      checked={position === value}\r\n                      onChange={() => setPosition(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar behavior\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Change the behavior of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarBehaviorOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"sidebarBehavior\"\r\n                      value={value}\r\n                      checked={behavior === value}\r\n                      onChange={() => setBehavior(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Layout</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle container layout system.\r\n              </span>\r\n              <div>\r\n                {layoutOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"layout\"\r\n                      value={value}\r\n                      checked={layout === value}\r\n                      onChange={() => setLayout(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"settings-footer\">\r\n            <div className=\"d-grid\">\r\n              <Button\r\n                as=\"a\"\r\n                rel=\"noreferrer\"\r\n                href=\"https://themes.getbootstrap.com/product/appstack-react-admin-dashboard-template/\"\r\n                target=\"_blank\"\r\n                variant=\"primary\"\r\n                size=\"lg\"\r\n              >\r\n                Purchase\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"
        ],
        "mappings": "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"
      }
    },
    {
      "name": "vite:react-babel",
      "result": "import RefreshRuntime from \"/@react-refresh\";const inWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;let prevRefreshReg;let prevRefreshSig;if (import.meta.hot && !inWebWorker) {  if (!window.__vite_plugin_react_preamble_installed__) {    throw new Error(      \"@vitejs/plugin-react can't detect preamble. Something is wrong. \" +      \"See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201\"    );  }  prevRefreshReg = window.$RefreshReg$;  prevRefreshSig = window.$RefreshSig$;  window.$RefreshReg$ = (type, id) => {    RefreshRuntime.register(type, \"/app/src/components/Settings.jsx\" + \" \" + id)  };  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;}var _s = $RefreshSig$(),_s2 = $RefreshSig$();import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { Alert, Button } from \"react-bootstrap\";\n\nimport { Sliders, BookOpen } from \"react-feather\";\n\nimport {\n  SIDEBAR_POSITION,\n  SIDEBAR_BEHAVIOR,\n  LAYOUT,\n  THEME } from\n\"../constants\";\nimport useOuterClick from \"../hooks/useOuterClick\";\nimport { useTheme } from \"../hooks/useTheme\";\nimport useSidebar from \"../hooks/useSidebar\";\nimport useLayout from \"../hooks/useLayout\";\n\nconst themeOptions = [\n{\n  name: \"Default\",\n  value: THEME.DEFAULT\n},\n{\n  name: \"Colored\",\n  value: THEME.COLORED\n},\n{\n  name: \"Dark\",\n  value: THEME.DARK\n},\n{\n  name: \"Light\",\n  value: THEME.LIGHT\n}];\n\n\nconst sidebarPositionOptions = [\n{\n  name: \"Left\",\n  value: SIDEBAR_POSITION.LEFT\n},\n{\n  name: \"Right\",\n  value: SIDEBAR_POSITION.RIGHT\n}];\n\n\nconst sidebarBehaviorOptions = [\n{\n  name: \"Sticky\",\n  value: SIDEBAR_BEHAVIOR.STICKY\n},\n{\n  name: \"Fixed\",\n  value: SIDEBAR_BEHAVIOR.FIXED\n},\n{\n  name: \"Compact\",\n  value: SIDEBAR_BEHAVIOR.COMPACT\n}];\n\n\nconst layoutOptions = [\n{\n  name: \"Fluid\",\n  value: LAYOUT.FLUID\n},\n{\n  name: \"Boxed\",\n  value: LAYOUT.BOXED\n}];\n\n\nfunction useQuery() {_s();\n  return new URLSearchParams(useLocation().search);\n}_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {return [useLocation];});\n\nconst Settings = () => {_s2();\n  const query = useQuery();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { theme, setTheme } = useTheme();\n  const { position, setPosition, behavior, setBehavior } = useSidebar();\n  const { layout, setLayout } = useLayout();\n\n  const innerRef = useOuterClick(() => {\n    setIsOpen(false);\n  });\n\n  const setSettingByQueryParam = (name, set) => {\n    const value = query.get(name);\n    if (value) {\n      set(value);\n    }\n  };\n\n  // Read from query parameter (e.g. ?theme=dark)\n  // only for demo purposes\n  useEffect(() => {\n    setSettingByQueryParam(\"theme\", setTheme);\n    setSettingByQueryParam(\"sidebarPosition\", setPosition);\n    setSettingByQueryParam(\"sidebarBehavior\", setBehavior);\n    setSettingByQueryParam(\"layout\", setLayout);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div\n      ref={innerRef}\n      className={`settings js-settings ${isOpen ? \"open\" : \"\"}`}>\n      \r\n      <div className=\"settings-toggle\">\r\n        <div\n          className=\"settings-toggle-option settings-toggle-option-text js-settings-toggle\"\n          title=\"Theme Builder\"\n          onClick={() => setIsOpen(true)}>\n          \r\n          <Sliders className=\"feather align-middle\" /> Builder\r\n        </div>\r\n        <a\n          className=\"settings-toggle-option\"\n          title=\"Documentation\"\n          href=\"/docs/introduction\"\n          target=\"_blank\">\n          \r\n          <BookOpen className=\"feather align-middle\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"settings-panel\">\r\n        <div className=\"settings-content\">\r\n          <div className=\"settings-title d-flex align-items-center\">\r\n            <button\n              type=\"button\"\n              className=\"btn-close float-right js-settings-toggle\"\n              aria-label=\"Close\"\n              onClick={() => setIsOpen(false)}>\n            </button>\r\n            <h4 className=\"mb-0 ms-2 d-inline-block\">Theme Builder</h4>\r\n          </div>\r\n          <div className=\"settings-body\">\r\n            <Alert variant=\"primary\">\r\n              <div className=\"alert-message\">\r\n                <strong>Hey there!</strong> Set your own customized style below.\r\n                Choose the ones that best fits your needs.\r\n              </div>\r\n            </Alert>\r\n\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Color scheme</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                The perfect color mode for your app.\r\n              </span>\r\n              <div className=\"row g-0 text-center mx-n1 mb-2\">\r\n                {themeOptions.map(({ name, value }) =>\n                <div className=\"col-6\" key={value}>\r\n                    <label className=\"mx-1 d-block mb-1\">\r\n                      <input\n                      className=\"settings-scheme-label\"\n                      type=\"radio\"\n                      name=\"theme\"\n                      value={value}\n                      checked={theme === value}\n                      onChange={() => setTheme(value)} />\n                    \r\n                      <div className=\"settings-scheme\">\r\n                        <div\n                        className={`settings-scheme-theme settings-scheme-theme-${value}`}>\n                      </div>\r\n                      </div>\r\n                    </label>\r\n                    {name}\r\n                  </div>\n                )}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar position\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle the position of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarPositionOptions.map(({ name, value }) =>\n                <label className=\"me-1\" key={value}>\r\n                    <input\n                    className=\"settings-button-label\"\n                    type=\"radio\"\n                    name=\"sidebarPosition\"\n                    value={value}\n                    checked={position === value}\n                    onChange={() => setPosition(value)} />\n                  \r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\n                )}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar behavior\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Change the behavior of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarBehaviorOptions.map(({ name, value }) =>\n                <label className=\"me-1\" key={value}>\r\n                    <input\n                    className=\"settings-button-label\"\n                    type=\"radio\"\n                    name=\"sidebarBehavior\"\n                    value={value}\n                    checked={behavior === value}\n                    onChange={() => setBehavior(value)} />\n                  \r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\n                )}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Layout</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle container layout system.\r\n              </span>\r\n              <div>\r\n                {layoutOptions.map(({ name, value }) =>\n                <label className=\"me-1\" key={value}>\r\n                    <input\n                    className=\"settings-button-label\"\n                    type=\"radio\"\n                    name=\"layout\"\n                    value={value}\n                    checked={layout === value}\n                    onChange={() => setLayout(value)} />\n                  \r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"settings-footer\">\r\n            <div className=\"d-grid\">\r\n              <Button\n                as=\"a\"\n                rel=\"noreferrer\"\n                href=\"https://themes.getbootstrap.com/product/appstack-react-admin-dashboard-template/\"\n                target=\"_blank\"\n                variant=\"primary\"\n                size=\"lg\">\n                \r\n                Purchase\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>);\n\n};_s2(Settings, \"IstO3p/nlrsj2bKACns03HdrBYg=\", false, function () {return [useQuery, useTheme, useSidebar, useLayout, useOuterClick];});_c = Settings;\n\nexport default Settings;var _c;$RefreshReg$(_c, \"Settings\");\nif (import.meta.hot && !inWebWorker) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n\n  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n    RefreshRuntime.registerExportsForReactRefresh(\"/app/src/components/Settings.jsx\", currentExports);\n    import.meta.hot.accept((nextExports) => {\n      if (!nextExports) return;\n      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);\n      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);\n    });\n  });\n}",
      "start": 1703474741438,
      "end": 1703474741454,
      "order": "pre",
      "sourcemaps": {
        "version": 3,
        "names": [
          "React",
          "useEffect",
          "useState",
          "useLocation",
          "Alert",
          "Button",
          "Sliders",
          "BookOpen",
          "SIDEBAR_POSITION",
          "SIDEBAR_BEHAVIOR",
          "LAYOUT",
          "THEME",
          "useOuterClick",
          "useTheme",
          "useSidebar",
          "useLayout",
          "themeOptions",
          "name",
          "value",
          "DEFAULT",
          "COLORED",
          "DARK",
          "LIGHT",
          "sidebarPositionOptions",
          "LEFT",
          "RIGHT",
          "sidebarBehaviorOptions",
          "STICKY",
          "FIXED",
          "COMPACT",
          "layoutOptions",
          "FLUID",
          "BOXED",
          "useQuery",
          "_s",
          "URLSearchParams",
          "search",
          "Settings",
          "_s2",
          "query",
          "isOpen",
          "setIsOpen",
          "theme",
          "setTheme",
          "position",
          "setPosition",
          "behavior",
          "setBehavior",
          "layout",
          "setLayout",
          "innerRef",
          "setSettingByQueryParam",
          "set",
          "get",
          "map",
          "_c",
          "$RefreshReg$"
        ],
        "sources": [
          "/app/src/components/Settings.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { Alert, Button } from \"react-bootstrap\";\r\n\r\nimport { Sliders, BookOpen } from \"react-feather\";\r\n\r\nimport {\r\n  SIDEBAR_POSITION,\r\n  SIDEBAR_BEHAVIOR,\r\n  LAYOUT,\r\n  THEME,\r\n} from \"../constants\";\r\nimport useOuterClick from \"../hooks/useOuterClick\";\r\nimport { useTheme } from \"../hooks/useTheme\";\r\nimport useSidebar from \"../hooks/useSidebar\";\r\nimport useLayout from \"../hooks/useLayout\";\r\n\r\nconst themeOptions = [\r\n  {\r\n    name: \"Default\",\r\n    value: THEME.DEFAULT,\r\n  },\r\n  {\r\n    name: \"Colored\",\r\n    value: THEME.COLORED,\r\n  },\r\n  {\r\n    name: \"Dark\",\r\n    value: THEME.DARK,\r\n  },\r\n  {\r\n    name: \"Light\",\r\n    value: THEME.LIGHT,\r\n  },\r\n];\r\n\r\nconst sidebarPositionOptions = [\r\n  {\r\n    name: \"Left\",\r\n    value: SIDEBAR_POSITION.LEFT,\r\n  },\r\n  {\r\n    name: \"Right\",\r\n    value: SIDEBAR_POSITION.RIGHT,\r\n  },\r\n];\r\n\r\nconst sidebarBehaviorOptions = [\r\n  {\r\n    name: \"Sticky\",\r\n    value: SIDEBAR_BEHAVIOR.STICKY,\r\n  },\r\n  {\r\n    name: \"Fixed\",\r\n    value: SIDEBAR_BEHAVIOR.FIXED,\r\n  },\r\n  {\r\n    name: \"Compact\",\r\n    value: SIDEBAR_BEHAVIOR.COMPACT,\r\n  },\r\n];\r\n\r\nconst layoutOptions = [\r\n  {\r\n    name: \"Fluid\",\r\n    value: LAYOUT.FLUID,\r\n  },\r\n  {\r\n    name: \"Boxed\",\r\n    value: LAYOUT.BOXED,\r\n  },\r\n];\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Settings = () => {\r\n  const query = useQuery();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const { theme, setTheme } = useTheme();\r\n  const { position, setPosition, behavior, setBehavior } = useSidebar();\r\n  const { layout, setLayout } = useLayout();\r\n\r\n  const innerRef = useOuterClick(() => {\r\n    setIsOpen(false);\r\n  });\r\n\r\n  const setSettingByQueryParam = (name, set) => {\r\n    const value = query.get(name);\r\n    if (value) {\r\n      set(value);\r\n    }\r\n  };\r\n\r\n  // Read from query parameter (e.g. ?theme=dark)\r\n  // only for demo purposes\r\n  useEffect(() => {\r\n    setSettingByQueryParam(\"theme\", setTheme);\r\n    setSettingByQueryParam(\"sidebarPosition\", setPosition);\r\n    setSettingByQueryParam(\"sidebarBehavior\", setBehavior);\r\n    setSettingByQueryParam(\"layout\", setLayout);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={innerRef}\r\n      className={`settings js-settings ${isOpen ? \"open\" : \"\"}`}\r\n    >\r\n      <div className=\"settings-toggle\">\r\n        <div\r\n          className=\"settings-toggle-option settings-toggle-option-text js-settings-toggle\"\r\n          title=\"Theme Builder\"\r\n          onClick={() => setIsOpen(true)}\r\n        >\r\n          <Sliders className=\"feather align-middle\" /> Builder\r\n        </div>\r\n        <a\r\n          className=\"settings-toggle-option\"\r\n          title=\"Documentation\"\r\n          href=\"/docs/introduction\"\r\n          target=\"_blank\"\r\n        >\r\n          <BookOpen className=\"feather align-middle\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"settings-panel\">\r\n        <div className=\"settings-content\">\r\n          <div className=\"settings-title d-flex align-items-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close float-right js-settings-toggle\"\r\n              aria-label=\"Close\"\r\n              onClick={() => setIsOpen(false)}\r\n            ></button>\r\n            <h4 className=\"mb-0 ms-2 d-inline-block\">Theme Builder</h4>\r\n          </div>\r\n          <div className=\"settings-body\">\r\n            <Alert variant=\"primary\">\r\n              <div className=\"alert-message\">\r\n                <strong>Hey there!</strong> Set your own customized style below.\r\n                Choose the ones that best fits your needs.\r\n              </div>\r\n            </Alert>\r\n\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Color scheme</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                The perfect color mode for your app.\r\n              </span>\r\n              <div className=\"row g-0 text-center mx-n1 mb-2\">\r\n                {themeOptions.map(({ name, value }) => (\r\n                  <div className=\"col-6\" key={value}>\r\n                    <label className=\"mx-1 d-block mb-1\">\r\n                      <input\r\n                        className=\"settings-scheme-label\"\r\n                        type=\"radio\"\r\n                        name=\"theme\"\r\n                        value={value}\r\n                        checked={theme === value}\r\n                        onChange={() => setTheme(value)}\r\n                      />\r\n                      <div className=\"settings-scheme\">\r\n                        <div\r\n                          className={`settings-scheme-theme settings-scheme-theme-${value}`}\r\n                        ></div>\r\n                      </div>\r\n                    </label>\r\n                    {name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar position\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle the position of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarPositionOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"sidebarPosition\"\r\n                      value={value}\r\n                      checked={position === value}\r\n                      onChange={() => setPosition(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar behavior\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Change the behavior of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarBehaviorOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"sidebarBehavior\"\r\n                      value={value}\r\n                      checked={behavior === value}\r\n                      onChange={() => setBehavior(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Layout</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle container layout system.\r\n              </span>\r\n              <div>\r\n                {layoutOptions.map(({ name, value }) => (\r\n                  <label className=\"me-1\" key={value}>\r\n                    <input\r\n                      className=\"settings-button-label\"\r\n                      type=\"radio\"\r\n                      name=\"layout\"\r\n                      value={value}\r\n                      checked={layout === value}\r\n                      onChange={() => setLayout(value)}\r\n                    />\r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"settings-footer\">\r\n            <div className=\"d-grid\">\r\n              <Button\r\n                as=\"a\"\r\n                rel=\"noreferrer\"\r\n                href=\"https://themes.getbootstrap.com/product/appstack-react-admin-dashboard-template/\"\r\n                target=\"_blank\"\r\n                variant=\"primary\"\r\n                size=\"lg\"\r\n              >\r\n                Purchase\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"
        ],
        "mappings": "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"
      }
    },
    {
      "name": "vite:css",
      "start": 1703474741454,
      "end": 1703474741454,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "\"use strict\";\n(() => {\n  var __create = Object.create;\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __getProtoOf = Object.getPrototypeOf;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __esm = (fn, res) => function __init() {\n    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n  };\n  var __commonJS = (cb, mod) => function __require() {\n    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      for (let key of __getOwnPropNames(from))\n        if (!__hasOwnProp.call(to, key) && key !== except)\n          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n    }\n    return to;\n  };\n  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n    // If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n    mod\n  ));\n\n  // node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js\n  var require_base64_js = __commonJS({\n    \"node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js\"(exports) {\n      \"use strict\";\n      init_dist();\n      exports.byteLength = byteLength;\n      exports.toByteArray = toByteArray;\n      exports.fromByteArray = fromByteArray;\n      var lookup = [];\n      var revLookup = [];\n      var Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n      var code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n      for (i = 0, len = code.length; i < len; ++i) {\n        lookup[i] = code[i];\n        revLookup[code.charCodeAt(i)] = i;\n      }\n      var i;\n      var len;\n      revLookup[\"-\".charCodeAt(0)] = 62;\n      revLookup[\"_\".charCodeAt(0)] = 63;\n      function getLens(b64) {\n        var len2 = b64.length;\n        if (len2 % 4 > 0) {\n          throw new Error(\"Invalid string. Length must be a multiple of 4\");\n        }\n        var validLen = b64.indexOf(\"=\");\n        if (validLen === -1)\n          validLen = len2;\n        var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;\n        return [validLen, placeHoldersLen];\n      }\n      function byteLength(b64) {\n        var lens = getLens(b64);\n        var validLen = lens[0];\n        var placeHoldersLen = lens[1];\n        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n      }\n      function _byteLength(b64, validLen, placeHoldersLen) {\n        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n      }\n      function toByteArray(b64) {\n        var tmp;\n        var lens = getLens(b64);\n        var validLen = lens[0];\n        var placeHoldersLen = lens[1];\n        var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n        var curByte = 0;\n        var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;\n        var i2;\n        for (i2 = 0; i2 < len2; i2 += 4) {\n          tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)];\n          arr[curByte++] = tmp >> 16 & 255;\n          arr[curByte++] = tmp >> 8 & 255;\n          arr[curByte++] = tmp & 255;\n        }\n        if (placeHoldersLen === 2) {\n          tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4;\n          arr[curByte++] = tmp & 255;\n        }\n        if (placeHoldersLen === 1) {\n          tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2;\n          arr[curByte++] = tmp >> 8 & 255;\n          arr[curByte++] = tmp & 255;\n        }\n        return arr;\n      }\n      function tripletToBase64(num) {\n        return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n      }\n      function encodeChunk(uint8, start, end) {\n        var tmp;\n        var output = [];\n        for (var i2 = start; i2 < end; i2 += 3) {\n          tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255);\n          output.push(tripletToBase64(tmp));\n        }\n        return output.join(\"\");\n      }\n      function fromByteArray(uint8) {\n        var tmp;\n        var len2 = uint8.length;\n        var extraBytes = len2 % 3;\n        var parts = [];\n        var maxChunkLength = 16383;\n        for (var i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength) {\n          parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));\n        }\n        if (extraBytes === 1) {\n          tmp = uint8[len2 - 1];\n          parts.push(\n            lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\"\n          );\n        } else if (extraBytes === 2) {\n          tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];\n          parts.push(\n            lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\"\n          );\n        }\n        return parts.join(\"\");\n      }\n    }\n  });\n\n  // node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js\n  var require_ieee754 = __commonJS({\n    \"node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js\"(exports) {\n      init_dist();\n      exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n        var e, m;\n        var eLen = nBytes * 8 - mLen - 1;\n        var eMax = (1 << eLen) - 1;\n        var eBias = eMax >> 1;\n        var nBits = -7;\n        var i = isLE ? nBytes - 1 : 0;\n        var d = isLE ? -1 : 1;\n        var s2 = buffer[offset + i];\n        i += d;\n        e = s2 & (1 << -nBits) - 1;\n        s2 >>= -nBits;\n        nBits += eLen;\n        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {\n        }\n        m = e & (1 << -nBits) - 1;\n        e >>= -nBits;\n        nBits += mLen;\n        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {\n        }\n        if (e === 0) {\n          e = 1 - eBias;\n        } else if (e === eMax) {\n          return m ? NaN : (s2 ? -1 : 1) * Infinity;\n        } else {\n          m = m + Math.pow(2, mLen);\n          e = e - eBias;\n        }\n        return (s2 ? -1 : 1) * m * Math.pow(2, e - mLen);\n      };\n      exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n        var e, m, c;\n        var eLen = nBytes * 8 - mLen - 1;\n        var eMax = (1 << eLen) - 1;\n        var eBias = eMax >> 1;\n        var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n        var i = isLE ? 0 : nBytes - 1;\n        var d = isLE ? 1 : -1;\n        var s2 = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n        value = Math.abs(value);\n        if (isNaN(value) || value === Infinity) {\n          m = isNaN(value) ? 1 : 0;\n          e = eMax;\n        } else {\n          e = Math.floor(Math.log(value) / Math.LN2);\n          if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n          }\n          if (e + eBias >= 1) {\n            value += rt / c;\n          } else {\n            value += rt * Math.pow(2, 1 - eBias);\n          }\n          if (value * c >= 2) {\n            e++;\n            c /= 2;\n          }\n          if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n          } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n          } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n          }\n        }\n        for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {\n        }\n        e = e << mLen | m;\n        eLen += mLen;\n        for (; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {\n        }\n        buffer[offset + i - d] |= s2 * 128;\n      };\n    }\n  });\n\n  // node_modules/.pnpm/buffer@6.0.3_patch_hash=zkkuxompt5d553skpnegwi5wuy/node_modules/buffer/index.js\n  var require_buffer = __commonJS({\n    \"node_modules/.pnpm/buffer@6.0.3_patch_hash=zkkuxompt5d553skpnegwi5wuy/node_modules/buffer/index.js\"(exports) {\n      \"use strict\";\n      init_dist();\n      var base64 = require_base64_js();\n      var ieee754 = require_ieee754();\n      var customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") : null;\n      exports.Buffer = Buffer2;\n      exports.SlowBuffer = SlowBuffer;\n      exports.INSPECT_MAX_BYTES = 50;\n      var K_MAX_LENGTH = 2147483647;\n      exports.kMaxLength = K_MAX_LENGTH;\n      var { Uint8Array: GlobalUint8Array, ArrayBuffer: GlobalArrayBuffer, SharedArrayBuffer: GlobalSharedArrayBuffer } = globalThis;\n      Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();\n      if (!Buffer2.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") {\n        console.error(\n          \"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"\n        );\n      }\n      function typedArraySupport() {\n        try {\n          const arr = new GlobalUint8Array(1);\n          const proto = { foo: function() {\n            return 42;\n          } };\n          Object.setPrototypeOf(proto, GlobalUint8Array.prototype);\n          Object.setPrototypeOf(arr, proto);\n          return arr.foo() === 42;\n        } catch (e) {\n          return false;\n        }\n      }\n      Object.defineProperty(Buffer2.prototype, \"parent\", {\n        enumerable: true,\n        get: function() {\n          if (!Buffer2.isBuffer(this))\n            return void 0;\n          return this.buffer;\n        }\n      });\n      Object.defineProperty(Buffer2.prototype, \"offset\", {\n        enumerable: true,\n        get: function() {\n          if (!Buffer2.isBuffer(this))\n            return void 0;\n          return this.byteOffset;\n        }\n      });\n      function createBuffer(length) {\n        if (length > K_MAX_LENGTH) {\n          throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n        }\n        const buf = new GlobalUint8Array(length);\n        Object.setPrototypeOf(buf, Buffer2.prototype);\n        return buf;\n      }\n      function Buffer2(arg, encodingOrOffset, length) {\n        if (typeof arg === \"number\") {\n          if (typeof encodingOrOffset === \"string\") {\n            throw new TypeError(\n              'The \"string\" argument must be of type string. Received type number'\n            );\n          }\n          return allocUnsafe(arg);\n        }\n        return from(arg, encodingOrOffset, length);\n      }\n      Buffer2.poolSize = 8192;\n      function from(value, encodingOrOffset, length) {\n        if (typeof value === \"string\") {\n          return fromString(value, encodingOrOffset);\n        }\n        if (GlobalArrayBuffer.isView(value)) {\n          return fromArrayView(value);\n        }\n        if (value == null) {\n          throw new TypeError(\n            \"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value\n          );\n        }\n        if (isInstance(value, GlobalArrayBuffer) || value && isInstance(value.buffer, GlobalArrayBuffer)) {\n          return fromArrayBuffer(value, encodingOrOffset, length);\n        }\n        if (typeof GlobalSharedArrayBuffer !== \"undefined\" && (isInstance(value, GlobalSharedArrayBuffer) || value && isInstance(value.buffer, GlobalSharedArrayBuffer))) {\n          return fromArrayBuffer(value, encodingOrOffset, length);\n        }\n        if (typeof value === \"number\") {\n          throw new TypeError(\n            'The \"value\" argument must not be of type number. Received type number'\n          );\n        }\n        const valueOf = value.valueOf && value.valueOf();\n        if (valueOf != null && valueOf !== value) {\n          return Buffer2.from(valueOf, encodingOrOffset, length);\n        }\n        const b = fromObject(value);\n        if (b)\n          return b;\n        if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") {\n          return Buffer2.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n        }\n        throw new TypeError(\n          \"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value\n        );\n      }\n      Buffer2.from = function(value, encodingOrOffset, length) {\n        return from(value, encodingOrOffset, length);\n      };\n      Object.setPrototypeOf(Buffer2.prototype, GlobalUint8Array.prototype);\n      Object.setPrototypeOf(Buffer2, GlobalUint8Array);\n      function assertSize(size) {\n        if (typeof size !== \"number\") {\n          throw new TypeError('\"size\" argument must be of type number');\n        } else if (size < 0) {\n          throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n        }\n      }\n      function alloc(size, fill, encoding) {\n        assertSize(size);\n        if (size <= 0) {\n          return createBuffer(size);\n        }\n        if (fill !== void 0) {\n          return typeof encoding === \"string\" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n        }\n        return createBuffer(size);\n      }\n      Buffer2.alloc = function(size, fill, encoding) {\n        return alloc(size, fill, encoding);\n      };\n      function allocUnsafe(size) {\n        assertSize(size);\n        return createBuffer(size < 0 ? 0 : checked(size) | 0);\n      }\n      Buffer2.allocUnsafe = function(size) {\n        return allocUnsafe(size);\n      };\n      Buffer2.allocUnsafeSlow = function(size) {\n        return allocUnsafe(size);\n      };\n      function fromString(string, encoding) {\n        if (typeof encoding !== \"string\" || encoding === \"\") {\n          encoding = \"utf8\";\n        }\n        if (!Buffer2.isEncoding(encoding)) {\n          throw new TypeError(\"Unknown encoding: \" + encoding);\n        }\n        const length = byteLength(string, encoding) | 0;\n        let buf = createBuffer(length);\n        const actual = buf.write(string, encoding);\n        if (actual !== length) {\n          buf = buf.slice(0, actual);\n        }\n        return buf;\n      }\n      function fromArrayLike(array) {\n        const length = array.length < 0 ? 0 : checked(array.length) | 0;\n        const buf = createBuffer(length);\n        for (let i = 0; i < length; i += 1) {\n          buf[i] = array[i] & 255;\n        }\n        return buf;\n      }\n      function fromArrayView(arrayView) {\n        if (isInstance(arrayView, GlobalUint8Array)) {\n          const copy = new GlobalUint8Array(arrayView);\n          return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n        }\n        return fromArrayLike(arrayView);\n      }\n      function fromArrayBuffer(array, byteOffset, length) {\n        if (byteOffset < 0 || array.byteLength < byteOffset) {\n          throw new RangeError('\"offset\" is outside of buffer bounds');\n        }\n        if (array.byteLength < byteOffset + (length || 0)) {\n          throw new RangeError('\"length\" is outside of buffer bounds');\n        }\n        let buf;\n        if (byteOffset === void 0 && length === void 0) {\n          buf = new GlobalUint8Array(array);\n        } else if (length === void 0) {\n          buf = new GlobalUint8Array(array, byteOffset);\n        } else {\n          buf = new GlobalUint8Array(array, byteOffset, length);\n        }\n        Object.setPrototypeOf(buf, Buffer2.prototype);\n        return buf;\n      }\n      function fromObject(obj) {\n        if (Buffer2.isBuffer(obj)) {\n          const len = checked(obj.length) | 0;\n          const buf = createBuffer(len);\n          if (buf.length === 0) {\n            return buf;\n          }\n          obj.copy(buf, 0, 0, len);\n          return buf;\n        }\n        if (obj.length !== void 0) {\n          if (typeof obj.length !== \"number\" || numberIsNaN(obj.length)) {\n            return createBuffer(0);\n          }\n          return fromArrayLike(obj);\n        }\n        if (obj.type === \"Buffer\" && Array.isArray(obj.data)) {\n          return fromArrayLike(obj.data);\n        }\n      }\n      function checked(length) {\n        if (length >= K_MAX_LENGTH) {\n          throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + K_MAX_LENGTH.toString(16) + \" bytes\");\n        }\n        return length | 0;\n      }\n      function SlowBuffer(length) {\n        if (+length != length) {\n          length = 0;\n        }\n        return Buffer2.alloc(+length);\n      }\n      Buffer2.isBuffer = function isBuffer(b) {\n        return b != null && b._isBuffer === true && b !== Buffer2.prototype;\n      };\n      Buffer2.compare = function compare(a, b) {\n        if (isInstance(a, GlobalUint8Array))\n          a = Buffer2.from(a, a.offset, a.byteLength);\n        if (isInstance(b, GlobalUint8Array))\n          b = Buffer2.from(b, b.offset, b.byteLength);\n        if (!Buffer2.isBuffer(a) || !Buffer2.isBuffer(b)) {\n          throw new TypeError(\n            'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n          );\n        }\n        if (a === b)\n          return 0;\n        let x = a.length;\n        let y = b.length;\n        for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n          if (a[i] !== b[i]) {\n            x = a[i];\n            y = b[i];\n            break;\n          }\n        }\n        if (x < y)\n          return -1;\n        if (y < x)\n          return 1;\n        return 0;\n      };\n      Buffer2.isEncoding = function isEncoding(encoding) {\n        switch (String(encoding).toLowerCase()) {\n          case \"hex\":\n          case \"utf8\":\n          case \"utf-8\":\n          case \"ascii\":\n          case \"latin1\":\n          case \"binary\":\n          case \"base64\":\n          case \"ucs2\":\n          case \"ucs-2\":\n          case \"utf16le\":\n          case \"utf-16le\":\n            return true;\n          default:\n            return false;\n        }\n      };\n      Buffer2.concat = function concat(list, length) {\n        if (!Array.isArray(list)) {\n          throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        if (list.length === 0) {\n          return Buffer2.alloc(0);\n        }\n        let i;\n        if (length === void 0) {\n          length = 0;\n          for (i = 0; i < list.length; ++i) {\n            length += list[i].length;\n          }\n        }\n        const buffer = Buffer2.allocUnsafe(length);\n        let pos = 0;\n        for (i = 0; i < list.length; ++i) {\n          let buf = list[i];\n          if (isInstance(buf, GlobalUint8Array)) {\n            if (pos + buf.length > buffer.length) {\n              if (!Buffer2.isBuffer(buf))\n                buf = Buffer2.from(buf);\n              buf.copy(buffer, pos);\n            } else {\n              GlobalUint8Array.prototype.set.call(\n                buffer,\n                buf,\n                pos\n              );\n            }\n          } else if (!Buffer2.isBuffer(buf)) {\n            throw new TypeError('\"list\" argument must be an Array of Buffers');\n          } else {\n            buf.copy(buffer, pos);\n          }\n          pos += buf.length;\n        }\n        return buffer;\n      };\n      function byteLength(string, encoding) {\n        if (Buffer2.isBuffer(string)) {\n          return string.length;\n        }\n        if (GlobalArrayBuffer.isView(string) || isInstance(string, GlobalArrayBuffer)) {\n          return string.byteLength;\n        }\n        if (typeof string !== \"string\") {\n          throw new TypeError(\n            'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string\n          );\n        }\n        const len = string.length;\n        const mustMatch = arguments.length > 2 && arguments[2] === true;\n        if (!mustMatch && len === 0)\n          return 0;\n        let loweredCase = false;\n        for (; ; ) {\n          switch (encoding) {\n            case \"ascii\":\n            case \"latin1\":\n            case \"binary\":\n              return len;\n            case \"utf8\":\n            case \"utf-8\":\n              return utf8ToBytes(string).length;\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return len * 2;\n            case \"hex\":\n              return len >>> 1;\n            case \"base64\":\n              return base64ToBytes(string).length;\n            default:\n              if (loweredCase) {\n                return mustMatch ? -1 : utf8ToBytes(string).length;\n              }\n              encoding = (\"\" + encoding).toLowerCase();\n              loweredCase = true;\n          }\n        }\n      }\n      Buffer2.byteLength = byteLength;\n      function slowToString(encoding, start, end) {\n        let loweredCase = false;\n        if (start === void 0 || start < 0) {\n          start = 0;\n        }\n        if (start > this.length) {\n          return \"\";\n        }\n        if (end === void 0 || end > this.length) {\n          end = this.length;\n        }\n        if (end <= 0) {\n          return \"\";\n        }\n        end >>>= 0;\n        start >>>= 0;\n        if (end <= start) {\n          return \"\";\n        }\n        if (!encoding)\n          encoding = \"utf8\";\n        while (true) {\n          switch (encoding) {\n            case \"hex\":\n              return hexSlice(this, start, end);\n            case \"utf8\":\n            case \"utf-8\":\n              return utf8Slice(this, start, end);\n            case \"ascii\":\n              return asciiSlice(this, start, end);\n            case \"latin1\":\n            case \"binary\":\n              return latin1Slice(this, start, end);\n            case \"base64\":\n              return base64Slice(this, start, end);\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return utf16leSlice(this, start, end);\n            default:\n              if (loweredCase)\n                throw new TypeError(\"Unknown encoding: \" + encoding);\n              encoding = (encoding + \"\").toLowerCase();\n              loweredCase = true;\n          }\n        }\n      }\n      Buffer2.prototype._isBuffer = true;\n      function swap(b, n, m) {\n        const i = b[n];\n        b[n] = b[m];\n        b[m] = i;\n      }\n      Buffer2.prototype.swap16 = function swap16() {\n        const len = this.length;\n        if (len % 2 !== 0) {\n          throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n        }\n        for (let i = 0; i < len; i += 2) {\n          swap(this, i, i + 1);\n        }\n        return this;\n      };\n      Buffer2.prototype.swap32 = function swap32() {\n        const len = this.length;\n        if (len % 4 !== 0) {\n          throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n        }\n        for (let i = 0; i < len; i += 4) {\n          swap(this, i, i + 3);\n          swap(this, i + 1, i + 2);\n        }\n        return this;\n      };\n      Buffer2.prototype.swap64 = function swap64() {\n        const len = this.length;\n        if (len % 8 !== 0) {\n          throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n        }\n        for (let i = 0; i < len; i += 8) {\n          swap(this, i, i + 7);\n          swap(this, i + 1, i + 6);\n          swap(this, i + 2, i + 5);\n          swap(this, i + 3, i + 4);\n        }\n        return this;\n      };\n      Buffer2.prototype.toString = function toString() {\n        const length = this.length;\n        if (length === 0)\n          return \"\";\n        if (arguments.length === 0)\n          return utf8Slice(this, 0, length);\n        return slowToString.apply(this, arguments);\n      };\n      Buffer2.prototype.toLocaleString = Buffer2.prototype.toString;\n      Buffer2.prototype.equals = function equals(b) {\n        if (!Buffer2.isBuffer(b))\n          throw new TypeError(\"Argument must be a Buffer\");\n        if (this === b)\n          return true;\n        return Buffer2.compare(this, b) === 0;\n      };\n      Buffer2.prototype.inspect = function inspect() {\n        let str = \"\";\n        const max = exports.INSPECT_MAX_BYTES;\n        str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n        if (this.length > max)\n          str += \" ... \";\n        return \"<Buffer \" + str + \">\";\n      };\n      if (customInspectSymbol) {\n        Buffer2.prototype[customInspectSymbol] = Buffer2.prototype.inspect;\n      }\n      Buffer2.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n        if (isInstance(target, GlobalUint8Array)) {\n          target = Buffer2.from(target, target.offset, target.byteLength);\n        }\n        if (!Buffer2.isBuffer(target)) {\n          throw new TypeError(\n            'The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target\n          );\n        }\n        if (start === void 0) {\n          start = 0;\n        }\n        if (end === void 0) {\n          end = target ? target.length : 0;\n        }\n        if (thisStart === void 0) {\n          thisStart = 0;\n        }\n        if (thisEnd === void 0) {\n          thisEnd = this.length;\n        }\n        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n          throw new RangeError(\"out of range index\");\n        }\n        if (thisStart >= thisEnd && start >= end) {\n          return 0;\n        }\n        if (thisStart >= thisEnd) {\n          return -1;\n        }\n        if (start >= end) {\n          return 1;\n        }\n        start >>>= 0;\n        end >>>= 0;\n        thisStart >>>= 0;\n        thisEnd >>>= 0;\n        if (this === target)\n          return 0;\n        let x = thisEnd - thisStart;\n        let y = end - start;\n        const len = Math.min(x, y);\n        const thisCopy = this.slice(thisStart, thisEnd);\n        const targetCopy = target.slice(start, end);\n        for (let i = 0; i < len; ++i) {\n          if (thisCopy[i] !== targetCopy[i]) {\n            x = thisCopy[i];\n            y = targetCopy[i];\n            break;\n          }\n        }\n        if (x < y)\n          return -1;\n        if (y < x)\n          return 1;\n        return 0;\n      };\n      function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n        if (buffer.length === 0)\n          return -1;\n        if (typeof byteOffset === \"string\") {\n          encoding = byteOffset;\n          byteOffset = 0;\n        } else if (byteOffset > 2147483647) {\n          byteOffset = 2147483647;\n        } else if (byteOffset < -2147483648) {\n          byteOffset = -2147483648;\n        }\n        byteOffset = +byteOffset;\n        if (numberIsNaN(byteOffset)) {\n          byteOffset = dir ? 0 : buffer.length - 1;\n        }\n        if (byteOffset < 0)\n          byteOffset = buffer.length + byteOffset;\n        if (byteOffset >= buffer.length) {\n          if (dir)\n            return -1;\n          else\n            byteOffset = buffer.length - 1;\n        } else if (byteOffset < 0) {\n          if (dir)\n            byteOffset = 0;\n          else\n            return -1;\n        }\n        if (typeof val === \"string\") {\n          val = Buffer2.from(val, encoding);\n        }\n        if (Buffer2.isBuffer(val)) {\n          if (val.length === 0) {\n            return -1;\n          }\n          return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n        } else if (typeof val === \"number\") {\n          val = val & 255;\n          if (typeof GlobalUint8Array.prototype.indexOf === \"function\") {\n            if (dir) {\n              return GlobalUint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n            } else {\n              return GlobalUint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n            }\n          }\n          return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n        }\n        throw new TypeError(\"val must be string, number or Buffer\");\n      }\n      function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n        let indexSize = 1;\n        let arrLength = arr.length;\n        let valLength = val.length;\n        if (encoding !== void 0) {\n          encoding = String(encoding).toLowerCase();\n          if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n            if (arr.length < 2 || val.length < 2) {\n              return -1;\n            }\n            indexSize = 2;\n            arrLength /= 2;\n            valLength /= 2;\n            byteOffset /= 2;\n          }\n        }\n        function read(buf, i2) {\n          if (indexSize === 1) {\n            return buf[i2];\n          } else {\n            return buf.readUInt16BE(i2 * indexSize);\n          }\n        }\n        let i;\n        if (dir) {\n          let foundIndex = -1;\n          for (i = byteOffset; i < arrLength; i++) {\n            if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n              if (foundIndex === -1)\n                foundIndex = i;\n              if (i - foundIndex + 1 === valLength)\n                return foundIndex * indexSize;\n            } else {\n              if (foundIndex !== -1)\n                i -= i - foundIndex;\n              foundIndex = -1;\n            }\n          }\n        } else {\n          if (byteOffset + valLength > arrLength)\n            byteOffset = arrLength - valLength;\n          for (i = byteOffset; i >= 0; i--) {\n            let found = true;\n            for (let j = 0; j < valLength; j++) {\n              if (read(arr, i + j) !== read(val, j)) {\n                found = false;\n                break;\n              }\n            }\n            if (found)\n              return i;\n          }\n        }\n        return -1;\n      }\n      Buffer2.prototype.includes = function includes(val, byteOffset, encoding) {\n        return this.indexOf(val, byteOffset, encoding) !== -1;\n      };\n      Buffer2.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n      };\n      Buffer2.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n      };\n      function hexWrite(buf, string, offset, length) {\n        offset = Number(offset) || 0;\n        const remaining = buf.length - offset;\n        if (!length) {\n          length = remaining;\n        } else {\n          length = Number(length);\n          if (length > remaining) {\n            length = remaining;\n          }\n        }\n        const strLen = string.length;\n        if (length > strLen / 2) {\n          length = strLen / 2;\n        }\n        let i;\n        for (i = 0; i < length; ++i) {\n          const parsed = parseInt(string.substr(i * 2, 2), 16);\n          if (numberIsNaN(parsed))\n            return i;\n          buf[offset + i] = parsed;\n        }\n        return i;\n      }\n      function utf8Write(buf, string, offset, length) {\n        return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n      }\n      function asciiWrite(buf, string, offset, length) {\n        return blitBuffer(asciiToBytes(string), buf, offset, length);\n      }\n      function base64Write(buf, string, offset, length) {\n        return blitBuffer(base64ToBytes(string), buf, offset, length);\n      }\n      function ucs2Write(buf, string, offset, length) {\n        return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n      }\n      Buffer2.prototype.write = function write(string, offset, length, encoding) {\n        if (offset === void 0) {\n          encoding = \"utf8\";\n          length = this.length;\n          offset = 0;\n        } else if (length === void 0 && typeof offset === \"string\") {\n          encoding = offset;\n          length = this.length;\n          offset = 0;\n        } else if (isFinite(offset)) {\n          offset = offset >>> 0;\n          if (isFinite(length)) {\n            length = length >>> 0;\n            if (encoding === void 0)\n              encoding = \"utf8\";\n          } else {\n            encoding = length;\n            length = void 0;\n          }\n        } else {\n          throw new Error(\n            \"Buffer.write(string, encoding, offset[, length]) is no longer supported\"\n          );\n        }\n        const remaining = this.length - offset;\n        if (length === void 0 || length > remaining)\n          length = remaining;\n        if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n          throw new RangeError(\"Attempt to write outside buffer bounds\");\n        }\n        if (!encoding)\n          encoding = \"utf8\";\n        let loweredCase = false;\n        for (; ; ) {\n          switch (encoding) {\n            case \"hex\":\n              return hexWrite(this, string, offset, length);\n            case \"utf8\":\n            case \"utf-8\":\n              return utf8Write(this, string, offset, length);\n            case \"ascii\":\n            case \"latin1\":\n            case \"binary\":\n              return asciiWrite(this, string, offset, length);\n            case \"base64\":\n              return base64Write(this, string, offset, length);\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return ucs2Write(this, string, offset, length);\n            default:\n              if (loweredCase)\n                throw new TypeError(\"Unknown encoding: \" + encoding);\n              encoding = (\"\" + encoding).toLowerCase();\n              loweredCase = true;\n          }\n        }\n      };\n      Buffer2.prototype.toJSON = function toJSON() {\n        return {\n          type: \"Buffer\",\n          data: Array.prototype.slice.call(this._arr || this, 0)\n        };\n      };\n      function base64Slice(buf, start, end) {\n        if (start === 0 && end === buf.length) {\n          return base64.fromByteArray(buf);\n        } else {\n          return base64.fromByteArray(buf.slice(start, end));\n        }\n      }\n      function utf8Slice(buf, start, end) {\n        end = Math.min(buf.length, end);\n        const res = [];\n        let i = start;\n        while (i < end) {\n          const firstByte = buf[i];\n          let codePoint = null;\n          let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n          if (i + bytesPerSequence <= end) {\n            let secondByte, thirdByte, fourthByte, tempCodePoint;\n            switch (bytesPerSequence) {\n              case 1:\n                if (firstByte < 128) {\n                  codePoint = firstByte;\n                }\n                break;\n              case 2:\n                secondByte = buf[i + 1];\n                if ((secondByte & 192) === 128) {\n                  tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n                  if (tempCodePoint > 127) {\n                    codePoint = tempCodePoint;\n                  }\n                }\n                break;\n              case 3:\n                secondByte = buf[i + 1];\n                thirdByte = buf[i + 2];\n                if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n                  tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n                  if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n                    codePoint = tempCodePoint;\n                  }\n                }\n                break;\n              case 4:\n                secondByte = buf[i + 1];\n                thirdByte = buf[i + 2];\n                fourthByte = buf[i + 3];\n                if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n                  tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n                  if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n                    codePoint = tempCodePoint;\n                  }\n                }\n            }\n          }\n          if (codePoint === null) {\n            codePoint = 65533;\n            bytesPerSequence = 1;\n          } else if (codePoint > 65535) {\n            codePoint -= 65536;\n            res.push(codePoint >>> 10 & 1023 | 55296);\n            codePoint = 56320 | codePoint & 1023;\n          }\n          res.push(codePoint);\n          i += bytesPerSequence;\n        }\n        return decodeCodePointsArray(res);\n      }\n      var MAX_ARGUMENTS_LENGTH = 4096;\n      function decodeCodePointsArray(codePoints) {\n        const len = codePoints.length;\n        if (len <= MAX_ARGUMENTS_LENGTH) {\n          return String.fromCharCode.apply(String, codePoints);\n        }\n        let res = \"\";\n        let i = 0;\n        while (i < len) {\n          res += String.fromCharCode.apply(\n            String,\n            codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n          );\n        }\n        return res;\n      }\n      function asciiSlice(buf, start, end) {\n        let ret = \"\";\n        end = Math.min(buf.length, end);\n        for (let i = start; i < end; ++i) {\n          ret += String.fromCharCode(buf[i] & 127);\n        }\n        return ret;\n      }\n      function latin1Slice(buf, start, end) {\n        let ret = \"\";\n        end = Math.min(buf.length, end);\n        for (let i = start; i < end; ++i) {\n          ret += String.fromCharCode(buf[i]);\n        }\n        return ret;\n      }\n      function hexSlice(buf, start, end) {\n        const len = buf.length;\n        if (!start || start < 0)\n          start = 0;\n        if (!end || end < 0 || end > len)\n          end = len;\n        let out = \"\";\n        for (let i = start; i < end; ++i) {\n          out += hexSliceLookupTable[buf[i]];\n        }\n        return out;\n      }\n      function utf16leSlice(buf, start, end) {\n        const bytes = buf.slice(start, end);\n        let res = \"\";\n        for (let i = 0; i < bytes.length - 1; i += 2) {\n          res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n        }\n        return res;\n      }\n      Buffer2.prototype.slice = function slice(start, end) {\n        const len = this.length;\n        start = ~~start;\n        end = end === void 0 ? len : ~~end;\n        if (start < 0) {\n          start += len;\n          if (start < 0)\n            start = 0;\n        } else if (start > len) {\n          start = len;\n        }\n        if (end < 0) {\n          end += len;\n          if (end < 0)\n            end = 0;\n        } else if (end > len) {\n          end = len;\n        }\n        if (end < start)\n          end = start;\n        const newBuf = this.subarray(start, end);\n        Object.setPrototypeOf(newBuf, Buffer2.prototype);\n        return newBuf;\n      };\n      function checkOffset(offset, ext, length) {\n        if (offset % 1 !== 0 || offset < 0)\n          throw new RangeError(\"offset is not uint\");\n        if (offset + ext > length)\n          throw new RangeError(\"Trying to access beyond buffer length\");\n      }\n      Buffer2.prototype.readUintLE = Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert)\n          checkOffset(offset, byteLength2, this.length);\n        let val = this[offset];\n        let mul = 1;\n        let i = 0;\n        while (++i < byteLength2 && (mul *= 256)) {\n          val += this[offset + i] * mul;\n        }\n        return val;\n      };\n      Buffer2.prototype.readUintBE = Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert) {\n          checkOffset(offset, byteLength2, this.length);\n        }\n        let val = this[offset + --byteLength2];\n        let mul = 1;\n        while (byteLength2 > 0 && (mul *= 256)) {\n          val += this[offset + --byteLength2] * mul;\n        }\n        return val;\n      };\n      Buffer2.prototype.readUint8 = Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 1, this.length);\n        return this[offset];\n      };\n      Buffer2.prototype.readUint16LE = Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 2, this.length);\n        return this[offset] | this[offset + 1] << 8;\n      };\n      Buffer2.prototype.readUint16BE = Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 2, this.length);\n        return this[offset] << 8 | this[offset + 1];\n      };\n      Buffer2.prototype.readUint32LE = Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;\n      };\n      Buffer2.prototype.readUint32BE = Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n      };\n      Buffer2.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n        offset = offset >>> 0;\n        validateNumber(offset, \"offset\");\n        const first = this[offset];\n        const last = this[offset + 7];\n        if (first === void 0 || last === void 0) {\n          boundsError(offset, this.length - 8);\n        }\n        const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n        const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n        return BigInt(lo) + (BigInt(hi) << BigInt(32));\n      });\n      Buffer2.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n        offset = offset >>> 0;\n        validateNumber(offset, \"offset\");\n        const first = this[offset];\n        const last = this[offset + 7];\n        if (first === void 0 || last === void 0) {\n          boundsError(offset, this.length - 8);\n        }\n        const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n        const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;\n        return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n      });\n      Buffer2.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert)\n          checkOffset(offset, byteLength2, this.length);\n        let val = this[offset];\n        let mul = 1;\n        let i = 0;\n        while (++i < byteLength2 && (mul *= 256)) {\n          val += this[offset + i] * mul;\n        }\n        mul *= 128;\n        if (val >= mul)\n          val -= Math.pow(2, 8 * byteLength2);\n        return val;\n      };\n      Buffer2.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert)\n          checkOffset(offset, byteLength2, this.length);\n        let i = byteLength2;\n        let mul = 1;\n        let val = this[offset + --i];\n        while (i > 0 && (mul *= 256)) {\n          val += this[offset + --i] * mul;\n        }\n        mul *= 128;\n        if (val >= mul)\n          val -= Math.pow(2, 8 * byteLength2);\n        return val;\n      };\n      Buffer2.prototype.readInt8 = function readInt8(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 1, this.length);\n        if (!(this[offset] & 128))\n          return this[offset];\n        return (255 - this[offset] + 1) * -1;\n      };\n      Buffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 2, this.length);\n        const val = this[offset] | this[offset + 1] << 8;\n        return val & 32768 ? val | 4294901760 : val;\n      };\n      Buffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 2, this.length);\n        const val = this[offset + 1] | this[offset] << 8;\n        return val & 32768 ? val | 4294901760 : val;\n      };\n      Buffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n      };\n      Buffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n      };\n      Buffer2.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n        offset = offset >>> 0;\n        validateNumber(offset, \"offset\");\n        const first = this[offset];\n        const last = this[offset + 7];\n        if (first === void 0 || last === void 0) {\n          boundsError(offset, this.length - 8);\n        }\n        const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);\n        return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n      });\n      Buffer2.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n        offset = offset >>> 0;\n        validateNumber(offset, \"offset\");\n        const first = this[offset];\n        const last = this[offset + 7];\n        if (first === void 0 || last === void 0) {\n          boundsError(offset, this.length - 8);\n        }\n        const val = (first << 24) + // Overflow\n        this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n        return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);\n      });\n      Buffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return ieee754.read(this, offset, true, 23, 4);\n      };\n      Buffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return ieee754.read(this, offset, false, 23, 4);\n      };\n      Buffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 8, this.length);\n        return ieee754.read(this, offset, true, 52, 8);\n      };\n      Buffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 8, this.length);\n        return ieee754.read(this, offset, false, 52, 8);\n      };\n      function checkInt(buf, value, offset, ext, max, min) {\n        if (!Buffer2.isBuffer(buf))\n          throw new TypeError('\"buffer\" argument must be a Buffer instance');\n        if (value > max || value < min)\n          throw new RangeError('\"value\" argument is out of bounds');\n        if (offset + ext > buf.length)\n          throw new RangeError(\"Index out of range\");\n      }\n      Buffer2.prototype.writeUintLE = Buffer2.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert) {\n          const maxBytes = Math.pow(2, 8 * byteLength2) - 1;\n          checkInt(this, value, offset, byteLength2, maxBytes, 0);\n        }\n        let mul = 1;\n        let i = 0;\n        this[offset] = value & 255;\n        while (++i < byteLength2 && (mul *= 256)) {\n          this[offset + i] = value / mul & 255;\n        }\n        return offset + byteLength2;\n      };\n      Buffer2.prototype.writeUintBE = Buffer2.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert) {\n          const maxBytes = Math.pow(2, 8 * byteLength2) - 1;\n          checkInt(this, value, offset, byteLength2, maxBytes, 0);\n        }\n        let i = byteLength2 - 1;\n        let mul = 1;\n        this[offset + i] = value & 255;\n        while (--i >= 0 && (mul *= 256)) {\n          this[offset + i] = value / mul & 255;\n        }\n        return offset + byteLength2;\n      };\n      Buffer2.prototype.writeUint8 = Buffer2.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 1, 255, 0);\n        this[offset] = value & 255;\n        return offset + 1;\n      };\n      Buffer2.prototype.writeUint16LE = Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 2, 65535, 0);\n        this[offset] = value & 255;\n        this[offset + 1] = value >>> 8;\n        return offset + 2;\n      };\n      Buffer2.prototype.writeUint16BE = Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 2, 65535, 0);\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 255;\n        return offset + 2;\n      };\n      Buffer2.prototype.writeUint32LE = Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 4, 4294967295, 0);\n        this[offset + 3] = value >>> 24;\n        this[offset + 2] = value >>> 16;\n        this[offset + 1] = value >>> 8;\n        this[offset] = value & 255;\n        return offset + 4;\n      };\n      Buffer2.prototype.writeUint32BE = Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 4, 4294967295, 0);\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 255;\n        return offset + 4;\n      };\n      function wrtBigUInt64LE(buf, value, offset, min, max) {\n        checkIntBI(value, min, max, buf, offset, 7);\n        let lo = Number(value & BigInt(4294967295));\n        buf[offset++] = lo;\n        lo = lo >> 8;\n        buf[offset++] = lo;\n        lo = lo >> 8;\n        buf[offset++] = lo;\n        lo = lo >> 8;\n        buf[offset++] = lo;\n        let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n        buf[offset++] = hi;\n        hi = hi >> 8;\n        buf[offset++] = hi;\n        hi = hi >> 8;\n        buf[offset++] = hi;\n        hi = hi >> 8;\n        buf[offset++] = hi;\n        return offset;\n      }\n      function wrtBigUInt64BE(buf, value, offset, min, max) {\n        checkIntBI(value, min, max, buf, offset, 7);\n        let lo = Number(value & BigInt(4294967295));\n        buf[offset + 7] = lo;\n        lo = lo >> 8;\n        buf[offset + 6] = lo;\n        lo = lo >> 8;\n        buf[offset + 5] = lo;\n        lo = lo >> 8;\n        buf[offset + 4] = lo;\n        let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n        buf[offset + 3] = hi;\n        hi = hi >> 8;\n        buf[offset + 2] = hi;\n        hi = hi >> 8;\n        buf[offset + 1] = hi;\n        hi = hi >> 8;\n        buf[offset] = hi;\n        return offset + 8;\n      }\n      Buffer2.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n        return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n      });\n      Buffer2.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n        return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n      });\n      Buffer2.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          const limit = Math.pow(2, 8 * byteLength2 - 1);\n          checkInt(this, value, offset, byteLength2, limit - 1, -limit);\n        }\n        let i = 0;\n        let mul = 1;\n        let sub = 0;\n        this[offset] = value & 255;\n        while (++i < byteLength2 && (mul *= 256)) {\n          if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n            sub = 1;\n          }\n          this[offset + i] = (value / mul >> 0) - sub & 255;\n        }\n        return offset + byteLength2;\n      };\n      Buffer2.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          const limit = Math.pow(2, 8 * byteLength2 - 1);\n          checkInt(this, value, offset, byteLength2, limit - 1, -limit);\n        }\n        let i = byteLength2 - 1;\n        let mul = 1;\n        let sub = 0;\n        this[offset + i] = value & 255;\n        while (--i >= 0 && (mul *= 256)) {\n          if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n            sub = 1;\n          }\n          this[offset + i] = (value / mul >> 0) - sub & 255;\n        }\n        return offset + byteLength2;\n      };\n      Buffer2.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 1, 127, -128);\n        if (value < 0)\n          value = 255 + value + 1;\n        this[offset] = value & 255;\n        return offset + 1;\n      };\n      Buffer2.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 2, 32767, -32768);\n        this[offset] = value & 255;\n        this[offset + 1] = value >>> 8;\n        return offset + 2;\n      };\n      Buffer2.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 2, 32767, -32768);\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 255;\n        return offset + 2;\n      };\n      Buffer2.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 4, 2147483647, -2147483648);\n        this[offset] = value & 255;\n        this[offset + 1] = value >>> 8;\n        this[offset + 2] = value >>> 16;\n        this[offset + 3] = value >>> 24;\n        return offset + 4;\n      };\n      Buffer2.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 4, 2147483647, -2147483648);\n        if (value < 0)\n          value = 4294967295 + value + 1;\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 255;\n        return offset + 4;\n      };\n      Buffer2.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n        return wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n      });\n      Buffer2.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n        return wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n      });\n      function checkIEEE754(buf, value, offset, ext, max, min) {\n        if (offset + ext > buf.length)\n          throw new RangeError(\"Index out of range\");\n        if (offset < 0)\n          throw new RangeError(\"Index out of range\");\n      }\n      function writeFloat(buf, value, offset, littleEndian, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);\n        }\n        ieee754.write(buf, value, offset, littleEndian, 23, 4);\n        return offset + 4;\n      }\n      Buffer2.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n        return writeFloat(this, value, offset, true, noAssert);\n      };\n      Buffer2.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n        return writeFloat(this, value, offset, false, noAssert);\n      };\n      function writeDouble(buf, value, offset, littleEndian, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);\n        }\n        ieee754.write(buf, value, offset, littleEndian, 52, 8);\n        return offset + 8;\n      }\n      Buffer2.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n        return writeDouble(this, value, offset, true, noAssert);\n      };\n      Buffer2.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n        return writeDouble(this, value, offset, false, noAssert);\n      };\n      Buffer2.prototype.copy = function copy(target, targetStart, start, end) {\n        if (!Buffer2.isBuffer(target))\n          throw new TypeError(\"argument should be a Buffer\");\n        if (!start)\n          start = 0;\n        if (!end && end !== 0)\n          end = this.length;\n        if (targetStart >= target.length)\n          targetStart = target.length;\n        if (!targetStart)\n          targetStart = 0;\n        if (end > 0 && end < start)\n          end = start;\n        if (end === start)\n          return 0;\n        if (target.length === 0 || this.length === 0)\n          return 0;\n        if (targetStart < 0) {\n          throw new RangeError(\"targetStart out of bounds\");\n        }\n        if (start < 0 || start >= this.length)\n          throw new RangeError(\"Index out of range\");\n        if (end < 0)\n          throw new RangeError(\"sourceEnd out of bounds\");\n        if (end > this.length)\n          end = this.length;\n        if (target.length - targetStart < end - start) {\n          end = target.length - targetStart + start;\n        }\n        const len = end - start;\n        if (this === target && typeof GlobalUint8Array.prototype.copyWithin === \"function\") {\n          this.copyWithin(targetStart, start, end);\n        } else {\n          GlobalUint8Array.prototype.set.call(\n            target,\n            this.subarray(start, end),\n            targetStart\n          );\n        }\n        return len;\n      };\n      Buffer2.prototype.fill = function fill(val, start, end, encoding) {\n        if (typeof val === \"string\") {\n          if (typeof start === \"string\") {\n            encoding = start;\n            start = 0;\n            end = this.length;\n          } else if (typeof end === \"string\") {\n            encoding = end;\n            end = this.length;\n          }\n          if (encoding !== void 0 && typeof encoding !== \"string\") {\n            throw new TypeError(\"encoding must be a string\");\n          }\n          if (typeof encoding === \"string\" && !Buffer2.isEncoding(encoding)) {\n            throw new TypeError(\"Unknown encoding: \" + encoding);\n          }\n          if (val.length === 1) {\n            const code = val.charCodeAt(0);\n            if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") {\n              val = code;\n            }\n          }\n        } else if (typeof val === \"number\") {\n          val = val & 255;\n        } else if (typeof val === \"boolean\") {\n          val = Number(val);\n        }\n        if (start < 0 || this.length < start || this.length < end) {\n          throw new RangeError(\"Out of range index\");\n        }\n        if (end <= start) {\n          return this;\n        }\n        start = start >>> 0;\n        end = end === void 0 ? this.length : end >>> 0;\n        if (!val)\n          val = 0;\n        let i;\n        if (typeof val === \"number\") {\n          for (i = start; i < end; ++i) {\n            this[i] = val;\n          }\n        } else {\n          const bytes = Buffer2.isBuffer(val) ? val : Buffer2.from(val, encoding);\n          const len = bytes.length;\n          if (len === 0) {\n            throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n          }\n          for (i = 0; i < end - start; ++i) {\n            this[i + start] = bytes[i % len];\n          }\n        }\n        return this;\n      };\n      var errors = {};\n      function E(sym, getMessage, Base) {\n        errors[sym] = class NodeError extends Base {\n          constructor() {\n            super();\n            Object.defineProperty(this, \"message\", {\n              value: getMessage.apply(this, arguments),\n              writable: true,\n              configurable: true\n            });\n            this.name = `${this.name} [${sym}]`;\n            this.stack;\n            delete this.name;\n          }\n          get code() {\n            return sym;\n          }\n          set code(value) {\n            Object.defineProperty(this, \"code\", {\n              configurable: true,\n              enumerable: true,\n              value,\n              writable: true\n            });\n          }\n          toString() {\n            return `${this.name} [${sym}]: ${this.message}`;\n          }\n        };\n      }\n      E(\n        \"ERR_BUFFER_OUT_OF_BOUNDS\",\n        function(name) {\n          if (name) {\n            return `${name} is outside of buffer bounds`;\n          }\n          return \"Attempt to access memory outside buffer bounds\";\n        },\n        RangeError\n      );\n      E(\n        \"ERR_INVALID_ARG_TYPE\",\n        function(name, actual) {\n          return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n        },\n        TypeError\n      );\n      E(\n        \"ERR_OUT_OF_RANGE\",\n        function(str, range, input) {\n          let msg = `The value of \"${str}\" is out of range.`;\n          let received = input;\n          if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n            received = addNumericalSeparator(String(input));\n          } else if (typeof input === \"bigint\") {\n            received = String(input);\n            if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n              received = addNumericalSeparator(received);\n            }\n            received += \"n\";\n          }\n          msg += ` It must be ${range}. Received ${received}`;\n          return msg;\n        },\n        RangeError\n      );\n      function addNumericalSeparator(val) {\n        let res = \"\";\n        let i = val.length;\n        const start = val[0] === \"-\" ? 1 : 0;\n        for (; i >= start + 4; i -= 3) {\n          res = `_${val.slice(i - 3, i)}${res}`;\n        }\n        return `${val.slice(0, i)}${res}`;\n      }\n      function checkBounds(buf, offset, byteLength2) {\n        validateNumber(offset, \"offset\");\n        if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {\n          boundsError(offset, buf.length - (byteLength2 + 1));\n        }\n      }\n      function checkIntBI(value, min, max, buf, offset, byteLength2) {\n        if (value > max || value < min) {\n          const n = typeof min === \"bigint\" ? \"n\" : \"\";\n          let range;\n          if (byteLength2 > 3) {\n            if (min === 0 || min === BigInt(0)) {\n              range = `>= 0${n} and < 2${n} ** ${(byteLength2 + 1) * 8}${n}`;\n            } else {\n              range = `>= -(2${n} ** ${(byteLength2 + 1) * 8 - 1}${n}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n}`;\n            }\n          } else {\n            range = `>= ${min}${n} and <= ${max}${n}`;\n          }\n          throw new errors.ERR_OUT_OF_RANGE(\"value\", range, value);\n        }\n        checkBounds(buf, offset, byteLength2);\n      }\n      function validateNumber(value, name) {\n        if (typeof value !== \"number\") {\n          throw new errors.ERR_INVALID_ARG_TYPE(name, \"number\", value);\n        }\n      }\n      function boundsError(value, length, type) {\n        if (Math.floor(value) !== value) {\n          validateNumber(value, type);\n          throw new errors.ERR_OUT_OF_RANGE(type || \"offset\", \"an integer\", value);\n        }\n        if (length < 0) {\n          throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n        }\n        throw new errors.ERR_OUT_OF_RANGE(\n          type || \"offset\",\n          `>= ${type ? 1 : 0} and <= ${length}`,\n          value\n        );\n      }\n      var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n      function base64clean(str) {\n        str = str.split(\"=\")[0];\n        str = str.trim().replace(INVALID_BASE64_RE, \"\");\n        if (str.length < 2)\n          return \"\";\n        while (str.length % 4 !== 0) {\n          str = str + \"=\";\n        }\n        return str;\n      }\n      function utf8ToBytes(string, units) {\n        units = units || Infinity;\n        let codePoint;\n        const length = string.length;\n        let leadSurrogate = null;\n        const bytes = [];\n        for (let i = 0; i < length; ++i) {\n          codePoint = string.charCodeAt(i);\n          if (codePoint > 55295 && codePoint < 57344) {\n            if (!leadSurrogate) {\n              if (codePoint > 56319) {\n                if ((units -= 3) > -1)\n                  bytes.push(239, 191, 189);\n                continue;\n              } else if (i + 1 === length) {\n                if ((units -= 3) > -1)\n                  bytes.push(239, 191, 189);\n                continue;\n              }\n              leadSurrogate = codePoint;\n              continue;\n            }\n            if (codePoint < 56320) {\n              if ((units -= 3) > -1)\n                bytes.push(239, 191, 189);\n              leadSurrogate = codePoint;\n              continue;\n            }\n            codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n          } else if (leadSurrogate) {\n            if ((units -= 3) > -1)\n              bytes.push(239, 191, 189);\n          }\n          leadSurrogate = null;\n          if (codePoint < 128) {\n            if ((units -= 1) < 0)\n              break;\n            bytes.push(codePoint);\n          } else if (codePoint < 2048) {\n            if ((units -= 2) < 0)\n              break;\n            bytes.push(\n              codePoint >> 6 | 192,\n              codePoint & 63 | 128\n            );\n          } else if (codePoint < 65536) {\n            if ((units -= 3) < 0)\n              break;\n            bytes.push(\n              codePoint >> 12 | 224,\n              codePoint >> 6 & 63 | 128,\n              codePoint & 63 | 128\n            );\n          } else if (codePoint < 1114112) {\n            if ((units -= 4) < 0)\n              break;\n            bytes.push(\n              codePoint >> 18 | 240,\n              codePoint >> 12 & 63 | 128,\n              codePoint >> 6 & 63 | 128,\n              codePoint & 63 | 128\n            );\n          } else {\n            throw new Error(\"Invalid code point\");\n          }\n        }\n        return bytes;\n      }\n      function asciiToBytes(str) {\n        const byteArray = [];\n        for (let i = 0; i < str.length; ++i) {\n          byteArray.push(str.charCodeAt(i) & 255);\n        }\n        return byteArray;\n      }\n      function utf16leToBytes(str, units) {\n        let c, hi, lo;\n        const byteArray = [];\n        for (let i = 0; i < str.length; ++i) {\n          if ((units -= 2) < 0)\n            break;\n          c = str.charCodeAt(i);\n          hi = c >> 8;\n          lo = c % 256;\n          byteArray.push(lo);\n          byteArray.push(hi);\n        }\n        return byteArray;\n      }\n      function base64ToBytes(str) {\n        return base64.toByteArray(base64clean(str));\n      }\n      function blitBuffer(src, dst, offset, length) {\n        let i;\n        for (i = 0; i < length; ++i) {\n          if (i + offset >= dst.length || i >= src.length)\n            break;\n          dst[i + offset] = src[i];\n        }\n        return i;\n      }\n      function isInstance(obj, type) {\n        return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n      }\n      function numberIsNaN(obj) {\n        return obj !== obj;\n      }\n      var hexSliceLookupTable = function() {\n        const alphabet = \"0123456789abcdef\";\n        const table = new Array(256);\n        for (let i = 0; i < 16; ++i) {\n          const i16 = i * 16;\n          for (let j = 0; j < 16; ++j) {\n            table[i16 + j] = alphabet[i] + alphabet[j];\n          }\n        }\n        return table;\n      }();\n      function defineBigIntMethod(fn) {\n        return typeof BigInt === \"undefined\" ? BufferBigIntNotDefined : fn;\n      }\n      function BufferBigIntNotDefined() {\n        throw new Error(\"BigInt not supported\");\n      }\n    }\n  });\n\n  // node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js\n  var require_browser = __commonJS({\n    \"node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js\"(exports, module) {\n      init_dist();\n      var process = module.exports = {};\n      var cachedSetTimeout;\n      var cachedClearTimeout;\n      function defaultSetTimout() {\n        throw new Error(\"setTimeout has not been defined\");\n      }\n      function defaultClearTimeout() {\n        throw new Error(\"clearTimeout has not been defined\");\n      }\n      (function() {\n        try {\n          if (typeof setTimeout === \"function\") {\n            cachedSetTimeout = setTimeout;\n          } else {\n            cachedSetTimeout = defaultSetTimout;\n          }\n        } catch (e) {\n          cachedSetTimeout = defaultSetTimout;\n        }\n        try {\n          if (typeof clearTimeout === \"function\") {\n            cachedClearTimeout = clearTimeout;\n          } else {\n            cachedClearTimeout = defaultClearTimeout;\n          }\n        } catch (e) {\n          cachedClearTimeout = defaultClearTimeout;\n        }\n      })();\n      function runTimeout(fun) {\n        if (cachedSetTimeout === setTimeout) {\n          return setTimeout(fun, 0);\n        }\n        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n          cachedSetTimeout = setTimeout;\n          return setTimeout(fun, 0);\n        }\n        try {\n          return cachedSetTimeout(fun, 0);\n        } catch (e) {\n          try {\n            return cachedSetTimeout.call(null, fun, 0);\n          } catch (e2) {\n            return cachedSetTimeout.call(this, fun, 0);\n          }\n        }\n      }\n      function runClearTimeout(marker) {\n        if (cachedClearTimeout === clearTimeout) {\n          return clearTimeout(marker);\n        }\n        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n          cachedClearTimeout = clearTimeout;\n          return clearTimeout(marker);\n        }\n        try {\n          return cachedClearTimeout(marker);\n        } catch (e) {\n          try {\n            return cachedClearTimeout.call(null, marker);\n          } catch (e2) {\n            return cachedClearTimeout.call(this, marker);\n          }\n        }\n      }\n      var queue = [];\n      var draining = false;\n      var currentQueue;\n      var queueIndex = -1;\n      function cleanUpNextTick() {\n        if (!draining || !currentQueue) {\n          return;\n        }\n        draining = false;\n        if (currentQueue.length) {\n          queue = currentQueue.concat(queue);\n        } else {\n          queueIndex = -1;\n        }\n        if (queue.length) {\n          drainQueue();\n        }\n      }\n      function drainQueue() {\n        if (draining) {\n          return;\n        }\n        var timeout = runTimeout(cleanUpNextTick);\n        draining = true;\n        var len = queue.length;\n        while (len) {\n          currentQueue = queue;\n          queue = [];\n          while (++queueIndex < len) {\n            if (currentQueue) {\n              currentQueue[queueIndex].run();\n            }\n          }\n          queueIndex = -1;\n          len = queue.length;\n        }\n        currentQueue = null;\n        draining = false;\n        runClearTimeout(timeout);\n      }\n      process.nextTick = function(fun) {\n        var args = new Array(arguments.length - 1);\n        if (arguments.length > 1) {\n          for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n          }\n        }\n        queue.push(new Item(fun, args));\n        if (queue.length === 1 && !draining) {\n          runTimeout(drainQueue);\n        }\n      };\n      function Item(fun, array) {\n        this.fun = fun;\n        this.array = array;\n      }\n      Item.prototype.run = function() {\n        this.fun.apply(null, this.array);\n      };\n      process.title = \"browser\";\n      process.browser = true;\n      process.env = {};\n      process.argv = [];\n      process.version = \"\";\n      process.versions = {};\n      function noop() {\n      }\n      process.on = noop;\n      process.addListener = noop;\n      process.once = noop;\n      process.off = noop;\n      process.removeListener = noop;\n      process.removeAllListeners = noop;\n      process.emit = noop;\n      process.prependListener = noop;\n      process.prependOnceListener = noop;\n      process.listeners = function(name) {\n        return [];\n      };\n      process.binding = function(name) {\n        throw new Error(\"process.binding is not supported\");\n      };\n      process.cwd = function() {\n        return \"/\";\n      };\n      process.chdir = function(dir) {\n        throw new Error(\"process.chdir is not supported\");\n      };\n      process.umask = function() {\n        return 0;\n      };\n    }\n  });\n\n  // shims/dist/index.js\n  var import_buffer_polyfill, import_process, o;\n  var init_dist = __esm({\n    \"shims/dist/index.js\"() {\n      \"use strict\";\n      import_buffer_polyfill = __toESM(require_buffer(), 1);\n      import_process = __toESM(require_browser(), 1);\n      o = globalThis || void 0 || self;\n    }\n  });\n\n  // shims/banner/index.cjs\n  var require_banner = __commonJS({\n    \"shims/banner/index.cjs\"() {\n      init_dist();\n      globalThis.Buffer = globalThis.Buffer || import_buffer_polyfill.Buffer;\n      globalThis.global = globalThis.global || o;\n      globalThis.process = globalThis.process || import_process.default;\n    }\n  });\n  require_banner();\n})();\n/*! Bundled license information:\n\nieee754/index.js:\n  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)\n\nbuffer/index.js:\n  (*!\n   * The buffer module from node.js, for the browser.\n   *\n   * @author   Feross Aboukhadijeh <https://feross.org>\n   * @license  MIT\n   *)\n*/\n\nimport { jsxDEV } from \"react/jsx-dev-runtime\";\nimport RefreshRuntime from \"/@react-refresh\";\nconst inWebWorker = typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope;\nlet prevRefreshReg;\nlet prevRefreshSig;\nif (import.meta.hot && !inWebWorker) {\n  if (!window.__vite_plugin_react_preamble_installed__) {\n    throw new Error(\"@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201\");\n  }\n  prevRefreshReg = window.$RefreshReg$;\n  prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    RefreshRuntime.register(type, \"/app/src/components/Settings.jsx \" + id);\n  };\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(), _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Alert, Button } from \"react-bootstrap\";\nimport { Sliders, BookOpen } from \"react-feather\";\nimport {\n  SIDEBAR_POSITION,\n  SIDEBAR_BEHAVIOR,\n  LAYOUT,\n  THEME\n} from \"../constants\";\nimport useOuterClick from \"../hooks/useOuterClick\";\nimport { useTheme } from \"../hooks/useTheme\";\nimport useSidebar from \"../hooks/useSidebar\";\nimport useLayout from \"../hooks/useLayout\";\nconst themeOptions = [\n  {\n    name: \"Default\",\n    value: THEME.DEFAULT\n  },\n  {\n    name: \"Colored\",\n    value: THEME.COLORED\n  },\n  {\n    name: \"Dark\",\n    value: THEME.DARK\n  },\n  {\n    name: \"Light\",\n    value: THEME.LIGHT\n  }\n];\nconst sidebarPositionOptions = [\n  {\n    name: \"Left\",\n    value: SIDEBAR_POSITION.LEFT\n  },\n  {\n    name: \"Right\",\n    value: SIDEBAR_POSITION.RIGHT\n  }\n];\nconst sidebarBehaviorOptions = [\n  {\n    name: \"Sticky\",\n    value: SIDEBAR_BEHAVIOR.STICKY\n  },\n  {\n    name: \"Fixed\",\n    value: SIDEBAR_BEHAVIOR.FIXED\n  },\n  {\n    name: \"Compact\",\n    value: SIDEBAR_BEHAVIOR.COMPACT\n  }\n];\nconst layoutOptions = [\n  {\n    name: \"Fluid\",\n    value: LAYOUT.FLUID\n  },\n  {\n    name: \"Boxed\",\n    value: LAYOUT.BOXED\n  }\n];\nfunction useQuery() {\n  _s();\n  return new URLSearchParams(useLocation().search);\n}\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function() {\n  return [useLocation];\n});\nconst Settings = () => {\n  _s2();\n  const query = useQuery();\n  const [isOpen, setIsOpen] = useState(false);\n  const { theme, setTheme } = useTheme();\n  const { position, setPosition, behavior, setBehavior } = useSidebar();\n  const { layout, setLayout } = useLayout();\n  const innerRef = useOuterClick(() => {\n    setIsOpen(false);\n  });\n  const setSettingByQueryParam = (name, set) => {\n    const value = query.get(name);\n    if (value) {\n      set(value);\n    }\n  };\n  useEffect(() => {\n    setSettingByQueryParam(\"theme\", setTheme);\n    setSettingByQueryParam(\"sidebarPosition\", setPosition);\n    setSettingByQueryParam(\"sidebarBehavior\", setBehavior);\n    setSettingByQueryParam(\"layout\", setLayout);\n  }, []);\n  return /* @__PURE__ */ jsxDEV(\n    \"div\",\n    {\n      ref: innerRef,\n      className: `settings js-settings ${isOpen ? \"open\" : \"\"}`,\n      children: [\n        /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-toggle\", children: [\n          /* @__PURE__ */ jsxDEV(\n            \"div\",\n            {\n              className: \"settings-toggle-option settings-toggle-option-text js-settings-toggle\",\n              title: \"Theme Builder\",\n              onClick: () => setIsOpen(true),\n              children: [\n                /* @__PURE__ */ jsxDEV(Sliders, { className: \"feather align-middle\" }, void 0, false, {\n                  fileName: \"/app/src/components/Settings.jsx\",\n                  lineNumber: 120,\n                  columnNumber: 11\n                }, this),\n                \" Builder\"\n              ]\n            },\n            void 0,\n            true,\n            {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 115,\n              columnNumber: 9\n            },\n            this\n          ),\n          /* @__PURE__ */ jsxDEV(\n            \"a\",\n            {\n              className: \"settings-toggle-option\",\n              title: \"Documentation\",\n              href: \"/docs/introduction\",\n              target: \"_blank\",\n              children: /* @__PURE__ */ jsxDEV(BookOpen, { className: \"feather align-middle\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 128,\n                columnNumber: 11\n              }, this)\n            },\n            void 0,\n            false,\n            {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 122,\n              columnNumber: 9\n            },\n            this\n          )\n        ] }, void 0, true, {\n          fileName: \"/app/src/components/Settings.jsx\",\n          lineNumber: 114,\n          columnNumber: 7\n        }, this),\n        /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-panel\", children: /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-content\", children: [\n          /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-title d-flex align-items-center\", children: [\n            /* @__PURE__ */ jsxDEV(\n              \"button\",\n              {\n                type: \"button\",\n                className: \"btn-close float-right js-settings-toggle\",\n                \"aria-label\": \"Close\",\n                onClick: () => setIsOpen(false)\n              },\n              void 0,\n              false,\n              {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 134,\n                columnNumber: 13\n              },\n              this\n            ),\n            /* @__PURE__ */ jsxDEV(\"h4\", { className: \"mb-0 ms-2 d-inline-block\", children: \"Theme Builder\" }, void 0, false, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 140,\n              columnNumber: 13\n            }, this)\n          ] }, void 0, true, {\n            fileName: \"/app/src/components/Settings.jsx\",\n            lineNumber: 133,\n            columnNumber: 11\n          }, this),\n          /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-body\", children: [\n            /* @__PURE__ */ jsxDEV(Alert, { variant: \"primary\", children: /* @__PURE__ */ jsxDEV(\"div\", { className: \"alert-message\", children: [\n              /* @__PURE__ */ jsxDEV(\"strong\", { children: \"Hey there!\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 145,\n                columnNumber: 17\n              }, this),\n              \" Set your own customized style below. Choose the ones that best fits your needs.\"\n            ] }, void 0, true, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 144,\n              columnNumber: 15\n            }, this) }, void 0, false, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 143,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Color scheme\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 151,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block text-muted mb-2\", children: \"The perfect color mode for your app.\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 152,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"div\", { className: \"row g-0 text-center mx-n1 mb-2\", children: themeOptions.map(\n                ({ name, value }) => /* @__PURE__ */ jsxDEV(\"div\", { className: \"col-6\", children: [\n                  /* @__PURE__ */ jsxDEV(\"label\", { className: \"mx-1 d-block mb-1\", children: [\n                    /* @__PURE__ */ jsxDEV(\n                      \"input\",\n                      {\n                        className: \"settings-scheme-label\",\n                        type: \"radio\",\n                        name: \"theme\",\n                        value,\n                        checked: theme === value,\n                        onChange: () => setTheme(value)\n                      },\n                      void 0,\n                      false,\n                      {\n                        fileName: \"/app/src/components/Settings.jsx\",\n                        lineNumber: 159,\n                        columnNumber: 23\n                      },\n                      this\n                    ),\n                    /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-scheme\", children: /* @__PURE__ */ jsxDEV(\n                      \"div\",\n                      {\n                        className: `settings-scheme-theme settings-scheme-theme-${value}`\n                      },\n                      void 0,\n                      false,\n                      {\n                        fileName: \"/app/src/components/Settings.jsx\",\n                        lineNumber: 168,\n                        columnNumber: 25\n                      },\n                      this\n                    ) }, void 0, false, {\n                      fileName: \"/app/src/components/Settings.jsx\",\n                      lineNumber: 167,\n                      columnNumber: 23\n                    }, this)\n                  ] }, void 0, true, {\n                    fileName: \"/app/src/components/Settings.jsx\",\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, this),\n                  name\n                ] }, value, true, {\n                  fileName: \"/app/src/components/Settings.jsx\",\n                  lineNumber: 157,\n                  columnNumber: 17\n                }, this)\n              ) }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 155,\n                columnNumber: 15\n              }, this)\n            ] }, void 0, true, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 150,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 178,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Sidebar position\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 180,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block text-muted mb-2\", children: \"Toggle the position of the sidebar.\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 183,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"div\", { children: sidebarPositionOptions.map(\n                ({ name, value }) => /* @__PURE__ */ jsxDEV(\"label\", { className: \"me-1\", children: [\n                  /* @__PURE__ */ jsxDEV(\n                    \"input\",\n                    {\n                      className: \"settings-button-label\",\n                      type: \"radio\",\n                      name: \"sidebarPosition\",\n                      value,\n                      checked: position === value,\n                      onChange: () => setPosition(value)\n                    },\n                    void 0,\n                    false,\n                    {\n                      fileName: \"/app/src/components/Settings.jsx\",\n                      lineNumber: 189,\n                      columnNumber: 21\n                    },\n                    this\n                  ),\n                  /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-button\", children: name }, void 0, false, {\n                    fileName: \"/app/src/components/Settings.jsx\",\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, this)\n                ] }, value, true, {\n                  fileName: \"/app/src/components/Settings.jsx\",\n                  lineNumber: 188,\n                  columnNumber: 17\n                }, this)\n              ) }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 186,\n                columnNumber: 15\n              }, this)\n            ] }, void 0, true, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 179,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 202,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Sidebar behavior\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 204,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block text-muted mb-2\", children: \"Change the behavior of the sidebar.\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 207,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"div\", { children: sidebarBehaviorOptions.map(\n                ({ name, value }) => /* @__PURE__ */ jsxDEV(\"label\", { className: \"me-1\", children: [\n                  /* @__PURE__ */ jsxDEV(\n                    \"input\",\n                    {\n                      className: \"settings-button-label\",\n                      type: \"radio\",\n                      name: \"sidebarBehavior\",\n                      value,\n                      checked: behavior === value,\n                      onChange: () => setBehavior(value)\n                    },\n                    void 0,\n                    false,\n                    {\n                      fileName: \"/app/src/components/Settings.jsx\",\n                      lineNumber: 213,\n                      columnNumber: 21\n                    },\n                    this\n                  ),\n                  /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-button\", children: name }, void 0, false, {\n                    fileName: \"/app/src/components/Settings.jsx\",\n                    lineNumber: 221,\n                    columnNumber: 21\n                  }, this)\n                ] }, value, true, {\n                  fileName: \"/app/src/components/Settings.jsx\",\n                  lineNumber: 212,\n                  columnNumber: 17\n                }, this)\n              ) }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 210,\n                columnNumber: 15\n              }, this)\n            ] }, void 0, true, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 203,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 226,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Layout\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 228,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block text-muted mb-2\", children: \"Toggle container layout system.\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 229,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"div\", { children: layoutOptions.map(\n                ({ name, value }) => /* @__PURE__ */ jsxDEV(\"label\", { className: \"me-1\", children: [\n                  /* @__PURE__ */ jsxDEV(\n                    \"input\",\n                    {\n                      className: \"settings-button-label\",\n                      type: \"radio\",\n                      name: \"layout\",\n                      value,\n                      checked: layout === value,\n                      onChange: () => setLayout(value)\n                    },\n                    void 0,\n                    false,\n                    {\n                      fileName: \"/app/src/components/Settings.jsx\",\n                      lineNumber: 235,\n                      columnNumber: 21\n                    },\n                    this\n                  ),\n                  /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-button\", children: name }, void 0, false, {\n                    fileName: \"/app/src/components/Settings.jsx\",\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this)\n                ] }, value, true, {\n                  fileName: \"/app/src/components/Settings.jsx\",\n                  lineNumber: 234,\n                  columnNumber: 17\n                }, this)\n              ) }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 232,\n                columnNumber: 15\n              }, this)\n            ] }, void 0, true, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 227,\n              columnNumber: 13\n            }, this)\n          ] }, void 0, true, {\n            fileName: \"/app/src/components/Settings.jsx\",\n            lineNumber: 142,\n            columnNumber: 11\n          }, this),\n          /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-footer\", children: /* @__PURE__ */ jsxDEV(\"div\", { className: \"d-grid\", children: /* @__PURE__ */ jsxDEV(\n            Button,\n            {\n              as: \"a\",\n              rel: \"noreferrer\",\n              href: \"https://themes.getbootstrap.com/product/appstack-react-admin-dashboard-template/\",\n              target: \"_blank\",\n              variant: \"primary\",\n              size: \"lg\",\n              children: \"Purchase\"\n            },\n            void 0,\n            false,\n            {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 251,\n              columnNumber: 15\n            },\n            this\n          ) }, void 0, false, {\n            fileName: \"/app/src/components/Settings.jsx\",\n            lineNumber: 250,\n            columnNumber: 13\n          }, this) }, void 0, false, {\n            fileName: \"/app/src/components/Settings.jsx\",\n            lineNumber: 249,\n            columnNumber: 11\n          }, this)\n        ] }, void 0, true, {\n          fileName: \"/app/src/components/Settings.jsx\",\n          lineNumber: 132,\n          columnNumber: 9\n        }, this) }, void 0, false, {\n          fileName: \"/app/src/components/Settings.jsx\",\n          lineNumber: 131,\n          columnNumber: 7\n        }, this)\n      ]\n    },\n    void 0,\n    true,\n    {\n      fileName: \"/app/src/components/Settings.jsx\",\n      lineNumber: 110,\n      columnNumber: 5\n    },\n    this\n  );\n};\n_s2(Settings, \"IstO3p/nlrsj2bKACns03HdrBYg=\", false, function() {\n  return [useQuery, useTheme, useSidebar, useLayout, useOuterClick];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");\nif (import.meta.hot && !inWebWorker) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n    RefreshRuntime.registerExportsForReactRefresh(\"/app/src/components/Settings.jsx\", currentExports);\n    import.meta.hot.accept((nextExports) => {\n      if (!nextExports)\n        return;\n      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);\n      if (invalidateMessage)\n        import.meta.hot.invalidate(invalidateMessage);\n    });\n  });\n}\n",
      "start": 1703474741454,
      "end": 1703474741496,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/app/src/components/Settings.jsx"
        ],
        "sourcesContent": [
          "import RefreshRuntime from \"/@react-refresh\";const inWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;let prevRefreshReg;let prevRefreshSig;if (import.meta.hot && !inWebWorker) {  if (!window.__vite_plugin_react_preamble_installed__) {    throw new Error(      \"@vitejs/plugin-react can't detect preamble. Something is wrong. \" +      \"See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201\"    );  }  prevRefreshReg = window.$RefreshReg$;  prevRefreshSig = window.$RefreshSig$;  window.$RefreshReg$ = (type, id) => {    RefreshRuntime.register(type, \"/app/src/components/Settings.jsx\" + \" \" + id)  };  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;}var _s = $RefreshSig$(),_s2 = $RefreshSig$();import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { Alert, Button } from \"react-bootstrap\";\n\nimport { Sliders, BookOpen } from \"react-feather\";\n\nimport {\n  SIDEBAR_POSITION,\n  SIDEBAR_BEHAVIOR,\n  LAYOUT,\n  THEME } from\n\"../constants\";\nimport useOuterClick from \"../hooks/useOuterClick\";\nimport { useTheme } from \"../hooks/useTheme\";\nimport useSidebar from \"../hooks/useSidebar\";\nimport useLayout from \"../hooks/useLayout\";\n\nconst themeOptions = [\n{\n  name: \"Default\",\n  value: THEME.DEFAULT\n},\n{\n  name: \"Colored\",\n  value: THEME.COLORED\n},\n{\n  name: \"Dark\",\n  value: THEME.DARK\n},\n{\n  name: \"Light\",\n  value: THEME.LIGHT\n}];\n\n\nconst sidebarPositionOptions = [\n{\n  name: \"Left\",\n  value: SIDEBAR_POSITION.LEFT\n},\n{\n  name: \"Right\",\n  value: SIDEBAR_POSITION.RIGHT\n}];\n\n\nconst sidebarBehaviorOptions = [\n{\n  name: \"Sticky\",\n  value: SIDEBAR_BEHAVIOR.STICKY\n},\n{\n  name: \"Fixed\",\n  value: SIDEBAR_BEHAVIOR.FIXED\n},\n{\n  name: \"Compact\",\n  value: SIDEBAR_BEHAVIOR.COMPACT\n}];\n\n\nconst layoutOptions = [\n{\n  name: \"Fluid\",\n  value: LAYOUT.FLUID\n},\n{\n  name: \"Boxed\",\n  value: LAYOUT.BOXED\n}];\n\n\nfunction useQuery() {_s();\n  return new URLSearchParams(useLocation().search);\n}_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {return [useLocation];});\n\nconst Settings = () => {_s2();\n  const query = useQuery();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const { theme, setTheme } = useTheme();\n  const { position, setPosition, behavior, setBehavior } = useSidebar();\n  const { layout, setLayout } = useLayout();\n\n  const innerRef = useOuterClick(() => {\n    setIsOpen(false);\n  });\n\n  const setSettingByQueryParam = (name, set) => {\n    const value = query.get(name);\n    if (value) {\n      set(value);\n    }\n  };\n\n  // Read from query parameter (e.g. ?theme=dark)\n  // only for demo purposes\n  useEffect(() => {\n    setSettingByQueryParam(\"theme\", setTheme);\n    setSettingByQueryParam(\"sidebarPosition\", setPosition);\n    setSettingByQueryParam(\"sidebarBehavior\", setBehavior);\n    setSettingByQueryParam(\"layout\", setLayout);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div\n      ref={innerRef}\n      className={`settings js-settings ${isOpen ? \"open\" : \"\"}`}>\n      \r\n      <div className=\"settings-toggle\">\r\n        <div\n          className=\"settings-toggle-option settings-toggle-option-text js-settings-toggle\"\n          title=\"Theme Builder\"\n          onClick={() => setIsOpen(true)}>\n          \r\n          <Sliders className=\"feather align-middle\" /> Builder\r\n        </div>\r\n        <a\n          className=\"settings-toggle-option\"\n          title=\"Documentation\"\n          href=\"/docs/introduction\"\n          target=\"_blank\">\n          \r\n          <BookOpen className=\"feather align-middle\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"settings-panel\">\r\n        <div className=\"settings-content\">\r\n          <div className=\"settings-title d-flex align-items-center\">\r\n            <button\n              type=\"button\"\n              className=\"btn-close float-right js-settings-toggle\"\n              aria-label=\"Close\"\n              onClick={() => setIsOpen(false)}>\n            </button>\r\n            <h4 className=\"mb-0 ms-2 d-inline-block\">Theme Builder</h4>\r\n          </div>\r\n          <div className=\"settings-body\">\r\n            <Alert variant=\"primary\">\r\n              <div className=\"alert-message\">\r\n                <strong>Hey there!</strong> Set your own customized style below.\r\n                Choose the ones that best fits your needs.\r\n              </div>\r\n            </Alert>\r\n\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Color scheme</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                The perfect color mode for your app.\r\n              </span>\r\n              <div className=\"row g-0 text-center mx-n1 mb-2\">\r\n                {themeOptions.map(({ name, value }) =>\n                <div className=\"col-6\" key={value}>\r\n                    <label className=\"mx-1 d-block mb-1\">\r\n                      <input\n                      className=\"settings-scheme-label\"\n                      type=\"radio\"\n                      name=\"theme\"\n                      value={value}\n                      checked={theme === value}\n                      onChange={() => setTheme(value)} />\n                    \r\n                      <div className=\"settings-scheme\">\r\n                        <div\n                        className={`settings-scheme-theme settings-scheme-theme-${value}`}>\n                      </div>\r\n                      </div>\r\n                    </label>\r\n                    {name}\r\n                  </div>\n                )}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar position\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle the position of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarPositionOptions.map(({ name, value }) =>\n                <label className=\"me-1\" key={value}>\r\n                    <input\n                    className=\"settings-button-label\"\n                    type=\"radio\"\n                    name=\"sidebarPosition\"\n                    value={value}\n                    checked={position === value}\n                    onChange={() => setPosition(value)} />\n                  \r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\n                )}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">\r\n                Sidebar behavior\r\n              </span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Change the behavior of the sidebar.\r\n              </span>\r\n              <div>\r\n                {sidebarBehaviorOptions.map(({ name, value }) =>\n                <label className=\"me-1\" key={value}>\r\n                    <input\n                    className=\"settings-button-label\"\n                    type=\"radio\"\n                    name=\"sidebarBehavior\"\n                    value={value}\n                    checked={behavior === value}\n                    onChange={() => setBehavior(value)} />\n                  \r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\n                )}\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n              <span className=\"d-block font-size-lg fw-bold\">Layout</span>\r\n              <span className=\"d-block text-muted mb-2\">\r\n                Toggle container layout system.\r\n              </span>\r\n              <div>\r\n                {layoutOptions.map(({ name, value }) =>\n                <label className=\"me-1\" key={value}>\r\n                    <input\n                    className=\"settings-button-label\"\n                    type=\"radio\"\n                    name=\"layout\"\n                    value={value}\n                    checked={layout === value}\n                    onChange={() => setLayout(value)} />\n                  \r\n                    <div className=\"settings-button\">{name}</div>\r\n                  </label>\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"settings-footer\">\r\n            <div className=\"d-grid\">\r\n              <Button\n                as=\"a\"\n                rel=\"noreferrer\"\n                href=\"https://themes.getbootstrap.com/product/appstack-react-admin-dashboard-template/\"\n                target=\"_blank\"\n                variant=\"primary\"\n                size=\"lg\">\n                \r\n                Purchase\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>);\n\n};_s2(Settings, \"IstO3p/nlrsj2bKACns03HdrBYg=\", false, function () {return [useQuery, useTheme, useSidebar, useLayout, useOuterClick];});_c = Settings;\n\nexport default Settings;var _c;$RefreshReg$(_c, \"Settings\");\nif (import.meta.hot && !inWebWorker) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n\n  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n    RefreshRuntime.registerExportsForReactRefresh(\"/app/src/components/Settings.jsx\", currentExports);\n    import.meta.hot.accept((nextExports) => {\n      if (!nextExports) return;\n      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);\n      if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);\n    });\n  });\n}"
        ],
        "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1703474741496,
      "end": 1703474741496,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1703474741496,
      "end": 1703474741496,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1703474741496,
      "end": 1703474741496,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1703474741496,
      "end": 1703474741496,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1703474741496,
      "end": 1703474741496,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1703474741496,
      "end": 1703474741529,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1703474741529,
      "end": 1703474741529,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1703474741529,
      "end": 1703474741529,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1703474741529,
      "end": 1703474741529,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import { createHotContext as __vite__createHotContext } from \"/@vite/client\";import.meta.hot = __vite__createHotContext(\"/src/components/Settings.jsx\");\"use strict\";\n(() => {\n  var __create = Object.create;\n  var __defProp = Object.defineProperty;\n  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames = Object.getOwnPropertyNames;\n  var __getProtoOf = Object.getPrototypeOf;\n  var __hasOwnProp = Object.prototype.hasOwnProperty;\n  var __esm = (fn, res) => function __init() {\n    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n  };\n  var __commonJS = (cb, mod) => function __require() {\n    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      for (let key of __getOwnPropNames(from))\n        if (!__hasOwnProp.call(to, key) && key !== except)\n          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n    }\n    return to;\n  };\n  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n    // If the importer is in node compatibility mode or this is not an ESM\n    // file that has been converted to a CommonJS file using a Babel-\n    // compatible transform (i.e. \"__esModule\" has not been set), then set\n    // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n    isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n    mod\n  ));\n\n  // node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js\n  var require_base64_js = __commonJS({\n    \"node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js\"(exports) {\n      \"use strict\";\n      init_dist();\n      exports.byteLength = byteLength;\n      exports.toByteArray = toByteArray;\n      exports.fromByteArray = fromByteArray;\n      var lookup = [];\n      var revLookup = [];\n      var Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n      var code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n      for (i = 0, len = code.length; i < len; ++i) {\n        lookup[i] = code[i];\n        revLookup[code.charCodeAt(i)] = i;\n      }\n      var i;\n      var len;\n      revLookup[\"-\".charCodeAt(0)] = 62;\n      revLookup[\"_\".charCodeAt(0)] = 63;\n      function getLens(b64) {\n        var len2 = b64.length;\n        if (len2 % 4 > 0) {\n          throw new Error(\"Invalid string. Length must be a multiple of 4\");\n        }\n        var validLen = b64.indexOf(\"=\");\n        if (validLen === -1)\n          validLen = len2;\n        var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;\n        return [validLen, placeHoldersLen];\n      }\n      function byteLength(b64) {\n        var lens = getLens(b64);\n        var validLen = lens[0];\n        var placeHoldersLen = lens[1];\n        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n      }\n      function _byteLength(b64, validLen, placeHoldersLen) {\n        return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n      }\n      function toByteArray(b64) {\n        var tmp;\n        var lens = getLens(b64);\n        var validLen = lens[0];\n        var placeHoldersLen = lens[1];\n        var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n        var curByte = 0;\n        var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;\n        var i2;\n        for (i2 = 0; i2 < len2; i2 += 4) {\n          tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)];\n          arr[curByte++] = tmp >> 16 & 255;\n          arr[curByte++] = tmp >> 8 & 255;\n          arr[curByte++] = tmp & 255;\n        }\n        if (placeHoldersLen === 2) {\n          tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4;\n          arr[curByte++] = tmp & 255;\n        }\n        if (placeHoldersLen === 1) {\n          tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2;\n          arr[curByte++] = tmp >> 8 & 255;\n          arr[curByte++] = tmp & 255;\n        }\n        return arr;\n      }\n      function tripletToBase64(num) {\n        return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n      }\n      function encodeChunk(uint8, start, end) {\n        var tmp;\n        var output = [];\n        for (var i2 = start; i2 < end; i2 += 3) {\n          tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255);\n          output.push(tripletToBase64(tmp));\n        }\n        return output.join(\"\");\n      }\n      function fromByteArray(uint8) {\n        var tmp;\n        var len2 = uint8.length;\n        var extraBytes = len2 % 3;\n        var parts = [];\n        var maxChunkLength = 16383;\n        for (var i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength) {\n          parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));\n        }\n        if (extraBytes === 1) {\n          tmp = uint8[len2 - 1];\n          parts.push(\n            lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\"\n          );\n        } else if (extraBytes === 2) {\n          tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];\n          parts.push(\n            lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\"\n          );\n        }\n        return parts.join(\"\");\n      }\n    }\n  });\n\n  // node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js\n  var require_ieee754 = __commonJS({\n    \"node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js\"(exports) {\n      init_dist();\n      exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n        var e, m;\n        var eLen = nBytes * 8 - mLen - 1;\n        var eMax = (1 << eLen) - 1;\n        var eBias = eMax >> 1;\n        var nBits = -7;\n        var i = isLE ? nBytes - 1 : 0;\n        var d = isLE ? -1 : 1;\n        var s2 = buffer[offset + i];\n        i += d;\n        e = s2 & (1 << -nBits) - 1;\n        s2 >>= -nBits;\n        nBits += eLen;\n        for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {\n        }\n        m = e & (1 << -nBits) - 1;\n        e >>= -nBits;\n        nBits += mLen;\n        for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {\n        }\n        if (e === 0) {\n          e = 1 - eBias;\n        } else if (e === eMax) {\n          return m ? NaN : (s2 ? -1 : 1) * Infinity;\n        } else {\n          m = m + Math.pow(2, mLen);\n          e = e - eBias;\n        }\n        return (s2 ? -1 : 1) * m * Math.pow(2, e - mLen);\n      };\n      exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n        var e, m, c;\n        var eLen = nBytes * 8 - mLen - 1;\n        var eMax = (1 << eLen) - 1;\n        var eBias = eMax >> 1;\n        var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n        var i = isLE ? 0 : nBytes - 1;\n        var d = isLE ? 1 : -1;\n        var s2 = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n        value = Math.abs(value);\n        if (isNaN(value) || value === Infinity) {\n          m = isNaN(value) ? 1 : 0;\n          e = eMax;\n        } else {\n          e = Math.floor(Math.log(value) / Math.LN2);\n          if (value * (c = Math.pow(2, -e)) < 1) {\n            e--;\n            c *= 2;\n          }\n          if (e + eBias >= 1) {\n            value += rt / c;\n          } else {\n            value += rt * Math.pow(2, 1 - eBias);\n          }\n          if (value * c >= 2) {\n            e++;\n            c /= 2;\n          }\n          if (e + eBias >= eMax) {\n            m = 0;\n            e = eMax;\n          } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen);\n            e = e + eBias;\n          } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n            e = 0;\n          }\n        }\n        for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {\n        }\n        e = e << mLen | m;\n        eLen += mLen;\n        for (; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {\n        }\n        buffer[offset + i - d] |= s2 * 128;\n      };\n    }\n  });\n\n  // node_modules/.pnpm/buffer@6.0.3_patch_hash=zkkuxompt5d553skpnegwi5wuy/node_modules/buffer/index.js\n  var require_buffer = __commonJS({\n    \"node_modules/.pnpm/buffer@6.0.3_patch_hash=zkkuxompt5d553skpnegwi5wuy/node_modules/buffer/index.js\"(exports) {\n      \"use strict\";\n      init_dist();\n      var base64 = require_base64_js();\n      var ieee754 = require_ieee754();\n      var customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") : null;\n      exports.Buffer = Buffer2;\n      exports.SlowBuffer = SlowBuffer;\n      exports.INSPECT_MAX_BYTES = 50;\n      var K_MAX_LENGTH = 2147483647;\n      exports.kMaxLength = K_MAX_LENGTH;\n      var { Uint8Array: GlobalUint8Array, ArrayBuffer: GlobalArrayBuffer, SharedArrayBuffer: GlobalSharedArrayBuffer } = globalThis;\n      Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();\n      if (!Buffer2.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") {\n        console.error(\n          \"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"\n        );\n      }\n      function typedArraySupport() {\n        try {\n          const arr = new GlobalUint8Array(1);\n          const proto = { foo: function() {\n            return 42;\n          } };\n          Object.setPrototypeOf(proto, GlobalUint8Array.prototype);\n          Object.setPrototypeOf(arr, proto);\n          return arr.foo() === 42;\n        } catch (e) {\n          return false;\n        }\n      }\n      Object.defineProperty(Buffer2.prototype, \"parent\", {\n        enumerable: true,\n        get: function() {\n          if (!Buffer2.isBuffer(this))\n            return void 0;\n          return this.buffer;\n        }\n      });\n      Object.defineProperty(Buffer2.prototype, \"offset\", {\n        enumerable: true,\n        get: function() {\n          if (!Buffer2.isBuffer(this))\n            return void 0;\n          return this.byteOffset;\n        }\n      });\n      function createBuffer(length) {\n        if (length > K_MAX_LENGTH) {\n          throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n        }\n        const buf = new GlobalUint8Array(length);\n        Object.setPrototypeOf(buf, Buffer2.prototype);\n        return buf;\n      }\n      function Buffer2(arg, encodingOrOffset, length) {\n        if (typeof arg === \"number\") {\n          if (typeof encodingOrOffset === \"string\") {\n            throw new TypeError(\n              'The \"string\" argument must be of type string. Received type number'\n            );\n          }\n          return allocUnsafe(arg);\n        }\n        return from(arg, encodingOrOffset, length);\n      }\n      Buffer2.poolSize = 8192;\n      function from(value, encodingOrOffset, length) {\n        if (typeof value === \"string\") {\n          return fromString(value, encodingOrOffset);\n        }\n        if (GlobalArrayBuffer.isView(value)) {\n          return fromArrayView(value);\n        }\n        if (value == null) {\n          throw new TypeError(\n            \"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value\n          );\n        }\n        if (isInstance(value, GlobalArrayBuffer) || value && isInstance(value.buffer, GlobalArrayBuffer)) {\n          return fromArrayBuffer(value, encodingOrOffset, length);\n        }\n        if (typeof GlobalSharedArrayBuffer !== \"undefined\" && (isInstance(value, GlobalSharedArrayBuffer) || value && isInstance(value.buffer, GlobalSharedArrayBuffer))) {\n          return fromArrayBuffer(value, encodingOrOffset, length);\n        }\n        if (typeof value === \"number\") {\n          throw new TypeError(\n            'The \"value\" argument must not be of type number. Received type number'\n          );\n        }\n        const valueOf = value.valueOf && value.valueOf();\n        if (valueOf != null && valueOf !== value) {\n          return Buffer2.from(valueOf, encodingOrOffset, length);\n        }\n        const b = fromObject(value);\n        if (b)\n          return b;\n        if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") {\n          return Buffer2.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n        }\n        throw new TypeError(\n          \"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value\n        );\n      }\n      Buffer2.from = function(value, encodingOrOffset, length) {\n        return from(value, encodingOrOffset, length);\n      };\n      Object.setPrototypeOf(Buffer2.prototype, GlobalUint8Array.prototype);\n      Object.setPrototypeOf(Buffer2, GlobalUint8Array);\n      function assertSize(size) {\n        if (typeof size !== \"number\") {\n          throw new TypeError('\"size\" argument must be of type number');\n        } else if (size < 0) {\n          throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n        }\n      }\n      function alloc(size, fill, encoding) {\n        assertSize(size);\n        if (size <= 0) {\n          return createBuffer(size);\n        }\n        if (fill !== void 0) {\n          return typeof encoding === \"string\" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n        }\n        return createBuffer(size);\n      }\n      Buffer2.alloc = function(size, fill, encoding) {\n        return alloc(size, fill, encoding);\n      };\n      function allocUnsafe(size) {\n        assertSize(size);\n        return createBuffer(size < 0 ? 0 : checked(size) | 0);\n      }\n      Buffer2.allocUnsafe = function(size) {\n        return allocUnsafe(size);\n      };\n      Buffer2.allocUnsafeSlow = function(size) {\n        return allocUnsafe(size);\n      };\n      function fromString(string, encoding) {\n        if (typeof encoding !== \"string\" || encoding === \"\") {\n          encoding = \"utf8\";\n        }\n        if (!Buffer2.isEncoding(encoding)) {\n          throw new TypeError(\"Unknown encoding: \" + encoding);\n        }\n        const length = byteLength(string, encoding) | 0;\n        let buf = createBuffer(length);\n        const actual = buf.write(string, encoding);\n        if (actual !== length) {\n          buf = buf.slice(0, actual);\n        }\n        return buf;\n      }\n      function fromArrayLike(array) {\n        const length = array.length < 0 ? 0 : checked(array.length) | 0;\n        const buf = createBuffer(length);\n        for (let i = 0; i < length; i += 1) {\n          buf[i] = array[i] & 255;\n        }\n        return buf;\n      }\n      function fromArrayView(arrayView) {\n        if (isInstance(arrayView, GlobalUint8Array)) {\n          const copy = new GlobalUint8Array(arrayView);\n          return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n        }\n        return fromArrayLike(arrayView);\n      }\n      function fromArrayBuffer(array, byteOffset, length) {\n        if (byteOffset < 0 || array.byteLength < byteOffset) {\n          throw new RangeError('\"offset\" is outside of buffer bounds');\n        }\n        if (array.byteLength < byteOffset + (length || 0)) {\n          throw new RangeError('\"length\" is outside of buffer bounds');\n        }\n        let buf;\n        if (byteOffset === void 0 && length === void 0) {\n          buf = new GlobalUint8Array(array);\n        } else if (length === void 0) {\n          buf = new GlobalUint8Array(array, byteOffset);\n        } else {\n          buf = new GlobalUint8Array(array, byteOffset, length);\n        }\n        Object.setPrototypeOf(buf, Buffer2.prototype);\n        return buf;\n      }\n      function fromObject(obj) {\n        if (Buffer2.isBuffer(obj)) {\n          const len = checked(obj.length) | 0;\n          const buf = createBuffer(len);\n          if (buf.length === 0) {\n            return buf;\n          }\n          obj.copy(buf, 0, 0, len);\n          return buf;\n        }\n        if (obj.length !== void 0) {\n          if (typeof obj.length !== \"number\" || numberIsNaN(obj.length)) {\n            return createBuffer(0);\n          }\n          return fromArrayLike(obj);\n        }\n        if (obj.type === \"Buffer\" && Array.isArray(obj.data)) {\n          return fromArrayLike(obj.data);\n        }\n      }\n      function checked(length) {\n        if (length >= K_MAX_LENGTH) {\n          throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + K_MAX_LENGTH.toString(16) + \" bytes\");\n        }\n        return length | 0;\n      }\n      function SlowBuffer(length) {\n        if (+length != length) {\n          length = 0;\n        }\n        return Buffer2.alloc(+length);\n      }\n      Buffer2.isBuffer = function isBuffer(b) {\n        return b != null && b._isBuffer === true && b !== Buffer2.prototype;\n      };\n      Buffer2.compare = function compare(a, b) {\n        if (isInstance(a, GlobalUint8Array))\n          a = Buffer2.from(a, a.offset, a.byteLength);\n        if (isInstance(b, GlobalUint8Array))\n          b = Buffer2.from(b, b.offset, b.byteLength);\n        if (!Buffer2.isBuffer(a) || !Buffer2.isBuffer(b)) {\n          throw new TypeError(\n            'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n          );\n        }\n        if (a === b)\n          return 0;\n        let x = a.length;\n        let y = b.length;\n        for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n          if (a[i] !== b[i]) {\n            x = a[i];\n            y = b[i];\n            break;\n          }\n        }\n        if (x < y)\n          return -1;\n        if (y < x)\n          return 1;\n        return 0;\n      };\n      Buffer2.isEncoding = function isEncoding(encoding) {\n        switch (String(encoding).toLowerCase()) {\n          case \"hex\":\n          case \"utf8\":\n          case \"utf-8\":\n          case \"ascii\":\n          case \"latin1\":\n          case \"binary\":\n          case \"base64\":\n          case \"ucs2\":\n          case \"ucs-2\":\n          case \"utf16le\":\n          case \"utf-16le\":\n            return true;\n          default:\n            return false;\n        }\n      };\n      Buffer2.concat = function concat(list, length) {\n        if (!Array.isArray(list)) {\n          throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        if (list.length === 0) {\n          return Buffer2.alloc(0);\n        }\n        let i;\n        if (length === void 0) {\n          length = 0;\n          for (i = 0; i < list.length; ++i) {\n            length += list[i].length;\n          }\n        }\n        const buffer = Buffer2.allocUnsafe(length);\n        let pos = 0;\n        for (i = 0; i < list.length; ++i) {\n          let buf = list[i];\n          if (isInstance(buf, GlobalUint8Array)) {\n            if (pos + buf.length > buffer.length) {\n              if (!Buffer2.isBuffer(buf))\n                buf = Buffer2.from(buf);\n              buf.copy(buffer, pos);\n            } else {\n              GlobalUint8Array.prototype.set.call(\n                buffer,\n                buf,\n                pos\n              );\n            }\n          } else if (!Buffer2.isBuffer(buf)) {\n            throw new TypeError('\"list\" argument must be an Array of Buffers');\n          } else {\n            buf.copy(buffer, pos);\n          }\n          pos += buf.length;\n        }\n        return buffer;\n      };\n      function byteLength(string, encoding) {\n        if (Buffer2.isBuffer(string)) {\n          return string.length;\n        }\n        if (GlobalArrayBuffer.isView(string) || isInstance(string, GlobalArrayBuffer)) {\n          return string.byteLength;\n        }\n        if (typeof string !== \"string\") {\n          throw new TypeError(\n            'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string\n          );\n        }\n        const len = string.length;\n        const mustMatch = arguments.length > 2 && arguments[2] === true;\n        if (!mustMatch && len === 0)\n          return 0;\n        let loweredCase = false;\n        for (; ; ) {\n          switch (encoding) {\n            case \"ascii\":\n            case \"latin1\":\n            case \"binary\":\n              return len;\n            case \"utf8\":\n            case \"utf-8\":\n              return utf8ToBytes(string).length;\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return len * 2;\n            case \"hex\":\n              return len >>> 1;\n            case \"base64\":\n              return base64ToBytes(string).length;\n            default:\n              if (loweredCase) {\n                return mustMatch ? -1 : utf8ToBytes(string).length;\n              }\n              encoding = (\"\" + encoding).toLowerCase();\n              loweredCase = true;\n          }\n        }\n      }\n      Buffer2.byteLength = byteLength;\n      function slowToString(encoding, start, end) {\n        let loweredCase = false;\n        if (start === void 0 || start < 0) {\n          start = 0;\n        }\n        if (start > this.length) {\n          return \"\";\n        }\n        if (end === void 0 || end > this.length) {\n          end = this.length;\n        }\n        if (end <= 0) {\n          return \"\";\n        }\n        end >>>= 0;\n        start >>>= 0;\n        if (end <= start) {\n          return \"\";\n        }\n        if (!encoding)\n          encoding = \"utf8\";\n        while (true) {\n          switch (encoding) {\n            case \"hex\":\n              return hexSlice(this, start, end);\n            case \"utf8\":\n            case \"utf-8\":\n              return utf8Slice(this, start, end);\n            case \"ascii\":\n              return asciiSlice(this, start, end);\n            case \"latin1\":\n            case \"binary\":\n              return latin1Slice(this, start, end);\n            case \"base64\":\n              return base64Slice(this, start, end);\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return utf16leSlice(this, start, end);\n            default:\n              if (loweredCase)\n                throw new TypeError(\"Unknown encoding: \" + encoding);\n              encoding = (encoding + \"\").toLowerCase();\n              loweredCase = true;\n          }\n        }\n      }\n      Buffer2.prototype._isBuffer = true;\n      function swap(b, n, m) {\n        const i = b[n];\n        b[n] = b[m];\n        b[m] = i;\n      }\n      Buffer2.prototype.swap16 = function swap16() {\n        const len = this.length;\n        if (len % 2 !== 0) {\n          throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n        }\n        for (let i = 0; i < len; i += 2) {\n          swap(this, i, i + 1);\n        }\n        return this;\n      };\n      Buffer2.prototype.swap32 = function swap32() {\n        const len = this.length;\n        if (len % 4 !== 0) {\n          throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n        }\n        for (let i = 0; i < len; i += 4) {\n          swap(this, i, i + 3);\n          swap(this, i + 1, i + 2);\n        }\n        return this;\n      };\n      Buffer2.prototype.swap64 = function swap64() {\n        const len = this.length;\n        if (len % 8 !== 0) {\n          throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n        }\n        for (let i = 0; i < len; i += 8) {\n          swap(this, i, i + 7);\n          swap(this, i + 1, i + 6);\n          swap(this, i + 2, i + 5);\n          swap(this, i + 3, i + 4);\n        }\n        return this;\n      };\n      Buffer2.prototype.toString = function toString() {\n        const length = this.length;\n        if (length === 0)\n          return \"\";\n        if (arguments.length === 0)\n          return utf8Slice(this, 0, length);\n        return slowToString.apply(this, arguments);\n      };\n      Buffer2.prototype.toLocaleString = Buffer2.prototype.toString;\n      Buffer2.prototype.equals = function equals(b) {\n        if (!Buffer2.isBuffer(b))\n          throw new TypeError(\"Argument must be a Buffer\");\n        if (this === b)\n          return true;\n        return Buffer2.compare(this, b) === 0;\n      };\n      Buffer2.prototype.inspect = function inspect() {\n        let str = \"\";\n        const max = exports.INSPECT_MAX_BYTES;\n        str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n        if (this.length > max)\n          str += \" ... \";\n        return \"<Buffer \" + str + \">\";\n      };\n      if (customInspectSymbol) {\n        Buffer2.prototype[customInspectSymbol] = Buffer2.prototype.inspect;\n      }\n      Buffer2.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n        if (isInstance(target, GlobalUint8Array)) {\n          target = Buffer2.from(target, target.offset, target.byteLength);\n        }\n        if (!Buffer2.isBuffer(target)) {\n          throw new TypeError(\n            'The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target\n          );\n        }\n        if (start === void 0) {\n          start = 0;\n        }\n        if (end === void 0) {\n          end = target ? target.length : 0;\n        }\n        if (thisStart === void 0) {\n          thisStart = 0;\n        }\n        if (thisEnd === void 0) {\n          thisEnd = this.length;\n        }\n        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n          throw new RangeError(\"out of range index\");\n        }\n        if (thisStart >= thisEnd && start >= end) {\n          return 0;\n        }\n        if (thisStart >= thisEnd) {\n          return -1;\n        }\n        if (start >= end) {\n          return 1;\n        }\n        start >>>= 0;\n        end >>>= 0;\n        thisStart >>>= 0;\n        thisEnd >>>= 0;\n        if (this === target)\n          return 0;\n        let x = thisEnd - thisStart;\n        let y = end - start;\n        const len = Math.min(x, y);\n        const thisCopy = this.slice(thisStart, thisEnd);\n        const targetCopy = target.slice(start, end);\n        for (let i = 0; i < len; ++i) {\n          if (thisCopy[i] !== targetCopy[i]) {\n            x = thisCopy[i];\n            y = targetCopy[i];\n            break;\n          }\n        }\n        if (x < y)\n          return -1;\n        if (y < x)\n          return 1;\n        return 0;\n      };\n      function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n        if (buffer.length === 0)\n          return -1;\n        if (typeof byteOffset === \"string\") {\n          encoding = byteOffset;\n          byteOffset = 0;\n        } else if (byteOffset > 2147483647) {\n          byteOffset = 2147483647;\n        } else if (byteOffset < -2147483648) {\n          byteOffset = -2147483648;\n        }\n        byteOffset = +byteOffset;\n        if (numberIsNaN(byteOffset)) {\n          byteOffset = dir ? 0 : buffer.length - 1;\n        }\n        if (byteOffset < 0)\n          byteOffset = buffer.length + byteOffset;\n        if (byteOffset >= buffer.length) {\n          if (dir)\n            return -1;\n          else\n            byteOffset = buffer.length - 1;\n        } else if (byteOffset < 0) {\n          if (dir)\n            byteOffset = 0;\n          else\n            return -1;\n        }\n        if (typeof val === \"string\") {\n          val = Buffer2.from(val, encoding);\n        }\n        if (Buffer2.isBuffer(val)) {\n          if (val.length === 0) {\n            return -1;\n          }\n          return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n        } else if (typeof val === \"number\") {\n          val = val & 255;\n          if (typeof GlobalUint8Array.prototype.indexOf === \"function\") {\n            if (dir) {\n              return GlobalUint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n            } else {\n              return GlobalUint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n            }\n          }\n          return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n        }\n        throw new TypeError(\"val must be string, number or Buffer\");\n      }\n      function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n        let indexSize = 1;\n        let arrLength = arr.length;\n        let valLength = val.length;\n        if (encoding !== void 0) {\n          encoding = String(encoding).toLowerCase();\n          if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n            if (arr.length < 2 || val.length < 2) {\n              return -1;\n            }\n            indexSize = 2;\n            arrLength /= 2;\n            valLength /= 2;\n            byteOffset /= 2;\n          }\n        }\n        function read(buf, i2) {\n          if (indexSize === 1) {\n            return buf[i2];\n          } else {\n            return buf.readUInt16BE(i2 * indexSize);\n          }\n        }\n        let i;\n        if (dir) {\n          let foundIndex = -1;\n          for (i = byteOffset; i < arrLength; i++) {\n            if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n              if (foundIndex === -1)\n                foundIndex = i;\n              if (i - foundIndex + 1 === valLength)\n                return foundIndex * indexSize;\n            } else {\n              if (foundIndex !== -1)\n                i -= i - foundIndex;\n              foundIndex = -1;\n            }\n          }\n        } else {\n          if (byteOffset + valLength > arrLength)\n            byteOffset = arrLength - valLength;\n          for (i = byteOffset; i >= 0; i--) {\n            let found = true;\n            for (let j = 0; j < valLength; j++) {\n              if (read(arr, i + j) !== read(val, j)) {\n                found = false;\n                break;\n              }\n            }\n            if (found)\n              return i;\n          }\n        }\n        return -1;\n      }\n      Buffer2.prototype.includes = function includes(val, byteOffset, encoding) {\n        return this.indexOf(val, byteOffset, encoding) !== -1;\n      };\n      Buffer2.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n      };\n      Buffer2.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n      };\n      function hexWrite(buf, string, offset, length) {\n        offset = Number(offset) || 0;\n        const remaining = buf.length - offset;\n        if (!length) {\n          length = remaining;\n        } else {\n          length = Number(length);\n          if (length > remaining) {\n            length = remaining;\n          }\n        }\n        const strLen = string.length;\n        if (length > strLen / 2) {\n          length = strLen / 2;\n        }\n        let i;\n        for (i = 0; i < length; ++i) {\n          const parsed = parseInt(string.substr(i * 2, 2), 16);\n          if (numberIsNaN(parsed))\n            return i;\n          buf[offset + i] = parsed;\n        }\n        return i;\n      }\n      function utf8Write(buf, string, offset, length) {\n        return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n      }\n      function asciiWrite(buf, string, offset, length) {\n        return blitBuffer(asciiToBytes(string), buf, offset, length);\n      }\n      function base64Write(buf, string, offset, length) {\n        return blitBuffer(base64ToBytes(string), buf, offset, length);\n      }\n      function ucs2Write(buf, string, offset, length) {\n        return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n      }\n      Buffer2.prototype.write = function write(string, offset, length, encoding) {\n        if (offset === void 0) {\n          encoding = \"utf8\";\n          length = this.length;\n          offset = 0;\n        } else if (length === void 0 && typeof offset === \"string\") {\n          encoding = offset;\n          length = this.length;\n          offset = 0;\n        } else if (isFinite(offset)) {\n          offset = offset >>> 0;\n          if (isFinite(length)) {\n            length = length >>> 0;\n            if (encoding === void 0)\n              encoding = \"utf8\";\n          } else {\n            encoding = length;\n            length = void 0;\n          }\n        } else {\n          throw new Error(\n            \"Buffer.write(string, encoding, offset[, length]) is no longer supported\"\n          );\n        }\n        const remaining = this.length - offset;\n        if (length === void 0 || length > remaining)\n          length = remaining;\n        if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n          throw new RangeError(\"Attempt to write outside buffer bounds\");\n        }\n        if (!encoding)\n          encoding = \"utf8\";\n        let loweredCase = false;\n        for (; ; ) {\n          switch (encoding) {\n            case \"hex\":\n              return hexWrite(this, string, offset, length);\n            case \"utf8\":\n            case \"utf-8\":\n              return utf8Write(this, string, offset, length);\n            case \"ascii\":\n            case \"latin1\":\n            case \"binary\":\n              return asciiWrite(this, string, offset, length);\n            case \"base64\":\n              return base64Write(this, string, offset, length);\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return ucs2Write(this, string, offset, length);\n            default:\n              if (loweredCase)\n                throw new TypeError(\"Unknown encoding: \" + encoding);\n              encoding = (\"\" + encoding).toLowerCase();\n              loweredCase = true;\n          }\n        }\n      };\n      Buffer2.prototype.toJSON = function toJSON() {\n        return {\n          type: \"Buffer\",\n          data: Array.prototype.slice.call(this._arr || this, 0)\n        };\n      };\n      function base64Slice(buf, start, end) {\n        if (start === 0 && end === buf.length) {\n          return base64.fromByteArray(buf);\n        } else {\n          return base64.fromByteArray(buf.slice(start, end));\n        }\n      }\n      function utf8Slice(buf, start, end) {\n        end = Math.min(buf.length, end);\n        const res = [];\n        let i = start;\n        while (i < end) {\n          const firstByte = buf[i];\n          let codePoint = null;\n          let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n          if (i + bytesPerSequence <= end) {\n            let secondByte, thirdByte, fourthByte, tempCodePoint;\n            switch (bytesPerSequence) {\n              case 1:\n                if (firstByte < 128) {\n                  codePoint = firstByte;\n                }\n                break;\n              case 2:\n                secondByte = buf[i + 1];\n                if ((secondByte & 192) === 128) {\n                  tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n                  if (tempCodePoint > 127) {\n                    codePoint = tempCodePoint;\n                  }\n                }\n                break;\n              case 3:\n                secondByte = buf[i + 1];\n                thirdByte = buf[i + 2];\n                if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n                  tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n                  if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n                    codePoint = tempCodePoint;\n                  }\n                }\n                break;\n              case 4:\n                secondByte = buf[i + 1];\n                thirdByte = buf[i + 2];\n                fourthByte = buf[i + 3];\n                if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n                  tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n                  if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n                    codePoint = tempCodePoint;\n                  }\n                }\n            }\n          }\n          if (codePoint === null) {\n            codePoint = 65533;\n            bytesPerSequence = 1;\n          } else if (codePoint > 65535) {\n            codePoint -= 65536;\n            res.push(codePoint >>> 10 & 1023 | 55296);\n            codePoint = 56320 | codePoint & 1023;\n          }\n          res.push(codePoint);\n          i += bytesPerSequence;\n        }\n        return decodeCodePointsArray(res);\n      }\n      var MAX_ARGUMENTS_LENGTH = 4096;\n      function decodeCodePointsArray(codePoints) {\n        const len = codePoints.length;\n        if (len <= MAX_ARGUMENTS_LENGTH) {\n          return String.fromCharCode.apply(String, codePoints);\n        }\n        let res = \"\";\n        let i = 0;\n        while (i < len) {\n          res += String.fromCharCode.apply(\n            String,\n            codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n          );\n        }\n        return res;\n      }\n      function asciiSlice(buf, start, end) {\n        let ret = \"\";\n        end = Math.min(buf.length, end);\n        for (let i = start; i < end; ++i) {\n          ret += String.fromCharCode(buf[i] & 127);\n        }\n        return ret;\n      }\n      function latin1Slice(buf, start, end) {\n        let ret = \"\";\n        end = Math.min(buf.length, end);\n        for (let i = start; i < end; ++i) {\n          ret += String.fromCharCode(buf[i]);\n        }\n        return ret;\n      }\n      function hexSlice(buf, start, end) {\n        const len = buf.length;\n        if (!start || start < 0)\n          start = 0;\n        if (!end || end < 0 || end > len)\n          end = len;\n        let out = \"\";\n        for (let i = start; i < end; ++i) {\n          out += hexSliceLookupTable[buf[i]];\n        }\n        return out;\n      }\n      function utf16leSlice(buf, start, end) {\n        const bytes = buf.slice(start, end);\n        let res = \"\";\n        for (let i = 0; i < bytes.length - 1; i += 2) {\n          res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n        }\n        return res;\n      }\n      Buffer2.prototype.slice = function slice(start, end) {\n        const len = this.length;\n        start = ~~start;\n        end = end === void 0 ? len : ~~end;\n        if (start < 0) {\n          start += len;\n          if (start < 0)\n            start = 0;\n        } else if (start > len) {\n          start = len;\n        }\n        if (end < 0) {\n          end += len;\n          if (end < 0)\n            end = 0;\n        } else if (end > len) {\n          end = len;\n        }\n        if (end < start)\n          end = start;\n        const newBuf = this.subarray(start, end);\n        Object.setPrototypeOf(newBuf, Buffer2.prototype);\n        return newBuf;\n      };\n      function checkOffset(offset, ext, length) {\n        if (offset % 1 !== 0 || offset < 0)\n          throw new RangeError(\"offset is not uint\");\n        if (offset + ext > length)\n          throw new RangeError(\"Trying to access beyond buffer length\");\n      }\n      Buffer2.prototype.readUintLE = Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert)\n          checkOffset(offset, byteLength2, this.length);\n        let val = this[offset];\n        let mul = 1;\n        let i = 0;\n        while (++i < byteLength2 && (mul *= 256)) {\n          val += this[offset + i] * mul;\n        }\n        return val;\n      };\n      Buffer2.prototype.readUintBE = Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert) {\n          checkOffset(offset, byteLength2, this.length);\n        }\n        let val = this[offset + --byteLength2];\n        let mul = 1;\n        while (byteLength2 > 0 && (mul *= 256)) {\n          val += this[offset + --byteLength2] * mul;\n        }\n        return val;\n      };\n      Buffer2.prototype.readUint8 = Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 1, this.length);\n        return this[offset];\n      };\n      Buffer2.prototype.readUint16LE = Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 2, this.length);\n        return this[offset] | this[offset + 1] << 8;\n      };\n      Buffer2.prototype.readUint16BE = Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 2, this.length);\n        return this[offset] << 8 | this[offset + 1];\n      };\n      Buffer2.prototype.readUint32LE = Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;\n      };\n      Buffer2.prototype.readUint32BE = Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n      };\n      Buffer2.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n        offset = offset >>> 0;\n        validateNumber(offset, \"offset\");\n        const first = this[offset];\n        const last = this[offset + 7];\n        if (first === void 0 || last === void 0) {\n          boundsError(offset, this.length - 8);\n        }\n        const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n        const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n        return BigInt(lo) + (BigInt(hi) << BigInt(32));\n      });\n      Buffer2.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n        offset = offset >>> 0;\n        validateNumber(offset, \"offset\");\n        const first = this[offset];\n        const last = this[offset + 7];\n        if (first === void 0 || last === void 0) {\n          boundsError(offset, this.length - 8);\n        }\n        const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n        const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;\n        return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n      });\n      Buffer2.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert)\n          checkOffset(offset, byteLength2, this.length);\n        let val = this[offset];\n        let mul = 1;\n        let i = 0;\n        while (++i < byteLength2 && (mul *= 256)) {\n          val += this[offset + i] * mul;\n        }\n        mul *= 128;\n        if (val >= mul)\n          val -= Math.pow(2, 8 * byteLength2);\n        return val;\n      };\n      Buffer2.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert)\n          checkOffset(offset, byteLength2, this.length);\n        let i = byteLength2;\n        let mul = 1;\n        let val = this[offset + --i];\n        while (i > 0 && (mul *= 256)) {\n          val += this[offset + --i] * mul;\n        }\n        mul *= 128;\n        if (val >= mul)\n          val -= Math.pow(2, 8 * byteLength2);\n        return val;\n      };\n      Buffer2.prototype.readInt8 = function readInt8(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 1, this.length);\n        if (!(this[offset] & 128))\n          return this[offset];\n        return (255 - this[offset] + 1) * -1;\n      };\n      Buffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 2, this.length);\n        const val = this[offset] | this[offset + 1] << 8;\n        return val & 32768 ? val | 4294901760 : val;\n      };\n      Buffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 2, this.length);\n        const val = this[offset + 1] | this[offset] << 8;\n        return val & 32768 ? val | 4294901760 : val;\n      };\n      Buffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n      };\n      Buffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n      };\n      Buffer2.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n        offset = offset >>> 0;\n        validateNumber(offset, \"offset\");\n        const first = this[offset];\n        const last = this[offset + 7];\n        if (first === void 0 || last === void 0) {\n          boundsError(offset, this.length - 8);\n        }\n        const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);\n        return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n      });\n      Buffer2.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n        offset = offset >>> 0;\n        validateNumber(offset, \"offset\");\n        const first = this[offset];\n        const last = this[offset + 7];\n        if (first === void 0 || last === void 0) {\n          boundsError(offset, this.length - 8);\n        }\n        const val = (first << 24) + // Overflow\n        this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n        return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);\n      });\n      Buffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return ieee754.read(this, offset, true, 23, 4);\n      };\n      Buffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 4, this.length);\n        return ieee754.read(this, offset, false, 23, 4);\n      };\n      Buffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 8, this.length);\n        return ieee754.read(this, offset, true, 52, 8);\n      };\n      Buffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkOffset(offset, 8, this.length);\n        return ieee754.read(this, offset, false, 52, 8);\n      };\n      function checkInt(buf, value, offset, ext, max, min) {\n        if (!Buffer2.isBuffer(buf))\n          throw new TypeError('\"buffer\" argument must be a Buffer instance');\n        if (value > max || value < min)\n          throw new RangeError('\"value\" argument is out of bounds');\n        if (offset + ext > buf.length)\n          throw new RangeError(\"Index out of range\");\n      }\n      Buffer2.prototype.writeUintLE = Buffer2.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert) {\n          const maxBytes = Math.pow(2, 8 * byteLength2) - 1;\n          checkInt(this, value, offset, byteLength2, maxBytes, 0);\n        }\n        let mul = 1;\n        let i = 0;\n        this[offset] = value & 255;\n        while (++i < byteLength2 && (mul *= 256)) {\n          this[offset + i] = value / mul & 255;\n        }\n        return offset + byteLength2;\n      };\n      Buffer2.prototype.writeUintBE = Buffer2.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        byteLength2 = byteLength2 >>> 0;\n        if (!noAssert) {\n          const maxBytes = Math.pow(2, 8 * byteLength2) - 1;\n          checkInt(this, value, offset, byteLength2, maxBytes, 0);\n        }\n        let i = byteLength2 - 1;\n        let mul = 1;\n        this[offset + i] = value & 255;\n        while (--i >= 0 && (mul *= 256)) {\n          this[offset + i] = value / mul & 255;\n        }\n        return offset + byteLength2;\n      };\n      Buffer2.prototype.writeUint8 = Buffer2.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 1, 255, 0);\n        this[offset] = value & 255;\n        return offset + 1;\n      };\n      Buffer2.prototype.writeUint16LE = Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 2, 65535, 0);\n        this[offset] = value & 255;\n        this[offset + 1] = value >>> 8;\n        return offset + 2;\n      };\n      Buffer2.prototype.writeUint16BE = Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 2, 65535, 0);\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 255;\n        return offset + 2;\n      };\n      Buffer2.prototype.writeUint32LE = Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 4, 4294967295, 0);\n        this[offset + 3] = value >>> 24;\n        this[offset + 2] = value >>> 16;\n        this[offset + 1] = value >>> 8;\n        this[offset] = value & 255;\n        return offset + 4;\n      };\n      Buffer2.prototype.writeUint32BE = Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 4, 4294967295, 0);\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 255;\n        return offset + 4;\n      };\n      function wrtBigUInt64LE(buf, value, offset, min, max) {\n        checkIntBI(value, min, max, buf, offset, 7);\n        let lo = Number(value & BigInt(4294967295));\n        buf[offset++] = lo;\n        lo = lo >> 8;\n        buf[offset++] = lo;\n        lo = lo >> 8;\n        buf[offset++] = lo;\n        lo = lo >> 8;\n        buf[offset++] = lo;\n        let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n        buf[offset++] = hi;\n        hi = hi >> 8;\n        buf[offset++] = hi;\n        hi = hi >> 8;\n        buf[offset++] = hi;\n        hi = hi >> 8;\n        buf[offset++] = hi;\n        return offset;\n      }\n      function wrtBigUInt64BE(buf, value, offset, min, max) {\n        checkIntBI(value, min, max, buf, offset, 7);\n        let lo = Number(value & BigInt(4294967295));\n        buf[offset + 7] = lo;\n        lo = lo >> 8;\n        buf[offset + 6] = lo;\n        lo = lo >> 8;\n        buf[offset + 5] = lo;\n        lo = lo >> 8;\n        buf[offset + 4] = lo;\n        let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n        buf[offset + 3] = hi;\n        hi = hi >> 8;\n        buf[offset + 2] = hi;\n        hi = hi >> 8;\n        buf[offset + 1] = hi;\n        hi = hi >> 8;\n        buf[offset] = hi;\n        return offset + 8;\n      }\n      Buffer2.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n        return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n      });\n      Buffer2.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n        return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n      });\n      Buffer2.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          const limit = Math.pow(2, 8 * byteLength2 - 1);\n          checkInt(this, value, offset, byteLength2, limit - 1, -limit);\n        }\n        let i = 0;\n        let mul = 1;\n        let sub = 0;\n        this[offset] = value & 255;\n        while (++i < byteLength2 && (mul *= 256)) {\n          if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n            sub = 1;\n          }\n          this[offset + i] = (value / mul >> 0) - sub & 255;\n        }\n        return offset + byteLength2;\n      };\n      Buffer2.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          const limit = Math.pow(2, 8 * byteLength2 - 1);\n          checkInt(this, value, offset, byteLength2, limit - 1, -limit);\n        }\n        let i = byteLength2 - 1;\n        let mul = 1;\n        let sub = 0;\n        this[offset + i] = value & 255;\n        while (--i >= 0 && (mul *= 256)) {\n          if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n            sub = 1;\n          }\n          this[offset + i] = (value / mul >> 0) - sub & 255;\n        }\n        return offset + byteLength2;\n      };\n      Buffer2.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 1, 127, -128);\n        if (value < 0)\n          value = 255 + value + 1;\n        this[offset] = value & 255;\n        return offset + 1;\n      };\n      Buffer2.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 2, 32767, -32768);\n        this[offset] = value & 255;\n        this[offset + 1] = value >>> 8;\n        return offset + 2;\n      };\n      Buffer2.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 2, 32767, -32768);\n        this[offset] = value >>> 8;\n        this[offset + 1] = value & 255;\n        return offset + 2;\n      };\n      Buffer2.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 4, 2147483647, -2147483648);\n        this[offset] = value & 255;\n        this[offset + 1] = value >>> 8;\n        this[offset + 2] = value >>> 16;\n        this[offset + 3] = value >>> 24;\n        return offset + 4;\n      };\n      Buffer2.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert)\n          checkInt(this, value, offset, 4, 2147483647, -2147483648);\n        if (value < 0)\n          value = 4294967295 + value + 1;\n        this[offset] = value >>> 24;\n        this[offset + 1] = value >>> 16;\n        this[offset + 2] = value >>> 8;\n        this[offset + 3] = value & 255;\n        return offset + 4;\n      };\n      Buffer2.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n        return wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n      });\n      Buffer2.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n        return wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n      });\n      function checkIEEE754(buf, value, offset, ext, max, min) {\n        if (offset + ext > buf.length)\n          throw new RangeError(\"Index out of range\");\n        if (offset < 0)\n          throw new RangeError(\"Index out of range\");\n      }\n      function writeFloat(buf, value, offset, littleEndian, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);\n        }\n        ieee754.write(buf, value, offset, littleEndian, 23, 4);\n        return offset + 4;\n      }\n      Buffer2.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n        return writeFloat(this, value, offset, true, noAssert);\n      };\n      Buffer2.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n        return writeFloat(this, value, offset, false, noAssert);\n      };\n      function writeDouble(buf, value, offset, littleEndian, noAssert) {\n        value = +value;\n        offset = offset >>> 0;\n        if (!noAssert) {\n          checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);\n        }\n        ieee754.write(buf, value, offset, littleEndian, 52, 8);\n        return offset + 8;\n      }\n      Buffer2.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n        return writeDouble(this, value, offset, true, noAssert);\n      };\n      Buffer2.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n        return writeDouble(this, value, offset, false, noAssert);\n      };\n      Buffer2.prototype.copy = function copy(target, targetStart, start, end) {\n        if (!Buffer2.isBuffer(target))\n          throw new TypeError(\"argument should be a Buffer\");\n        if (!start)\n          start = 0;\n        if (!end && end !== 0)\n          end = this.length;\n        if (targetStart >= target.length)\n          targetStart = target.length;\n        if (!targetStart)\n          targetStart = 0;\n        if (end > 0 && end < start)\n          end = start;\n        if (end === start)\n          return 0;\n        if (target.length === 0 || this.length === 0)\n          return 0;\n        if (targetStart < 0) {\n          throw new RangeError(\"targetStart out of bounds\");\n        }\n        if (start < 0 || start >= this.length)\n          throw new RangeError(\"Index out of range\");\n        if (end < 0)\n          throw new RangeError(\"sourceEnd out of bounds\");\n        if (end > this.length)\n          end = this.length;\n        if (target.length - targetStart < end - start) {\n          end = target.length - targetStart + start;\n        }\n        const len = end - start;\n        if (this === target && typeof GlobalUint8Array.prototype.copyWithin === \"function\") {\n          this.copyWithin(targetStart, start, end);\n        } else {\n          GlobalUint8Array.prototype.set.call(\n            target,\n            this.subarray(start, end),\n            targetStart\n          );\n        }\n        return len;\n      };\n      Buffer2.prototype.fill = function fill(val, start, end, encoding) {\n        if (typeof val === \"string\") {\n          if (typeof start === \"string\") {\n            encoding = start;\n            start = 0;\n            end = this.length;\n          } else if (typeof end === \"string\") {\n            encoding = end;\n            end = this.length;\n          }\n          if (encoding !== void 0 && typeof encoding !== \"string\") {\n            throw new TypeError(\"encoding must be a string\");\n          }\n          if (typeof encoding === \"string\" && !Buffer2.isEncoding(encoding)) {\n            throw new TypeError(\"Unknown encoding: \" + encoding);\n          }\n          if (val.length === 1) {\n            const code = val.charCodeAt(0);\n            if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") {\n              val = code;\n            }\n          }\n        } else if (typeof val === \"number\") {\n          val = val & 255;\n        } else if (typeof val === \"boolean\") {\n          val = Number(val);\n        }\n        if (start < 0 || this.length < start || this.length < end) {\n          throw new RangeError(\"Out of range index\");\n        }\n        if (end <= start) {\n          return this;\n        }\n        start = start >>> 0;\n        end = end === void 0 ? this.length : end >>> 0;\n        if (!val)\n          val = 0;\n        let i;\n        if (typeof val === \"number\") {\n          for (i = start; i < end; ++i) {\n            this[i] = val;\n          }\n        } else {\n          const bytes = Buffer2.isBuffer(val) ? val : Buffer2.from(val, encoding);\n          const len = bytes.length;\n          if (len === 0) {\n            throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n          }\n          for (i = 0; i < end - start; ++i) {\n            this[i + start] = bytes[i % len];\n          }\n        }\n        return this;\n      };\n      var errors = {};\n      function E(sym, getMessage, Base) {\n        errors[sym] = class NodeError extends Base {\n          constructor() {\n            super();\n            Object.defineProperty(this, \"message\", {\n              value: getMessage.apply(this, arguments),\n              writable: true,\n              configurable: true\n            });\n            this.name = `${this.name} [${sym}]`;\n            this.stack;\n            delete this.name;\n          }\n          get code() {\n            return sym;\n          }\n          set code(value) {\n            Object.defineProperty(this, \"code\", {\n              configurable: true,\n              enumerable: true,\n              value,\n              writable: true\n            });\n          }\n          toString() {\n            return `${this.name} [${sym}]: ${this.message}`;\n          }\n        };\n      }\n      E(\n        \"ERR_BUFFER_OUT_OF_BOUNDS\",\n        function(name) {\n          if (name) {\n            return `${name} is outside of buffer bounds`;\n          }\n          return \"Attempt to access memory outside buffer bounds\";\n        },\n        RangeError\n      );\n      E(\n        \"ERR_INVALID_ARG_TYPE\",\n        function(name, actual) {\n          return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n        },\n        TypeError\n      );\n      E(\n        \"ERR_OUT_OF_RANGE\",\n        function(str, range, input) {\n          let msg = `The value of \"${str}\" is out of range.`;\n          let received = input;\n          if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n            received = addNumericalSeparator(String(input));\n          } else if (typeof input === \"bigint\") {\n            received = String(input);\n            if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n              received = addNumericalSeparator(received);\n            }\n            received += \"n\";\n          }\n          msg += ` It must be ${range}. Received ${received}`;\n          return msg;\n        },\n        RangeError\n      );\n      function addNumericalSeparator(val) {\n        let res = \"\";\n        let i = val.length;\n        const start = val[0] === \"-\" ? 1 : 0;\n        for (; i >= start + 4; i -= 3) {\n          res = `_${val.slice(i - 3, i)}${res}`;\n        }\n        return `${val.slice(0, i)}${res}`;\n      }\n      function checkBounds(buf, offset, byteLength2) {\n        validateNumber(offset, \"offset\");\n        if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {\n          boundsError(offset, buf.length - (byteLength2 + 1));\n        }\n      }\n      function checkIntBI(value, min, max, buf, offset, byteLength2) {\n        if (value > max || value < min) {\n          const n = typeof min === \"bigint\" ? \"n\" : \"\";\n          let range;\n          if (byteLength2 > 3) {\n            if (min === 0 || min === BigInt(0)) {\n              range = `>= 0${n} and < 2${n} ** ${(byteLength2 + 1) * 8}${n}`;\n            } else {\n              range = `>= -(2${n} ** ${(byteLength2 + 1) * 8 - 1}${n}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n}`;\n            }\n          } else {\n            range = `>= ${min}${n} and <= ${max}${n}`;\n          }\n          throw new errors.ERR_OUT_OF_RANGE(\"value\", range, value);\n        }\n        checkBounds(buf, offset, byteLength2);\n      }\n      function validateNumber(value, name) {\n        if (typeof value !== \"number\") {\n          throw new errors.ERR_INVALID_ARG_TYPE(name, \"number\", value);\n        }\n      }\n      function boundsError(value, length, type) {\n        if (Math.floor(value) !== value) {\n          validateNumber(value, type);\n          throw new errors.ERR_OUT_OF_RANGE(type || \"offset\", \"an integer\", value);\n        }\n        if (length < 0) {\n          throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n        }\n        throw new errors.ERR_OUT_OF_RANGE(\n          type || \"offset\",\n          `>= ${type ? 1 : 0} and <= ${length}`,\n          value\n        );\n      }\n      var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n      function base64clean(str) {\n        str = str.split(\"=\")[0];\n        str = str.trim().replace(INVALID_BASE64_RE, \"\");\n        if (str.length < 2)\n          return \"\";\n        while (str.length % 4 !== 0) {\n          str = str + \"=\";\n        }\n        return str;\n      }\n      function utf8ToBytes(string, units) {\n        units = units || Infinity;\n        let codePoint;\n        const length = string.length;\n        let leadSurrogate = null;\n        const bytes = [];\n        for (let i = 0; i < length; ++i) {\n          codePoint = string.charCodeAt(i);\n          if (codePoint > 55295 && codePoint < 57344) {\n            if (!leadSurrogate) {\n              if (codePoint > 56319) {\n                if ((units -= 3) > -1)\n                  bytes.push(239, 191, 189);\n                continue;\n              } else if (i + 1 === length) {\n                if ((units -= 3) > -1)\n                  bytes.push(239, 191, 189);\n                continue;\n              }\n              leadSurrogate = codePoint;\n              continue;\n            }\n            if (codePoint < 56320) {\n              if ((units -= 3) > -1)\n                bytes.push(239, 191, 189);\n              leadSurrogate = codePoint;\n              continue;\n            }\n            codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n          } else if (leadSurrogate) {\n            if ((units -= 3) > -1)\n              bytes.push(239, 191, 189);\n          }\n          leadSurrogate = null;\n          if (codePoint < 128) {\n            if ((units -= 1) < 0)\n              break;\n            bytes.push(codePoint);\n          } else if (codePoint < 2048) {\n            if ((units -= 2) < 0)\n              break;\n            bytes.push(\n              codePoint >> 6 | 192,\n              codePoint & 63 | 128\n            );\n          } else if (codePoint < 65536) {\n            if ((units -= 3) < 0)\n              break;\n            bytes.push(\n              codePoint >> 12 | 224,\n              codePoint >> 6 & 63 | 128,\n              codePoint & 63 | 128\n            );\n          } else if (codePoint < 1114112) {\n            if ((units -= 4) < 0)\n              break;\n            bytes.push(\n              codePoint >> 18 | 240,\n              codePoint >> 12 & 63 | 128,\n              codePoint >> 6 & 63 | 128,\n              codePoint & 63 | 128\n            );\n          } else {\n            throw new Error(\"Invalid code point\");\n          }\n        }\n        return bytes;\n      }\n      function asciiToBytes(str) {\n        const byteArray = [];\n        for (let i = 0; i < str.length; ++i) {\n          byteArray.push(str.charCodeAt(i) & 255);\n        }\n        return byteArray;\n      }\n      function utf16leToBytes(str, units) {\n        let c, hi, lo;\n        const byteArray = [];\n        for (let i = 0; i < str.length; ++i) {\n          if ((units -= 2) < 0)\n            break;\n          c = str.charCodeAt(i);\n          hi = c >> 8;\n          lo = c % 256;\n          byteArray.push(lo);\n          byteArray.push(hi);\n        }\n        return byteArray;\n      }\n      function base64ToBytes(str) {\n        return base64.toByteArray(base64clean(str));\n      }\n      function blitBuffer(src, dst, offset, length) {\n        let i;\n        for (i = 0; i < length; ++i) {\n          if (i + offset >= dst.length || i >= src.length)\n            break;\n          dst[i + offset] = src[i];\n        }\n        return i;\n      }\n      function isInstance(obj, type) {\n        return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n      }\n      function numberIsNaN(obj) {\n        return obj !== obj;\n      }\n      var hexSliceLookupTable = function() {\n        const alphabet = \"0123456789abcdef\";\n        const table = new Array(256);\n        for (let i = 0; i < 16; ++i) {\n          const i16 = i * 16;\n          for (let j = 0; j < 16; ++j) {\n            table[i16 + j] = alphabet[i] + alphabet[j];\n          }\n        }\n        return table;\n      }();\n      function defineBigIntMethod(fn) {\n        return typeof BigInt === \"undefined\" ? BufferBigIntNotDefined : fn;\n      }\n      function BufferBigIntNotDefined() {\n        throw new Error(\"BigInt not supported\");\n      }\n    }\n  });\n\n  // node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js\n  var require_browser = __commonJS({\n    \"node_modules/.pnpm/process@0.11.10/node_modules/process/browser.js\"(exports, module) {\n      init_dist();\n      var process = module.exports = {};\n      var cachedSetTimeout;\n      var cachedClearTimeout;\n      function defaultSetTimout() {\n        throw new Error(\"setTimeout has not been defined\");\n      }\n      function defaultClearTimeout() {\n        throw new Error(\"clearTimeout has not been defined\");\n      }\n      (function() {\n        try {\n          if (typeof setTimeout === \"function\") {\n            cachedSetTimeout = setTimeout;\n          } else {\n            cachedSetTimeout = defaultSetTimout;\n          }\n        } catch (e) {\n          cachedSetTimeout = defaultSetTimout;\n        }\n        try {\n          if (typeof clearTimeout === \"function\") {\n            cachedClearTimeout = clearTimeout;\n          } else {\n            cachedClearTimeout = defaultClearTimeout;\n          }\n        } catch (e) {\n          cachedClearTimeout = defaultClearTimeout;\n        }\n      })();\n      function runTimeout(fun) {\n        if (cachedSetTimeout === setTimeout) {\n          return setTimeout(fun, 0);\n        }\n        if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n          cachedSetTimeout = setTimeout;\n          return setTimeout(fun, 0);\n        }\n        try {\n          return cachedSetTimeout(fun, 0);\n        } catch (e) {\n          try {\n            return cachedSetTimeout.call(null, fun, 0);\n          } catch (e2) {\n            return cachedSetTimeout.call(this, fun, 0);\n          }\n        }\n      }\n      function runClearTimeout(marker) {\n        if (cachedClearTimeout === clearTimeout) {\n          return clearTimeout(marker);\n        }\n        if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n          cachedClearTimeout = clearTimeout;\n          return clearTimeout(marker);\n        }\n        try {\n          return cachedClearTimeout(marker);\n        } catch (e) {\n          try {\n            return cachedClearTimeout.call(null, marker);\n          } catch (e2) {\n            return cachedClearTimeout.call(this, marker);\n          }\n        }\n      }\n      var queue = [];\n      var draining = false;\n      var currentQueue;\n      var queueIndex = -1;\n      function cleanUpNextTick() {\n        if (!draining || !currentQueue) {\n          return;\n        }\n        draining = false;\n        if (currentQueue.length) {\n          queue = currentQueue.concat(queue);\n        } else {\n          queueIndex = -1;\n        }\n        if (queue.length) {\n          drainQueue();\n        }\n      }\n      function drainQueue() {\n        if (draining) {\n          return;\n        }\n        var timeout = runTimeout(cleanUpNextTick);\n        draining = true;\n        var len = queue.length;\n        while (len) {\n          currentQueue = queue;\n          queue = [];\n          while (++queueIndex < len) {\n            if (currentQueue) {\n              currentQueue[queueIndex].run();\n            }\n          }\n          queueIndex = -1;\n          len = queue.length;\n        }\n        currentQueue = null;\n        draining = false;\n        runClearTimeout(timeout);\n      }\n      process.nextTick = function(fun) {\n        var args = new Array(arguments.length - 1);\n        if (arguments.length > 1) {\n          for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n          }\n        }\n        queue.push(new Item(fun, args));\n        if (queue.length === 1 && !draining) {\n          runTimeout(drainQueue);\n        }\n      };\n      function Item(fun, array) {\n        this.fun = fun;\n        this.array = array;\n      }\n      Item.prototype.run = function() {\n        this.fun.apply(null, this.array);\n      };\n      process.title = \"browser\";\n      process.browser = true;\n      process.env = {};\n      process.argv = [];\n      process.version = \"\";\n      process.versions = {};\n      function noop() {\n      }\n      process.on = noop;\n      process.addListener = noop;\n      process.once = noop;\n      process.off = noop;\n      process.removeListener = noop;\n      process.removeAllListeners = noop;\n      process.emit = noop;\n      process.prependListener = noop;\n      process.prependOnceListener = noop;\n      process.listeners = function(name) {\n        return [];\n      };\n      process.binding = function(name) {\n        throw new Error(\"process.binding is not supported\");\n      };\n      process.cwd = function() {\n        return \"/\";\n      };\n      process.chdir = function(dir) {\n        throw new Error(\"process.chdir is not supported\");\n      };\n      process.umask = function() {\n        return 0;\n      };\n    }\n  });\n\n  // shims/dist/index.js\n  var import_buffer_polyfill, import_process, o;\n  var init_dist = __esm({\n    \"shims/dist/index.js\"() {\n      \"use strict\";\n      import_buffer_polyfill = __toESM(require_buffer(), 1);\n      import_process = __toESM(require_browser(), 1);\n      o = globalThis || void 0 || self;\n    }\n  });\n\n  // shims/banner/index.cjs\n  var require_banner = __commonJS({\n    \"shims/banner/index.cjs\"() {\n      init_dist();\n      globalThis.Buffer = globalThis.Buffer || import_buffer_polyfill.Buffer;\n      globalThis.global = globalThis.global || o;\n      globalThis.process = globalThis.process || import_process.default;\n    }\n  });\n  require_banner();\n})();\n/*! Bundled license information:\n\nieee754/index.js:\n  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)\n\nbuffer/index.js:\n  (*!\n   * The buffer module from node.js, for the browser.\n   *\n   * @author   Feross Aboukhadijeh <https://feross.org>\n   * @license  MIT\n   *)\n*/\n\nimport __vite__cjsImport0_react_jsxDevRuntime from \"/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=c161d0bf\"; const jsxDEV = __vite__cjsImport0_react_jsxDevRuntime[\"jsxDEV\"];\nimport RefreshRuntime from \"/@react-refresh\";\nconst inWebWorker = typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope;\nlet prevRefreshReg;\nlet prevRefreshSig;\nif (import.meta.hot && !inWebWorker) {\n  if (!window.__vite_plugin_react_preamble_installed__) {\n    throw new Error(\"@vitejs/plugin-react can't detect preamble. Something is wrong. See https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201\");\n  }\n  prevRefreshReg = window.$RefreshReg$;\n  prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    RefreshRuntime.register(type, \"/app/src/components/Settings.jsx \" + id);\n  };\n  window.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(), _s2 = $RefreshSig$();\nimport __vite__cjsImport3_react from \"/node_modules/.vite/deps/react.js?v=c161d0bf\"; const React = __vite__cjsImport3_react.__esModule ? __vite__cjsImport3_react.default : __vite__cjsImport3_react; const useEffect = __vite__cjsImport3_react[\"useEffect\"]; const useState = __vite__cjsImport3_react[\"useState\"];\nimport { useLocation } from \"/node_modules/.vite/deps/react-router-dom.js?v=a66dbd78\";\nimport { Alert, Button } from \"/node_modules/.vite/deps/react-bootstrap.js?v=ea0b40e7\";\nimport { Sliders, BookOpen } from \"/node_modules/.vite/deps/react-feather.js?v=ad213e26\";\nimport {\n  SIDEBAR_POSITION,\n  SIDEBAR_BEHAVIOR,\n  LAYOUT,\n  THEME\n} from \"/src/constants.js\";\nimport useOuterClick from \"/src/hooks/useOuterClick.js\";\nimport { useTheme } from \"/src/hooks/useTheme.js\";\nimport useSidebar from \"/src/hooks/useSidebar.js\";\nimport useLayout from \"/src/hooks/useLayout.js\";\nconst themeOptions = [\n  {\n    name: \"Default\",\n    value: THEME.DEFAULT\n  },\n  {\n    name: \"Colored\",\n    value: THEME.COLORED\n  },\n  {\n    name: \"Dark\",\n    value: THEME.DARK\n  },\n  {\n    name: \"Light\",\n    value: THEME.LIGHT\n  }\n];\nconst sidebarPositionOptions = [\n  {\n    name: \"Left\",\n    value: SIDEBAR_POSITION.LEFT\n  },\n  {\n    name: \"Right\",\n    value: SIDEBAR_POSITION.RIGHT\n  }\n];\nconst sidebarBehaviorOptions = [\n  {\n    name: \"Sticky\",\n    value: SIDEBAR_BEHAVIOR.STICKY\n  },\n  {\n    name: \"Fixed\",\n    value: SIDEBAR_BEHAVIOR.FIXED\n  },\n  {\n    name: \"Compact\",\n    value: SIDEBAR_BEHAVIOR.COMPACT\n  }\n];\nconst layoutOptions = [\n  {\n    name: \"Fluid\",\n    value: LAYOUT.FLUID\n  },\n  {\n    name: \"Boxed\",\n    value: LAYOUT.BOXED\n  }\n];\nfunction useQuery() {\n  _s();\n  return new URLSearchParams(useLocation().search);\n}\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function() {\n  return [useLocation];\n});\nconst Settings = () => {\n  _s2();\n  const query = useQuery();\n  const [isOpen, setIsOpen] = useState(false);\n  const { theme, setTheme } = useTheme();\n  const { position, setPosition, behavior, setBehavior } = useSidebar();\n  const { layout, setLayout } = useLayout();\n  const innerRef = useOuterClick(() => {\n    setIsOpen(false);\n  });\n  const setSettingByQueryParam = (name, set) => {\n    const value = query.get(name);\n    if (value) {\n      set(value);\n    }\n  };\n  useEffect(() => {\n    setSettingByQueryParam(\"theme\", setTheme);\n    setSettingByQueryParam(\"sidebarPosition\", setPosition);\n    setSettingByQueryParam(\"sidebarBehavior\", setBehavior);\n    setSettingByQueryParam(\"layout\", setLayout);\n  }, []);\n  return /* @__PURE__ */ jsxDEV(\n    \"div\",\n    {\n      ref: innerRef,\n      className: `settings js-settings ${isOpen ? \"open\" : \"\"}`,\n      children: [\n        /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-toggle\", children: [\n          /* @__PURE__ */ jsxDEV(\n            \"div\",\n            {\n              className: \"settings-toggle-option settings-toggle-option-text js-settings-toggle\",\n              title: \"Theme Builder\",\n              onClick: () => setIsOpen(true),\n              children: [\n                /* @__PURE__ */ jsxDEV(Sliders, { className: \"feather align-middle\" }, void 0, false, {\n                  fileName: \"/app/src/components/Settings.jsx\",\n                  lineNumber: 120,\n                  columnNumber: 11\n                }, this),\n                \" Builder\"\n              ]\n            },\n            void 0,\n            true,\n            {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 115,\n              columnNumber: 9\n            },\n            this\n          ),\n          /* @__PURE__ */ jsxDEV(\n            \"a\",\n            {\n              className: \"settings-toggle-option\",\n              title: \"Documentation\",\n              href: \"/docs/introduction\",\n              target: \"_blank\",\n              children: /* @__PURE__ */ jsxDEV(BookOpen, { className: \"feather align-middle\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 128,\n                columnNumber: 11\n              }, this)\n            },\n            void 0,\n            false,\n            {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 122,\n              columnNumber: 9\n            },\n            this\n          )\n        ] }, void 0, true, {\n          fileName: \"/app/src/components/Settings.jsx\",\n          lineNumber: 114,\n          columnNumber: 7\n        }, this),\n        /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-panel\", children: /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-content\", children: [\n          /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-title d-flex align-items-center\", children: [\n            /* @__PURE__ */ jsxDEV(\n              \"button\",\n              {\n                type: \"button\",\n                className: \"btn-close float-right js-settings-toggle\",\n                \"aria-label\": \"Close\",\n                onClick: () => setIsOpen(false)\n              },\n              void 0,\n              false,\n              {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 134,\n                columnNumber: 13\n              },\n              this\n            ),\n            /* @__PURE__ */ jsxDEV(\"h4\", { className: \"mb-0 ms-2 d-inline-block\", children: \"Theme Builder\" }, void 0, false, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 140,\n              columnNumber: 13\n            }, this)\n          ] }, void 0, true, {\n            fileName: \"/app/src/components/Settings.jsx\",\n            lineNumber: 133,\n            columnNumber: 11\n          }, this),\n          /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-body\", children: [\n            /* @__PURE__ */ jsxDEV(Alert, { variant: \"primary\", children: /* @__PURE__ */ jsxDEV(\"div\", { className: \"alert-message\", children: [\n              /* @__PURE__ */ jsxDEV(\"strong\", { children: \"Hey there!\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 145,\n                columnNumber: 17\n              }, this),\n              \" Set your own customized style below. Choose the ones that best fits your needs.\"\n            ] }, void 0, true, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 144,\n              columnNumber: 15\n            }, this) }, void 0, false, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 143,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Color scheme\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 151,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block text-muted mb-2\", children: \"The perfect color mode for your app.\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 152,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"div\", { className: \"row g-0 text-center mx-n1 mb-2\", children: themeOptions.map(\n                ({ name, value }) => /* @__PURE__ */ jsxDEV(\"div\", { className: \"col-6\", children: [\n                  /* @__PURE__ */ jsxDEV(\"label\", { className: \"mx-1 d-block mb-1\", children: [\n                    /* @__PURE__ */ jsxDEV(\n                      \"input\",\n                      {\n                        className: \"settings-scheme-label\",\n                        type: \"radio\",\n                        name: \"theme\",\n                        value,\n                        checked: theme === value,\n                        onChange: () => setTheme(value)\n                      },\n                      void 0,\n                      false,\n                      {\n                        fileName: \"/app/src/components/Settings.jsx\",\n                        lineNumber: 159,\n                        columnNumber: 23\n                      },\n                      this\n                    ),\n                    /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-scheme\", children: /* @__PURE__ */ jsxDEV(\n                      \"div\",\n                      {\n                        className: `settings-scheme-theme settings-scheme-theme-${value}`\n                      },\n                      void 0,\n                      false,\n                      {\n                        fileName: \"/app/src/components/Settings.jsx\",\n                        lineNumber: 168,\n                        columnNumber: 25\n                      },\n                      this\n                    ) }, void 0, false, {\n                      fileName: \"/app/src/components/Settings.jsx\",\n                      lineNumber: 167,\n                      columnNumber: 23\n                    }, this)\n                  ] }, void 0, true, {\n                    fileName: \"/app/src/components/Settings.jsx\",\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, this),\n                  name\n                ] }, value, true, {\n                  fileName: \"/app/src/components/Settings.jsx\",\n                  lineNumber: 157,\n                  columnNumber: 17\n                }, this)\n              ) }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 155,\n                columnNumber: 15\n              }, this)\n            ] }, void 0, true, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 150,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 178,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Sidebar position\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 180,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block text-muted mb-2\", children: \"Toggle the position of the sidebar.\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 183,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"div\", { children: sidebarPositionOptions.map(\n                ({ name, value }) => /* @__PURE__ */ jsxDEV(\"label\", { className: \"me-1\", children: [\n                  /* @__PURE__ */ jsxDEV(\n                    \"input\",\n                    {\n                      className: \"settings-button-label\",\n                      type: \"radio\",\n                      name: \"sidebarPosition\",\n                      value,\n                      checked: position === value,\n                      onChange: () => setPosition(value)\n                    },\n                    void 0,\n                    false,\n                    {\n                      fileName: \"/app/src/components/Settings.jsx\",\n                      lineNumber: 189,\n                      columnNumber: 21\n                    },\n                    this\n                  ),\n                  /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-button\", children: name }, void 0, false, {\n                    fileName: \"/app/src/components/Settings.jsx\",\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, this)\n                ] }, value, true, {\n                  fileName: \"/app/src/components/Settings.jsx\",\n                  lineNumber: 188,\n                  columnNumber: 17\n                }, this)\n              ) }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 186,\n                columnNumber: 15\n              }, this)\n            ] }, void 0, true, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 179,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 202,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Sidebar behavior\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 204,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block text-muted mb-2\", children: \"Change the behavior of the sidebar.\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 207,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"div\", { children: sidebarBehaviorOptions.map(\n                ({ name, value }) => /* @__PURE__ */ jsxDEV(\"label\", { className: \"me-1\", children: [\n                  /* @__PURE__ */ jsxDEV(\n                    \"input\",\n                    {\n                      className: \"settings-button-label\",\n                      type: \"radio\",\n                      name: \"sidebarBehavior\",\n                      value,\n                      checked: behavior === value,\n                      onChange: () => setBehavior(value)\n                    },\n                    void 0,\n                    false,\n                    {\n                      fileName: \"/app/src/components/Settings.jsx\",\n                      lineNumber: 213,\n                      columnNumber: 21\n                    },\n                    this\n                  ),\n                  /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-button\", children: name }, void 0, false, {\n                    fileName: \"/app/src/components/Settings.jsx\",\n                    lineNumber: 221,\n                    columnNumber: 21\n                  }, this)\n                ] }, value, true, {\n                  fileName: \"/app/src/components/Settings.jsx\",\n                  lineNumber: 212,\n                  columnNumber: 17\n                }, this)\n              ) }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 210,\n                columnNumber: 15\n              }, this)\n            ] }, void 0, true, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 203,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 226,\n              columnNumber: 13\n            }, this),\n            /* @__PURE__ */ jsxDEV(\"div\", { className: \"mb-3\", children: [\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block font-size-lg fw-bold\", children: \"Layout\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 228,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"span\", { className: \"d-block text-muted mb-2\", children: \"Toggle container layout system.\" }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 229,\n                columnNumber: 15\n              }, this),\n              /* @__PURE__ */ jsxDEV(\"div\", { children: layoutOptions.map(\n                ({ name, value }) => /* @__PURE__ */ jsxDEV(\"label\", { className: \"me-1\", children: [\n                  /* @__PURE__ */ jsxDEV(\n                    \"input\",\n                    {\n                      className: \"settings-button-label\",\n                      type: \"radio\",\n                      name: \"layout\",\n                      value,\n                      checked: layout === value,\n                      onChange: () => setLayout(value)\n                    },\n                    void 0,\n                    false,\n                    {\n                      fileName: \"/app/src/components/Settings.jsx\",\n                      lineNumber: 235,\n                      columnNumber: 21\n                    },\n                    this\n                  ),\n                  /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-button\", children: name }, void 0, false, {\n                    fileName: \"/app/src/components/Settings.jsx\",\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this)\n                ] }, value, true, {\n                  fileName: \"/app/src/components/Settings.jsx\",\n                  lineNumber: 234,\n                  columnNumber: 17\n                }, this)\n              ) }, void 0, false, {\n                fileName: \"/app/src/components/Settings.jsx\",\n                lineNumber: 232,\n                columnNumber: 15\n              }, this)\n            ] }, void 0, true, {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 227,\n              columnNumber: 13\n            }, this)\n          ] }, void 0, true, {\n            fileName: \"/app/src/components/Settings.jsx\",\n            lineNumber: 142,\n            columnNumber: 11\n          }, this),\n          /* @__PURE__ */ jsxDEV(\"div\", { className: \"settings-footer\", children: /* @__PURE__ */ jsxDEV(\"div\", { className: \"d-grid\", children: /* @__PURE__ */ jsxDEV(\n            Button,\n            {\n              as: \"a\",\n              rel: \"noreferrer\",\n              href: \"https://themes.getbootstrap.com/product/appstack-react-admin-dashboard-template/\",\n              target: \"_blank\",\n              variant: \"primary\",\n              size: \"lg\",\n              children: \"Purchase\"\n            },\n            void 0,\n            false,\n            {\n              fileName: \"/app/src/components/Settings.jsx\",\n              lineNumber: 251,\n              columnNumber: 15\n            },\n            this\n          ) }, void 0, false, {\n            fileName: \"/app/src/components/Settings.jsx\",\n            lineNumber: 250,\n            columnNumber: 13\n          }, this) }, void 0, false, {\n            fileName: \"/app/src/components/Settings.jsx\",\n            lineNumber: 249,\n            columnNumber: 11\n          }, this)\n        ] }, void 0, true, {\n          fileName: \"/app/src/components/Settings.jsx\",\n          lineNumber: 132,\n          columnNumber: 9\n        }, this) }, void 0, false, {\n          fileName: \"/app/src/components/Settings.jsx\",\n          lineNumber: 131,\n          columnNumber: 7\n        }, this)\n      ]\n    },\n    void 0,\n    true,\n    {\n      fileName: \"/app/src/components/Settings.jsx\",\n      lineNumber: 110,\n      columnNumber: 5\n    },\n    this\n  );\n};\n_s2(Settings, \"IstO3p/nlrsj2bKACns03HdrBYg=\", false, function() {\n  return [useQuery, useTheme, useSidebar, useLayout, useOuterClick];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");\nif (import.meta.hot && !inWebWorker) {\n  window.$RefreshReg$ = prevRefreshReg;\n  window.$RefreshSig$ = prevRefreshSig;\n  RefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n    RefreshRuntime.registerExportsForReactRefresh(\"/app/src/components/Settings.jsx\", currentExports);\n    import.meta.hot.accept((nextExports) => {\n      if (!nextExports)\n        return;\n      const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);\n      if (invalidateMessage)\n        import.meta.hot.invalidate(invalidateMessage);\n    });\n  });\n}\n",
      "start": 1703474741529,
      "end": 1703474741531,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
