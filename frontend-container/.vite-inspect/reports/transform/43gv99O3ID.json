{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/asciidoc.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = asciidoc\nasciidoc.displayName = 'asciidoc'\nasciidoc.aliases = ['adoc']\nfunction asciidoc(Prism) {\n  ;(function (Prism) {\n    var attributes = {\n      pattern:\n        /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n      lookbehind: true,\n      inside: {\n        quoted: {\n          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          inside: {\n            punctuation: /^[$`]|[$`]$/\n          }\n        },\n        interpreted: {\n          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n          inside: {\n            punctuation: /^'|'$/ // See rest below\n          }\n        },\n        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        variable: /\\w+(?==)/,\n        punctuation: /^\\[|\\]$|,/,\n        operator: /=/,\n        // The negative look-ahead prevents blank matches\n        'attr-value': /(?!^\\s+$).+/\n      }\n    }\n    var asciidoc = (Prism.languages.asciidoc = {\n      'comment-block': {\n        pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n        alias: 'comment'\n      },\n      table: {\n        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n        inside: {\n          specifiers: {\n            pattern:\n              /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\n            alias: 'attr-value'\n          },\n          punctuation: {\n            pattern: /(^|[^\\\\])[|!]=*/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      'passthrough-block': {\n        pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^\\++|\\++$/ // See rest below\n        }\n      },\n      // Literal blocks and listing blocks\n      'literal-block': {\n        pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/ // See rest below\n        }\n      },\n      // Sidebar blocks, quote blocks, example blocks and open blocks\n      'other-block': {\n        pattern:\n          /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/ // See rest below\n        }\n      },\n      // list-punctuation and list-label must appear before indented-block\n      'list-punctuation': {\n        pattern:\n          /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'list-label': {\n        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'indented-block': {\n        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n        lookbehind: true\n      },\n      comment: /^\\/\\/.*/m,\n      title: {\n        pattern:\n          /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n        alias: 'important',\n        inside: {\n          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/ // See rest below\n        }\n      },\n      'attribute-entry': {\n        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n        alias: 'tag'\n      },\n      attributes: attributes,\n      hr: {\n        pattern: /^'{3,}$/m,\n        alias: 'punctuation'\n      },\n      'page-break': {\n        pattern: /^<{3,}$/m,\n        alias: 'punctuation'\n      },\n      admonition: {\n        pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,\n        alias: 'keyword'\n      },\n      callout: [\n        {\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }\n      ],\n      macro: {\n        pattern:\n          /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n        inside: {\n          function: /^[a-z\\d-]+(?=:)/,\n          punctuation: /^::?/,\n          attributes: {\n            pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n            inside: attributes.inside\n          }\n        }\n      },\n      inline: {\n        /*\nThe initial look-behind prevents the highlighting of escaped quoted text.\nQuoted text can be multi-line but cannot span an empty line.\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\nFirst, we handle the constrained quotes.\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\nThen we handle the unconstrained quotes.\nThose do not have the restrictions of the constrained quotes.\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n*/\n        pattern:\n          /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n        lookbehind: true,\n        inside: {\n          attributes: attributes,\n          url: {\n            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n            inside: {\n              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n            }\n          },\n          'attribute-ref': {\n            pattern: /^\\{.+\\}$/,\n            inside: {\n              variable: {\n                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                lookbehind: true\n              },\n              operator: /^[=?!#%@$]|!(?=[:}])/,\n              punctuation: /^\\{|\\}$|::?/\n            }\n          },\n          italic: {\n            pattern: /^(['_])[\\s\\S]+\\1$/,\n            inside: {\n              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n            }\n          },\n          bold: {\n            pattern: /^\\*[\\s\\S]+\\*$/,\n            inside: {\n              punctuation: /^\\*\\*?|\\*\\*?$/\n            }\n          },\n          punctuation:\n            /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n        }\n      },\n      replacement: {\n        pattern: /\\((?:C|R|TM)\\)/,\n        alias: 'builtin'\n      },\n      entity: /&#?[\\da-z]{1,8};/i,\n      'line-continuation': {\n        pattern: /(^| )\\+$/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    }) // Allow some nesting. There is no recursion though, so cloning should not be needed.\n    function copyFromAsciiDoc(keys) {\n      keys = keys.split(' ')\n      var o = {}\n      for (var i = 0, l = keys.length; i < l; i++) {\n        o[keys[i]] = asciidoc[keys[i]]\n      }\n      return o\n    }\n    attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    )\n    asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro')\n    asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout')\n    asciidoc['table'].inside.rest = copyFromAsciiDoc(\n      'comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation'\n    )\n    asciidoc['other-block'].inside.rest = copyFromAsciiDoc(\n      'table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation'\n    )\n    asciidoc['title'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    ) // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n      }\n    })\n    Prism.languages.adoc = Prism.languages.asciidoc\n  })(Prism)\n}\n",
      "start": 1702937444787,
      "end": 1702937444834,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444834,
      "end": 1702937444834,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444834,
      "end": 1702937444834,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444834,
      "end": 1702937444834,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444834,
      "end": 1702937444834,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444834,
      "end": 1702937444834,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444834,
      "end": 1702937444834,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444834,
      "end": 1702937444834,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444834,
      "end": 1702937444834,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444834,
      "end": 1702937444834,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444834,
      "end": 1702937444834,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar asciidoc_1;\nvar hasRequiredAsciidoc;\n\nfunction requireAsciidoc () {\n\tif (hasRequiredAsciidoc) return asciidoc_1;\n\thasRequiredAsciidoc = 1;\n\t'use strict'\n\n\tasciidoc_1 = asciidoc\n\tasciidoc.displayName = 'asciidoc'\n\tasciidoc.aliases = ['adoc']\n\tfunction asciidoc(Prism) {\n\t  ;(function (Prism) {\n\t    var attributes = {\n\t      pattern:\n\t        /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n\t      lookbehind: true,\n\t      inside: {\n\t        quoted: {\n\t          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n\t          inside: {\n\t            punctuation: /^[$`]|[$`]$/\n\t          }\n\t        },\n\t        interpreted: {\n\t          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n\t          inside: {\n\t            punctuation: /^'|'$/ // See rest below\n\t          }\n\t        },\n\t        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t        variable: /\\w+(?==)/,\n\t        punctuation: /^\\[|\\]$|,/,\n\t        operator: /=/,\n\t        // The negative look-ahead prevents blank matches\n\t        'attr-value': /(?!^\\s+$).+/\n\t      }\n\t    }\n\t    var asciidoc = (Prism.languages.asciidoc = {\n\t      'comment-block': {\n\t        pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n\t        alias: 'comment'\n\t      },\n\t      table: {\n\t        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n\t        inside: {\n\t          specifiers: {\n\t            pattern:\n\t              /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\n\t            alias: 'attr-value'\n\t          },\n\t          punctuation: {\n\t            pattern: /(^|[^\\\\])[|!]=*/,\n\t            lookbehind: true\n\t          } // See rest below\n\t        }\n\t      },\n\t      'passthrough-block': {\n\t        pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t        inside: {\n\t          punctuation: /^\\++|\\++$/ // See rest below\n\t        }\n\t      },\n\t      // Literal blocks and listing blocks\n\t      'literal-block': {\n\t        pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t        inside: {\n\t          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/ // See rest below\n\t        }\n\t      },\n\t      // Sidebar blocks, quote blocks, example blocks and open blocks\n\t      'other-block': {\n\t        pattern:\n\t          /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n\t        inside: {\n\t          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/ // See rest below\n\t        }\n\t      },\n\t      // list-punctuation and list-label must appear before indented-block\n\t      'list-punctuation': {\n\t        pattern:\n\t          /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n\t        lookbehind: true,\n\t        alias: 'punctuation'\n\t      },\n\t      'list-label': {\n\t        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n\t        lookbehind: true,\n\t        alias: 'symbol'\n\t      },\n\t      'indented-block': {\n\t        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n\t        lookbehind: true\n\t      },\n\t      comment: /^\\/\\/.*/m,\n\t      title: {\n\t        pattern:\n\t          /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n\t        alias: 'important',\n\t        inside: {\n\t          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/ // See rest below\n\t        }\n\t      },\n\t      'attribute-entry': {\n\t        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n\t        alias: 'tag'\n\t      },\n\t      attributes: attributes,\n\t      hr: {\n\t        pattern: /^'{3,}$/m,\n\t        alias: 'punctuation'\n\t      },\n\t      'page-break': {\n\t        pattern: /^<{3,}$/m,\n\t        alias: 'punctuation'\n\t      },\n\t      admonition: {\n\t        pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,\n\t        alias: 'keyword'\n\t      },\n\t      callout: [\n\t        {\n\t          pattern: /(^[ \\t]*)<?\\d*>/m,\n\t          lookbehind: true,\n\t          alias: 'symbol'\n\t        },\n\t        {\n\t          pattern: /<\\d+>/,\n\t          alias: 'symbol'\n\t        }\n\t      ],\n\t      macro: {\n\t        pattern:\n\t          /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n\t        inside: {\n\t          function: /^[a-z\\d-]+(?=:)/,\n\t          punctuation: /^::?/,\n\t          attributes: {\n\t            pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n\t            inside: attributes.inside\n\t          }\n\t        }\n\t      },\n\t      inline: {\n\t        /*\n\tThe initial look-behind prevents the highlighting of escaped quoted text.\n\tQuoted text can be multi-line but cannot span an empty line.\n\tAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\n\tFirst, we handle the constrained quotes.\n\tThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\n\tThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\n\tThen we handle the unconstrained quotes.\n\tThose do not have the restrictions of the constrained quotes.\n\tThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n\t*/\n\t        pattern:\n\t          /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n\t        lookbehind: true,\n\t        inside: {\n\t          attributes: attributes,\n\t          url: {\n\t            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n\t            inside: {\n\t              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n\t            }\n\t          },\n\t          'attribute-ref': {\n\t            pattern: /^\\{.+\\}$/,\n\t            inside: {\n\t              variable: {\n\t                pattern: /(^\\{)[a-z\\d,+_-]+/,\n\t                lookbehind: true\n\t              },\n\t              operator: /^[=?!#%@$]|!(?=[:}])/,\n\t              punctuation: /^\\{|\\}$|::?/\n\t            }\n\t          },\n\t          italic: {\n\t            pattern: /^(['_])[\\s\\S]+\\1$/,\n\t            inside: {\n\t              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n\t            }\n\t          },\n\t          bold: {\n\t            pattern: /^\\*[\\s\\S]+\\*$/,\n\t            inside: {\n\t              punctuation: /^\\*\\*?|\\*\\*?$/\n\t            }\n\t          },\n\t          punctuation:\n\t            /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n\t        }\n\t      },\n\t      replacement: {\n\t        pattern: /\\((?:C|R|TM)\\)/,\n\t        alias: 'builtin'\n\t      },\n\t      entity: /&#?[\\da-z]{1,8};/i,\n\t      'line-continuation': {\n\t        pattern: /(^| )\\+$/m,\n\t        lookbehind: true,\n\t        alias: 'punctuation'\n\t      }\n\t    }) // Allow some nesting. There is no recursion though, so cloning should not be needed.\n\t    function copyFromAsciiDoc(keys) {\n\t      keys = keys.split(' ')\n\t      var o = {}\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        o[keys[i]] = asciidoc[keys[i]]\n\t      }\n\t      return o\n\t    }\n\t    attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc(\n\t      'macro inline replacement entity'\n\t    )\n\t    asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro')\n\t    asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout')\n\t    asciidoc['table'].inside.rest = copyFromAsciiDoc(\n\t      'comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation'\n\t    )\n\t    asciidoc['other-block'].inside.rest = copyFromAsciiDoc(\n\t      'table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation'\n\t    )\n\t    asciidoc['title'].inside.rest = copyFromAsciiDoc(\n\t      'macro inline replacement entity'\n\t    ) // Plugin to make entity title show the real entity, idea by Roman Komarov\n\t    Prism.hooks.add('wrap', function (env) {\n\t      if (env.type === 'entity') {\n\t        env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n\t      }\n\t    })\n\t    Prism.languages.adoc = Prism.languages.asciidoc\n\t  })(Prism)\n\t}\n\treturn asciidoc_1;\n}\n\nexport { requireAsciidoc as __require };",
      "start": 1702937444834,
      "end": 1702937444835,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    }
  ]
}
