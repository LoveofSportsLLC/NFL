{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/useOverlayOffset.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use client\";\n\nimport { useMemo, useRef } from 'react';\nimport hasClass from 'dom-helpers/hasClass';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Popover from './Popover';\nimport Tooltip from './Tooltip';\n\n// This is meant for internal use.\n// This applies a custom offset to the overlay if it's a popover or tooltip.\nexport default function useOverlayOffset(customOffset) {\n  const overlayRef = useRef(null);\n  const popoverClass = useBootstrapPrefix(undefined, 'popover');\n  const tooltipClass = useBootstrapPrefix(undefined, 'tooltip');\n  const offset = useMemo(() => ({\n    name: 'offset',\n    options: {\n      offset: () => {\n        if (customOffset) {\n          return customOffset;\n        }\n        if (overlayRef.current) {\n          if (hasClass(overlayRef.current, popoverClass)) {\n            return Popover.POPPER_OFFSET;\n          }\n          if (hasClass(overlayRef.current, tooltipClass)) {\n            return Tooltip.TOOLTIP_OFFSET;\n          }\n        }\n        return [0, 0];\n      }\n    }\n  }), [customOffset, popoverClass, tooltipClass]);\n  return [overlayRef, [offset]];\n}",
      "start": 1702937442091,
      "end": 1702937442102,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    }
  ]
}
