{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/@restart/ui/esm/Overlay.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { useState } from 'react';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\nimport { renderTransition } from './ImperativeTransition';\n/**\n * Built on top of `Popper.js`, the overlay component is\n * great for custom tooltip overlays.\n */\nconst Overlay = /*#__PURE__*/React.forwardRef((props, outerRef) => {\n  const {\n    flip,\n    offset,\n    placement,\n    containerPadding,\n    popperConfig = {},\n    transition: Transition,\n    runTransition\n  } = props;\n  const [rootElement, attachRef] = useCallbackRef();\n  const [arrowElement, attachArrowRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(attachRef, outerRef);\n  const container = useWaitForDOMRef(props.container);\n  const target = useWaitForDOMRef(props.target);\n  const [exited, setExited] = useState(!props.show);\n  const popper = usePopper(target, rootElement, mergeOptionsWithPopperConfig({\n    placement,\n    enableEvents: !!props.show,\n    containerPadding: containerPadding || 5,\n    flip,\n    offset,\n    arrowElement,\n    popperConfig\n  }));\n\n  // TODO: I think this needs to be in an effect\n  if (props.show && exited) {\n    setExited(false);\n  }\n  const handleHidden = (...args) => {\n    setExited(true);\n    if (props.onExited) {\n      props.onExited(...args);\n    }\n  };\n\n  // Don't un-render the overlay while it's transitioning out.\n  const mountOverlay = props.show || !exited;\n  useRootClose(rootElement, props.onHide, {\n    disabled: !props.rootClose || props.rootCloseDisabled,\n    clickTrigger: props.rootCloseEvent\n  });\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n  const {\n    onExit,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = props;\n  let child = props.children(Object.assign({}, popper.attributes.popper, {\n    style: popper.styles.popper,\n    ref: mergedRef\n  }), {\n    popper,\n    placement,\n    show: !!props.show,\n    arrowProps: Object.assign({}, popper.attributes.arrow, {\n      style: popper.styles.arrow,\n      ref: attachArrowRef\n    })\n  });\n  child = renderTransition(Transition, runTransition, {\n    in: !!props.show,\n    appear: true,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    children: child,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered\n  });\n  return container ? /*#__PURE__*/ReactDOM.createPortal(child, container) : null;\n});\nOverlay.displayName = 'Overlay';\nexport default Overlay;",
      "start": 1702937442090,
      "end": 1702937442101,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937442101,
      "end": 1702937442101,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937442101,
      "end": 1702937442101,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937442101,
      "end": 1702937442101,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937442101,
      "end": 1702937442101,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937442101,
      "end": 1702937442101,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937442101,
      "end": 1702937442101,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937442102,
      "end": 1702937442102,
      "order": "normal"
    }
  ]
}
