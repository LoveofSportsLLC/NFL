{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/@restart/ui/esm/TabPanel.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const _excluded = [\"active\", \"eventKey\", \"mountOnEnter\", \"transition\", \"unmountOnExit\", \"role\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\"],\n  _excluded2 = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n  _excluded3 = [\"as\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTabPanel(_ref) {\n  let {\n      active,\n      eventKey,\n      mountOnEnter,\n      transition,\n      unmountOnExit,\n      role = 'tabpanel',\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const context = useContext(TabContext);\n  if (!context) return [Object.assign({}, props, {\n    role\n  }), {\n    eventKey,\n    isActive: active,\n    mountOnEnter,\n    transition,\n    unmountOnExit,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  }];\n  const {\n      activeKey,\n      getControlledId,\n      getControllerId\n    } = context,\n    rest = _objectWithoutPropertiesLoose(context, _excluded2);\n  const key = makeEventKey(eventKey);\n  return [Object.assign({}, props, {\n    role,\n    id: getControlledId(eventKey),\n    'aria-labelledby': getControllerId(eventKey)\n  }), {\n    eventKey,\n    isActive: active == null && key != null ? makeEventKey(activeKey) === key : active,\n    transition: transition || rest.transition,\n    mountOnEnter: mountOnEnter != null ? mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: unmountOnExit != null ? unmountOnExit : rest.unmountOnExit,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  }];\n}\nconst TabPanel = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(_ref2, ref) => {\n  let {\n      as: Component = 'div'\n    } = _ref2,\n    props = _objectWithoutPropertiesLoose(_ref2, _excluded3);\n  const [tabPanelProps, {\n    isActive,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition = NoopTransition\n  }] = useTabPanel(props);\n  // We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\n  // conflict with the top level one.\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: /*#__PURE__*/_jsx(Transition, {\n        in: isActive,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: onExited,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        children: /*#__PURE__*/_jsx(Component, Object.assign({}, tabPanelProps, {\n          ref: ref,\n          hidden: !isActive,\n          \"aria-hidden\": !isActive\n        }))\n      })\n    })\n  });\n});\nTabPanel.displayName = 'TabPanel';\nexport default TabPanel;",
      "start": 1702937442098,
      "end": 1702937442116,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937442116,
      "end": 1702937442116,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937442116,
      "end": 1702937442116,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937442116,
      "end": 1702937442116,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937442116,
      "end": 1702937442116,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937442116,
      "end": 1702937442116,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937442116,
      "end": 1702937442116,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937442116,
      "end": 1702937442116,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937442116,
      "end": 1702937442116,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937442116,
      "end": 1702937442116,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937442116,
      "end": 1702937442116,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937442116,
      "end": 1702937442117,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937442117,
      "end": 1702937442117,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937442117,
      "end": 1702937442117,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937442117,
      "end": 1702937442117,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937442117,
      "end": 1702937442117,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937442117,
      "end": 1702937442117,
      "order": "normal"
    }
  ]
}
