{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/pages/ui/Offcanvas.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nimport { Card, Col, Container, Row, Offcanvas, Button } from \"react-bootstrap\";\r\n\r\nconst OffcanvasDefault = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title>Offcanvas</Card.Title>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Build hidden sidebars into your project for navigation, shopping\r\n          carts, and more with a few classes and our JavaScript plugin.\r\n        </h6>\r\n      </Card.Header>\r\n      <Card.Body className=\"text-center\">\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n          Toggle offcanvas\r\n        </Button>\r\n\r\n        <Offcanvas show={show} onHide={handleClose}>\r\n          <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body>\r\n            Some text as placeholder. In real life you can have the elements you\r\n            have chosen. Like, text, images, lists, etc.\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst OffcanvasPlacementSingle = ({ name, ...props }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\r\n        {name}\r\n      </Button>\r\n      <Offcanvas show={show} onHide={handleClose} {...props}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          Some text as placeholder. In real life you can have the elements you\r\n          have chosen. Like, text, images, lists, etc.\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n};\r\n\r\nconst OffcanvasPlacement = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Offcanvas placement</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        There’s no default placement for offcanvas components, so you must set\r\n        the <code>placement</code> parameter.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body className=\"text-center\">\r\n      {[\"start\", \"end\", \"top\", \"bottom\"].map((placement, idx) => (\r\n        <OffcanvasPlacementSingle\r\n          key={idx}\r\n          placement={placement}\r\n          name={`Toggle ${placement} offcanvas`}\r\n        />\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst OffcanvasBackdropSingle = ({ name, ...props }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const toggleShow = () => setShow((s) => !s);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={toggleShow} className=\"me-2\">\r\n        {name}\r\n      </Button>\r\n      <Offcanvas show={show} onHide={handleClose} {...props}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          Some text as placeholder. In real life you can have the elements you\r\n          have chosen. Like, text, images, lists, etc.\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n};\r\n\r\nconst options = [\r\n  {\r\n    name: \"Enable backdrop (default)\",\r\n    scroll: false,\r\n    backdrop: true,\r\n  },\r\n  {\r\n    name: \"Disable backdrop\",\r\n    scroll: false,\r\n    backdrop: false,\r\n  },\r\n  {\r\n    name: \"Enable body scrolling\",\r\n    scroll: true,\r\n    backdrop: false,\r\n  },\r\n  {\r\n    name: \"Enable both scrolling & backdrop\",\r\n    scroll: true,\r\n    backdrop: true,\r\n  },\r\n];\r\n\r\nconst OffcanvasBackdrop = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Offcanvas backdrop</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Scrolling the <code>&#x3C;body&#x3E;</code> element is disabled when an\r\n        offcanvas and its backdrop are visible. Use the <code>scroll</code>{\" \"}\r\n        parameter to toggle <code>&#x3C;body&#x3E;</code> scrolling and{\" \"}\r\n        <code>backdrop</code> parameter to toggle the backdrop.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body className=\"text-center\">\r\n      {options.map((props, idx) => (\r\n        <OffcanvasBackdropSingle key={idx} {...props} />\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst OffcanvasComponent = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Offcanvas\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Offcanvas</h1>\r\n\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <OffcanvasDefault />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <OffcanvasPlacement />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <OffcanvasBackdrop />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default OffcanvasComponent;\r\n",
      "start": 1702937436959,
      "end": 1702937440807,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937440807,
      "end": 1702937440807,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937440807,
      "end": 1702937440807,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useState } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Card, Col, Container, Row, Offcanvas, Button } from \"react-bootstrap\";\nconst OffcanvasDefault = () => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return /* @__PURE__ */ jsxs(Card, { children: [\n    /* @__PURE__ */ jsxs(Card.Header, { children: [\n      /* @__PURE__ */ jsx(Card.Title, { children: \"Offcanvas\" }),\n      /* @__PURE__ */ jsx(\"h6\", { className: \"card-subtitle text-muted\", children: \"Build hidden sidebars into your project for navigation, shopping carts, and more with a few classes and our JavaScript plugin.\" })\n    ] }),\n    /* @__PURE__ */ jsxs(Card.Body, { className: \"text-center\", children: [\n      /* @__PURE__ */ jsx(Button, { variant: \"primary\", onClick: handleShow, children: \"Toggle offcanvas\" }),\n      /* @__PURE__ */ jsxs(Offcanvas, { show, onHide: handleClose, children: [\n        /* @__PURE__ */ jsx(Offcanvas.Header, { closeButton: true, children: /* @__PURE__ */ jsx(Offcanvas.Title, { children: \"Offcanvas\" }) }),\n        /* @__PURE__ */ jsx(Offcanvas.Body, { children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\" })\n      ] })\n    ] })\n  ] });\n};\nconst OffcanvasPlacementSingle = ({ name, ...props }) => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsx(Button, { variant: \"primary\", onClick: handleShow, className: \"me-2\", children: name }),\n    /* @__PURE__ */ jsxs(Offcanvas, { show, onHide: handleClose, ...props, children: [\n      /* @__PURE__ */ jsx(Offcanvas.Header, { closeButton: true, children: /* @__PURE__ */ jsx(Offcanvas.Title, { children: \"Offcanvas\" }) }),\n      /* @__PURE__ */ jsx(Offcanvas.Body, { children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\" })\n    ] })\n  ] });\n};\nconst OffcanvasPlacement = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsxs(Card.Header, { children: [\n    /* @__PURE__ */ jsx(Card.Title, { children: \"Offcanvas placement\" }),\n    /* @__PURE__ */ jsxs(\"h6\", { className: \"card-subtitle text-muted\", children: [\n      \"There’s no default placement for offcanvas components, so you must set the \",\n      /* @__PURE__ */ jsx(\"code\", { children: \"placement\" }),\n      \" parameter.\"\n    ] })\n  ] }),\n  /* @__PURE__ */ jsx(Card.Body, { className: \"text-center\", children: [\"start\", \"end\", \"top\", \"bottom\"].map((placement, idx) => /* @__PURE__ */ jsx(\n    OffcanvasPlacementSingle,\n    {\n      placement,\n      name: `Toggle ${placement} offcanvas`\n    },\n    idx\n  )) })\n] });\nconst OffcanvasBackdropSingle = ({ name, ...props }) => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const toggleShow = () => setShow((s) => !s);\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsx(Button, { variant: \"primary\", onClick: toggleShow, className: \"me-2\", children: name }),\n    /* @__PURE__ */ jsxs(Offcanvas, { show, onHide: handleClose, ...props, children: [\n      /* @__PURE__ */ jsx(Offcanvas.Header, { closeButton: true, children: /* @__PURE__ */ jsx(Offcanvas.Title, { children: \"Offcanvas\" }) }),\n      /* @__PURE__ */ jsx(Offcanvas.Body, { children: \"Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.\" })\n    ] })\n  ] });\n};\nconst options = [\n  {\n    name: \"Enable backdrop (default)\",\n    scroll: false,\n    backdrop: true\n  },\n  {\n    name: \"Disable backdrop\",\n    scroll: false,\n    backdrop: false\n  },\n  {\n    name: \"Enable body scrolling\",\n    scroll: true,\n    backdrop: false\n  },\n  {\n    name: \"Enable both scrolling & backdrop\",\n    scroll: true,\n    backdrop: true\n  }\n];\nconst OffcanvasBackdrop = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsxs(Card.Header, { children: [\n    /* @__PURE__ */ jsx(Card.Title, { children: \"Offcanvas backdrop\" }),\n    /* @__PURE__ */ jsxs(\"h6\", { className: \"card-subtitle text-muted\", children: [\n      \"Scrolling the \",\n      /* @__PURE__ */ jsx(\"code\", { children: \"<body>\" }),\n      \" element is disabled when an offcanvas and its backdrop are visible. Use the \",\n      /* @__PURE__ */ jsx(\"code\", { children: \"scroll\" }),\n      \" \",\n      \"parameter to toggle \",\n      /* @__PURE__ */ jsx(\"code\", { children: \"<body>\" }),\n      \" scrolling and\",\n      \" \",\n      /* @__PURE__ */ jsx(\"code\", { children: \"backdrop\" }),\n      \" parameter to toggle the backdrop.\"\n    ] })\n  ] }),\n  /* @__PURE__ */ jsx(Card.Body, { className: \"text-center\", children: options.map((props, idx) => /* @__PURE__ */ jsx(OffcanvasBackdropSingle, { ...props }, idx)) })\n] });\nconst OffcanvasComponent = () => /* @__PURE__ */ jsxs(React.Fragment, { children: [\n  /* @__PURE__ */ jsx(Helmet, { title: \"Offcanvas\" }),\n  /* @__PURE__ */ jsxs(Container, { fluid: true, className: \"p-0\", children: [\n    /* @__PURE__ */ jsx(\"h1\", { className: \"h3 mb-3\", children: \"Offcanvas\" }),\n    /* @__PURE__ */ jsxs(Row, { children: [\n      /* @__PURE__ */ jsx(Col, { lg: \"6\", children: /* @__PURE__ */ jsx(OffcanvasDefault, {}) }),\n      /* @__PURE__ */ jsx(Col, { lg: \"6\", children: /* @__PURE__ */ jsx(OffcanvasPlacement, {}) }),\n      /* @__PURE__ */ jsx(Col, { lg: \"6\", children: /* @__PURE__ */ jsx(OffcanvasBackdrop, {}) })\n    ] })\n  ] })\n] });\nexport default OffcanvasComponent;\n",
      "start": 1702937440807,
      "end": 1702937440820,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/pages/ui/Offcanvas.jsx"
        ],
        "sourcesContent": [
          "import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nimport { Card, Col, Container, Row, Offcanvas, Button } from \"react-bootstrap\";\r\n\r\nconst OffcanvasDefault = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title>Offcanvas</Card.Title>\r\n        <h6 className=\"card-subtitle text-muted\">\r\n          Build hidden sidebars into your project for navigation, shopping\r\n          carts, and more with a few classes and our JavaScript plugin.\r\n        </h6>\r\n      </Card.Header>\r\n      <Card.Body className=\"text-center\">\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n          Toggle offcanvas\r\n        </Button>\r\n\r\n        <Offcanvas show={show} onHide={handleClose}>\r\n          <Offcanvas.Header closeButton>\r\n            <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n          </Offcanvas.Header>\r\n          <Offcanvas.Body>\r\n            Some text as placeholder. In real life you can have the elements you\r\n            have chosen. Like, text, images, lists, etc.\r\n          </Offcanvas.Body>\r\n        </Offcanvas>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst OffcanvasPlacementSingle = ({ name, ...props }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={handleShow} className=\"me-2\">\r\n        {name}\r\n      </Button>\r\n      <Offcanvas show={show} onHide={handleClose} {...props}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          Some text as placeholder. In real life you can have the elements you\r\n          have chosen. Like, text, images, lists, etc.\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n};\r\n\r\nconst OffcanvasPlacement = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Offcanvas placement</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        There’s no default placement for offcanvas components, so you must set\r\n        the <code>placement</code> parameter.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body className=\"text-center\">\r\n      {[\"start\", \"end\", \"top\", \"bottom\"].map((placement, idx) => (\r\n        <OffcanvasPlacementSingle\r\n          key={idx}\r\n          placement={placement}\r\n          name={`Toggle ${placement} offcanvas`}\r\n        />\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst OffcanvasBackdropSingle = ({ name, ...props }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const toggleShow = () => setShow((s) => !s);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={toggleShow} className=\"me-2\">\r\n        {name}\r\n      </Button>\r\n      <Offcanvas show={show} onHide={handleClose} {...props}>\r\n        <Offcanvas.Header closeButton>\r\n          <Offcanvas.Title>Offcanvas</Offcanvas.Title>\r\n        </Offcanvas.Header>\r\n        <Offcanvas.Body>\r\n          Some text as placeholder. In real life you can have the elements you\r\n          have chosen. Like, text, images, lists, etc.\r\n        </Offcanvas.Body>\r\n      </Offcanvas>\r\n    </>\r\n  );\r\n};\r\n\r\nconst options = [\r\n  {\r\n    name: \"Enable backdrop (default)\",\r\n    scroll: false,\r\n    backdrop: true,\r\n  },\r\n  {\r\n    name: \"Disable backdrop\",\r\n    scroll: false,\r\n    backdrop: false,\r\n  },\r\n  {\r\n    name: \"Enable body scrolling\",\r\n    scroll: true,\r\n    backdrop: false,\r\n  },\r\n  {\r\n    name: \"Enable both scrolling & backdrop\",\r\n    scroll: true,\r\n    backdrop: true,\r\n  },\r\n];\r\n\r\nconst OffcanvasBackdrop = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Offcanvas backdrop</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Scrolling the <code>&#x3C;body&#x3E;</code> element is disabled when an\r\n        offcanvas and its backdrop are visible. Use the <code>scroll</code>{\" \"}\r\n        parameter to toggle <code>&#x3C;body&#x3E;</code> scrolling and{\" \"}\r\n        <code>backdrop</code> parameter to toggle the backdrop.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body className=\"text-center\">\r\n      {options.map((props, idx) => (\r\n        <OffcanvasBackdropSingle key={idx} {...props} />\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst OffcanvasComponent = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Offcanvas\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Offcanvas</h1>\r\n\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <OffcanvasDefault />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <OffcanvasPlacement />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <OffcanvasBackdrop />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default OffcanvasComponent;\r\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937440820,
      "end": 1702937440820,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937440820,
      "end": 1702937440820,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937440820,
      "end": 1702937440820,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937440820,
      "end": 1702937440820,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937440820,
      "end": 1702937440820,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937440820,
      "end": 1702937440820,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    }
  ]
}
