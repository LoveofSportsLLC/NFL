{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/pages/pages/Settings.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  ListGroup,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport avatar1 from \"../../assets/img/avatars/avatar.jpg\";\r\n\r\nconst Navigation = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Profile Settings</Card.Title>\r\n    </Card.Header>\r\n    <ListGroup variant=\"flush\">\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action active>\r\n        Account\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Password\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Privacy and safety\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Email notifications\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Web notifications\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Widgets\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Your data\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Delete account{\" \"}\r\n      </ListGroup.Item>\r\n    </ListGroup>\r\n  </Card>\r\n);\r\n\r\nconst PublicInfo = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Public info</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form>\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"inputUsername\">Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                id=\"inputUsername\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"inputBio\">Biography</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"2\"\r\n                id=\"inputBio\"\r\n                placeholder=\"Tell something about yourself\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <div className=\"text-center\">\r\n              <img\r\n                alt=\"Chris Wood\"\r\n                src={avatar1}\r\n                className=\"rounded-circle img-responsive mt-2\"\r\n                width=\"128\"\r\n                height=\"128\"\r\n              />\r\n              <div className=\"mt-2\">\r\n                <Button variant=\"primary\">\r\n                  <FontAwesomeIcon icon={faUpload} /> Upload\r\n                </Button>\r\n              </div>\r\n              <small>\r\n                For best results, use an image at least 128px by 128px in .jpg\r\n                format\r\n              </small>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Button variant=\"primary\">Save changes</Button>\r\n      </Form>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst PrivateInfo = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Private info</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"firstName\">First name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"text\"\r\n                id=\"firstName\"\r\n                placeholder=\"First name\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"lastName\">Last name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"text\"\r\n                id=\"lastName\"\r\n                placeholder=\"Last name\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label htmlFor=\"address\">Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"address\"\r\n            id=\"address\"\r\n            placeholder=\"1234 Main St\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label htmlFor=\"address2\">Address 2</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"address2\"\r\n            id=\"address2\"\r\n            placeholder=\"Apartment, studio, or floor\"\r\n          />\r\n        </Form.Group>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"city\">City</Form.Label>\r\n              <Form.Control type=\"text\" name=\"city\" id=\"city\" />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"state\">State</Form.Label>\r\n              <Form.Select name=\"state\" id=\"state\">\r\n                <option>Choose...</option>\r\n                <option>...</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={2}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"zipcode\">Zip</Form.Label>\r\n              <Form.Control type=\"text\" name=\"zip\" id=\"zipcode\" />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Button variant=\"primary\">Save changes</Button>\r\n      </Form>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Settings = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Settings\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Settings</h1>\r\n\r\n      <Row>\r\n        <Col md=\"3\" xl=\"2\">\r\n          <Navigation />\r\n        </Col>\r\n        <Col md=\"9\" xl=\"10\">\r\n          <PublicInfo />\r\n          <PrivateInfo />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Settings;\r\n",
      "start": 1702937436684,
      "end": 1702937436953,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937436953,
      "end": 1702937436953,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937436953,
      "end": 1702937436953,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport {\n  Button,\n  Card,\n  Col,\n  Container,\n  Form,\n  ListGroup,\n  Row\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\nimport avatar1 from \"../../assets/img/avatars/avatar.jpg\";\nconst Navigation = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Profile Settings\" }) }),\n  /* @__PURE__ */ jsxs(ListGroup, { variant: \"flush\", children: [\n    /* @__PURE__ */ jsx(ListGroup.Item, { tag: \"a\", href: \"#\", action: true, active: true, children: \"Account\" }),\n    /* @__PURE__ */ jsx(ListGroup.Item, { tag: \"a\", href: \"#\", action: true, children: \"Password\" }),\n    /* @__PURE__ */ jsx(ListGroup.Item, { tag: \"a\", href: \"#\", action: true, children: \"Privacy and safety\" }),\n    /* @__PURE__ */ jsx(ListGroup.Item, { tag: \"a\", href: \"#\", action: true, children: \"Email notifications\" }),\n    /* @__PURE__ */ jsx(ListGroup.Item, { tag: \"a\", href: \"#\", action: true, children: \"Web notifications\" }),\n    /* @__PURE__ */ jsx(ListGroup.Item, { tag: \"a\", href: \"#\", action: true, children: \"Widgets\" }),\n    /* @__PURE__ */ jsx(ListGroup.Item, { tag: \"a\", href: \"#\", action: true, children: \"Your data\" }),\n    /* @__PURE__ */ jsxs(ListGroup.Item, { tag: \"a\", href: \"#\", action: true, children: [\n      \"Delete account\",\n      \" \"\n    ] })\n  ] })\n] });\nconst PublicInfo = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Public info\" }) }),\n  /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsxs(Form, { children: [\n    /* @__PURE__ */ jsxs(Row, { children: [\n      /* @__PURE__ */ jsxs(Col, { md: \"8\", children: [\n        /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n          /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"inputUsername\", children: \"Username\" }),\n          /* @__PURE__ */ jsx(\n            Form.Control,\n            {\n              type: \"text\",\n              id: \"inputUsername\",\n              placeholder: \"Username\"\n            }\n          )\n        ] }),\n        /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n          /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"inputBio\", children: \"Biography\" }),\n          /* @__PURE__ */ jsx(\n            Form.Control,\n            {\n              as: \"textarea\",\n              rows: \"2\",\n              id: \"inputBio\",\n              placeholder: \"Tell something about yourself\"\n            }\n          )\n        ] })\n      ] }),\n      /* @__PURE__ */ jsx(Col, { md: \"4\", children: /* @__PURE__ */ jsxs(\"div\", { className: \"text-center\", children: [\n        /* @__PURE__ */ jsx(\n          \"img\",\n          {\n            alt: \"Chris Wood\",\n            src: avatar1,\n            className: \"rounded-circle img-responsive mt-2\",\n            width: \"128\",\n            height: \"128\"\n          }\n        ),\n        /* @__PURE__ */ jsx(\"div\", { className: \"mt-2\", children: /* @__PURE__ */ jsxs(Button, { variant: \"primary\", children: [\n          /* @__PURE__ */ jsx(FontAwesomeIcon, { icon: faUpload }),\n          \" Upload\"\n        ] }) }),\n        /* @__PURE__ */ jsx(\"small\", { children: \"For best results, use an image at least 128px by 128px in .jpg format\" })\n      ] }) })\n    ] }),\n    /* @__PURE__ */ jsx(Button, { variant: \"primary\", children: \"Save changes\" })\n  ] }) })\n] });\nconst PrivateInfo = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Private info\" }) }),\n  /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsxs(Form, { children: [\n    /* @__PURE__ */ jsxs(Row, { children: [\n      /* @__PURE__ */ jsx(Col, { md: 6, children: /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n        /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"firstName\", children: \"First name\" }),\n        /* @__PURE__ */ jsx(\n          Form.Control,\n          {\n            type: \"text\",\n            name: \"text\",\n            id: \"firstName\",\n            placeholder: \"First name\"\n          }\n        )\n      ] }) }),\n      /* @__PURE__ */ jsx(Col, { md: 6, children: /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n        /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"lastName\", children: \"Last name\" }),\n        /* @__PURE__ */ jsx(\n          Form.Control,\n          {\n            type: \"text\",\n            name: \"text\",\n            id: \"lastName\",\n            placeholder: \"Last name\"\n          }\n        )\n      ] }) })\n    ] }),\n    /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"email\", children: \"Email\" }),\n      /* @__PURE__ */ jsx(\n        Form.Control,\n        {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"Email\"\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"address\", children: \"Address\" }),\n      /* @__PURE__ */ jsx(\n        Form.Control,\n        {\n          type: \"text\",\n          name: \"address\",\n          id: \"address\",\n          placeholder: \"1234 Main St\"\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"address2\", children: \"Address 2\" }),\n      /* @__PURE__ */ jsx(\n        Form.Control,\n        {\n          type: \"text\",\n          name: \"address2\",\n          id: \"address2\",\n          placeholder: \"Apartment, studio, or floor\"\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsxs(Row, { children: [\n      /* @__PURE__ */ jsx(Col, { md: 6, children: /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n        /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"city\", children: \"City\" }),\n        /* @__PURE__ */ jsx(Form.Control, { type: \"text\", name: \"city\", id: \"city\" })\n      ] }) }),\n      /* @__PURE__ */ jsx(Col, { md: 4, children: /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n        /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"state\", children: \"State\" }),\n        /* @__PURE__ */ jsxs(Form.Select, { name: \"state\", id: \"state\", children: [\n          /* @__PURE__ */ jsx(\"option\", { children: \"Choose...\" }),\n          /* @__PURE__ */ jsx(\"option\", { children: \"...\" })\n        ] })\n      ] }) }),\n      /* @__PURE__ */ jsx(Col, { md: 2, children: /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n        /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"zipcode\", children: \"Zip\" }),\n        /* @__PURE__ */ jsx(Form.Control, { type: \"text\", name: \"zip\", id: \"zipcode\" })\n      ] }) })\n    ] }),\n    /* @__PURE__ */ jsx(Button, { variant: \"primary\", children: \"Save changes\" })\n  ] }) })\n] });\nconst Settings = () => /* @__PURE__ */ jsxs(React.Fragment, { children: [\n  /* @__PURE__ */ jsx(Helmet, { title: \"Settings\" }),\n  /* @__PURE__ */ jsxs(Container, { fluid: true, className: \"p-0\", children: [\n    /* @__PURE__ */ jsx(\"h1\", { className: \"h3 mb-3\", children: \"Settings\" }),\n    /* @__PURE__ */ jsxs(Row, { children: [\n      /* @__PURE__ */ jsx(Col, { md: \"3\", xl: \"2\", children: /* @__PURE__ */ jsx(Navigation, {}) }),\n      /* @__PURE__ */ jsxs(Col, { md: \"9\", xl: \"10\", children: [\n        /* @__PURE__ */ jsx(PublicInfo, {}),\n        /* @__PURE__ */ jsx(PrivateInfo, {})\n      ] })\n    ] })\n  ] })\n] });\nexport default Settings;\n",
      "start": 1702937436953,
      "end": 1702937436963,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/pages/pages/Settings.jsx"
        ],
        "sourcesContent": [
          "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  ListGroup,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport avatar1 from \"../../assets/img/avatars/avatar.jpg\";\r\n\r\nconst Navigation = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Profile Settings</Card.Title>\r\n    </Card.Header>\r\n    <ListGroup variant=\"flush\">\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action active>\r\n        Account\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Password\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Privacy and safety\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Email notifications\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Web notifications\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Widgets\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Your data\r\n      </ListGroup.Item>\r\n      <ListGroup.Item tag=\"a\" href=\"#\" action>\r\n        Delete account{\" \"}\r\n      </ListGroup.Item>\r\n    </ListGroup>\r\n  </Card>\r\n);\r\n\r\nconst PublicInfo = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Public info</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form>\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"inputUsername\">Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                id=\"inputUsername\"\r\n                placeholder=\"Username\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"inputBio\">Biography</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"2\"\r\n                id=\"inputBio\"\r\n                placeholder=\"Tell something about yourself\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <div className=\"text-center\">\r\n              <img\r\n                alt=\"Chris Wood\"\r\n                src={avatar1}\r\n                className=\"rounded-circle img-responsive mt-2\"\r\n                width=\"128\"\r\n                height=\"128\"\r\n              />\r\n              <div className=\"mt-2\">\r\n                <Button variant=\"primary\">\r\n                  <FontAwesomeIcon icon={faUpload} /> Upload\r\n                </Button>\r\n              </div>\r\n              <small>\r\n                For best results, use an image at least 128px by 128px in .jpg\r\n                format\r\n              </small>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Button variant=\"primary\">Save changes</Button>\r\n      </Form>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst PrivateInfo = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Private info</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"firstName\">First name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"text\"\r\n                id=\"firstName\"\r\n                placeholder=\"First name\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"lastName\">Last name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"text\"\r\n                id=\"lastName\"\r\n                placeholder=\"Last name\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label htmlFor=\"address\">Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"address\"\r\n            id=\"address\"\r\n            placeholder=\"1234 Main St\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label htmlFor=\"address2\">Address 2</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"address2\"\r\n            id=\"address2\"\r\n            placeholder=\"Apartment, studio, or floor\"\r\n          />\r\n        </Form.Group>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"city\">City</Form.Label>\r\n              <Form.Control type=\"text\" name=\"city\" id=\"city\" />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"state\">State</Form.Label>\r\n              <Form.Select name=\"state\" id=\"state\">\r\n                <option>Choose...</option>\r\n                <option>...</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md={2}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label htmlFor=\"zipcode\">Zip</Form.Label>\r\n              <Form.Control type=\"text\" name=\"zip\" id=\"zipcode\" />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Button variant=\"primary\">Save changes</Button>\r\n      </Form>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Settings = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Settings\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Settings</h1>\r\n\r\n      <Row>\r\n        <Col md=\"3\" xl=\"2\">\r\n          <Navigation />\r\n        </Col>\r\n        <Col md=\"9\" xl=\"10\">\r\n          <PublicInfo />\r\n          <PrivateInfo />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Settings;\r\n"
        ],
        "mappings": "AAoBM,cAwBA,YAxBA;AApBN,OAAO,WAAW;AAClB,SAAS,cAAc;AACvB;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAEP,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;AAEzB,OAAO,aAAa;AAEpB,MAAM,aAAa,MACjB,qBAAC,QACC;AAAA,sBAAC,KAAK,QAAL,EACC,8BAAC,KAAK,OAAL,EAAW,WAAU,QAAO,8BAAgB,GAC/C;AAAA,EACA,qBAAC,aAAU,SAAQ,SACjB;AAAA,wBAAC,UAAU,MAAV,EAAe,KAAI,KAAI,MAAK,KAAI,QAAM,MAAC,QAAM,MAAC,qBAE/C;AAAA,IACA,oBAAC,UAAU,MAAV,EAAe,KAAI,KAAI,MAAK,KAAI,QAAM,MAAC,sBAExC;AAAA,IACA,oBAAC,UAAU,MAAV,EAAe,KAAI,KAAI,MAAK,KAAI,QAAM,MAAC,gCAExC;AAAA,IACA,oBAAC,UAAU,MAAV,EAAe,KAAI,KAAI,MAAK,KAAI,QAAM,MAAC,iCAExC;AAAA,IACA,oBAAC,UAAU,MAAV,EAAe,KAAI,KAAI,MAAK,KAAI,QAAM,MAAC,+BAExC;AAAA,IACA,oBAAC,UAAU,MAAV,EAAe,KAAI,KAAI,MAAK,KAAI,QAAM,MAAC,qBAExC;AAAA,IACA,oBAAC,UAAU,MAAV,EAAe,KAAI,KAAI,MAAK,KAAI,QAAM,MAAC,uBAExC;AAAA,IACA,qBAAC,UAAU,MAAV,EAAe,KAAI,KAAI,MAAK,KAAI,QAAM,MAAC;AAAA;AAAA,MACvB;AAAA,OACjB;AAAA,KACF;AAAA,GACF;AAGF,MAAM,aAAa,MACjB,qBAAC,QACC;AAAA,sBAAC,KAAK,QAAL,EACC,8BAAC,KAAK,OAAL,EAAW,WAAU,QAAO,yBAAW,GAC1C;AAAA,EACA,oBAAC,KAAK,MAAL,EACC,+BAAC,QACC;AAAA,yBAAC,OACC;AAAA,2BAAC,OAAI,IAAG,KACN;AAAA,6BAAC,KAAK,OAAL,EAAW,WAAU,QACpB;AAAA,8BAAC,KAAK,OAAL,EAAW,SAAQ,iBAAgB,sBAAQ;AAAA,UAC5C;AAAA,YAAC,KAAK;AAAA,YAAL;AAAA,cACC,MAAK;AAAA,cACL,IAAG;AAAA,cACH,aAAY;AAAA;AAAA,UACd;AAAA,WACF;AAAA,QACA,qBAAC,KAAK,OAAL,EAAW,WAAU,QACpB;AAAA,8BAAC,KAAK,OAAL,EAAW,SAAQ,YAAW,uBAAS;AAAA,UACxC;AAAA,YAAC,KAAK;AAAA,YAAL;AAAA,cACC,IAAG;AAAA,cACH,MAAK;AAAA,cACL,IAAG;AAAA,cACH,aAAY;AAAA;AAAA,UACd;AAAA,WACF;AAAA,SACF;AAAA,MACA,oBAAC,OAAI,IAAG,KACN,+BAAC,SAAI,WAAU,eACb;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,KAAI;AAAA,YACJ,KAAK;AAAA,YACL,WAAU;AAAA,YACV,OAAM;AAAA,YACN,QAAO;AAAA;AAAA,QACT;AAAA,QACA,oBAAC,SAAI,WAAU,QACb,+BAAC,UAAO,SAAQ,WACd;AAAA,8BAAC,mBAAgB,MAAM,UAAU;AAAA,UAAE;AAAA,WACrC,GACF;AAAA,QACA,oBAAC,WAAM,mFAGP;AAAA,SACF,GACF;AAAA,OACF;AAAA,IAEA,oBAAC,UAAO,SAAQ,WAAU,0BAAY;AAAA,KACxC,GACF;AAAA,GACF;AAGF,MAAM,cAAc,MAClB,qBAAC,QACC;AAAA,sBAAC,KAAK,QAAL,EACC,8BAAC,KAAK,OAAL,EAAW,WAAU,QAAO,0BAAY,GAC3C;AAAA,EACA,oBAAC,KAAK,MAAL,EACC,+BAAC,QACC;AAAA,yBAAC,OACC;AAAA,0BAAC,OAAI,IAAI,GACP,+BAAC,KAAK,OAAL,EAAW,WAAU,QACpB;AAAA,4BAAC,KAAK,OAAL,EAAW,SAAQ,aAAY,wBAAU;AAAA,QAC1C;AAAA,UAAC,KAAK;AAAA,UAAL;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,IAAG;AAAA,YACH,aAAY;AAAA;AAAA,QACd;AAAA,SACF,GACF;AAAA,MACA,oBAAC,OAAI,IAAI,GACP,+BAAC,KAAK,OAAL,EAAW,WAAU,QACpB;AAAA,4BAAC,KAAK,OAAL,EAAW,SAAQ,YAAW,uBAAS;AAAA,QACxC;AAAA,UAAC,KAAK;AAAA,UAAL;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,IAAG;AAAA,YACH,aAAY;AAAA;AAAA,QACd;AAAA,SACF,GACF;AAAA,OACF;AAAA,IACA,qBAAC,KAAK,OAAL,EAAW,WAAU,QACpB;AAAA,0BAAC,KAAK,OAAL,EAAW,SAAQ,SAAQ,mBAAK;AAAA,MACjC;AAAA,QAAC,KAAK;AAAA,QAAL;AAAA,UACC,MAAK;AAAA,UACL,MAAK;AAAA,UACL,IAAG;AAAA,UACH,aAAY;AAAA;AAAA,MACd;AAAA,OACF;AAAA,IACA,qBAAC,KAAK,OAAL,EAAW,WAAU,QACpB;AAAA,0BAAC,KAAK,OAAL,EAAW,SAAQ,WAAU,qBAAO;AAAA,MACrC;AAAA,QAAC,KAAK;AAAA,QAAL;AAAA,UACC,MAAK;AAAA,UACL,MAAK;AAAA,UACL,IAAG;AAAA,UACH,aAAY;AAAA;AAAA,MACd;AAAA,OACF;AAAA,IACA,qBAAC,KAAK,OAAL,EAAW,WAAU,QACpB;AAAA,0BAAC,KAAK,OAAL,EAAW,SAAQ,YAAW,uBAAS;AAAA,MACxC;AAAA,QAAC,KAAK;AAAA,QAAL;AAAA,UACC,MAAK;AAAA,UACL,MAAK;AAAA,UACL,IAAG;AAAA,UACH,aAAY;AAAA;AAAA,MACd;AAAA,OACF;AAAA,IACA,qBAAC,OACC;AAAA,0BAAC,OAAI,IAAI,GACP,+BAAC,KAAK,OAAL,EAAW,WAAU,QACpB;AAAA,4BAAC,KAAK,OAAL,EAAW,SAAQ,QAAO,kBAAI;AAAA,QAC/B,oBAAC,KAAK,SAAL,EAAa,MAAK,QAAO,MAAK,QAAO,IAAG,QAAO;AAAA,SAClD,GACF;AAAA,MACA,oBAAC,OAAI,IAAI,GACP,+BAAC,KAAK,OAAL,EAAW,WAAU,QACpB;AAAA,4BAAC,KAAK,OAAL,EAAW,SAAQ,SAAQ,mBAAK;AAAA,QACjC,qBAAC,KAAK,QAAL,EAAY,MAAK,SAAQ,IAAG,SAC3B;AAAA,8BAAC,YAAO,uBAAS;AAAA,UACjB,oBAAC,YAAO,iBAAG;AAAA,WACb;AAAA,SACF,GACF;AAAA,MACA,oBAAC,OAAI,IAAI,GACP,+BAAC,KAAK,OAAL,EAAW,WAAU,QACpB;AAAA,4BAAC,KAAK,OAAL,EAAW,SAAQ,WAAU,iBAAG;AAAA,QACjC,oBAAC,KAAK,SAAL,EAAa,MAAK,QAAO,MAAK,OAAM,IAAG,WAAU;AAAA,SACpD,GACF;AAAA,OACF;AAAA,IAEA,oBAAC,UAAO,SAAQ,WAAU,0BAAY;AAAA,KACxC,GACF;AAAA,GACF;AAGF,MAAM,WAAW,MACf,qBAAC,MAAM,UAAN,EACC;AAAA,sBAAC,UAAO,OAAM,YAAW;AAAA,EACzB,qBAAC,aAAU,OAAK,MAAC,WAAU,OACzB;AAAA,wBAAC,QAAG,WAAU,WAAU,sBAAQ;AAAA,IAEhC,qBAAC,OACC;AAAA,0BAAC,OAAI,IAAG,KAAI,IAAG,KACb,8BAAC,cAAW,GACd;AAAA,MACA,qBAAC,OAAI,IAAG,KAAI,IAAG,MACb;AAAA,4BAAC,cAAW;AAAA,QACZ,oBAAC,eAAY;AAAA,SACf;AAAA,OACF;AAAA,KACF;AAAA,GACF;AAGF,eAAe;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937436964,
      "end": 1702937436964,
      "order": "normal"
    }
  ]
}
