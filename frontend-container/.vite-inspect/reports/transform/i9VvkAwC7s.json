{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/Dropdown.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownDivider from './DropdownDivider';\nimport DropdownHeader from './DropdownHeader';\nimport DropdownItem from './DropdownItem';\nimport DropdownItemText from './DropdownItemText';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop = 'down',\n    show,\n    className,\n    align = 'start',\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose = true,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click';\n\n    // autoClose=inside doesn't permit close on rootClose\n    if (autoClose === 'inside') return source !== 'rootClose';\n\n    // autoClose=outside doesn't permit close on select\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  const directionClasses = {\n    down: prefix,\n    'down-centered': `${prefix}-center`,\n    up: 'dropup',\n    'up-centered': 'dropup-center dropup',\n    end: 'dropend',\n    start: 'dropstart'\n  };\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, {\n        ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', directionClasses[drop])\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});",
      "start": 1702937441460,
      "end": 1702937441481,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441481,
      "end": 1702937441481,
      "order": "normal"
    }
  ]
}
