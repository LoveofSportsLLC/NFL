{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/graphql/execution/mapAsyncIterator.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nexport function mapAsyncIterator(iterable, callback) {\n  const iterator = iterable[Symbol.asyncIterator]();\n\n  async function mapResult(result) {\n    if (result.done) {\n      return result;\n    }\n\n    try {\n      return {\n        value: await callback(result.value),\n        done: false,\n      };\n    } catch (error) {\n      /* c8 ignore start */\n      // FIXME: add test case\n      if (typeof iterator.return === 'function') {\n        try {\n          await iterator.return();\n        } catch (_e) {\n          /* ignore error */\n        }\n      }\n\n      throw error;\n      /* c8 ignore stop */\n    }\n  }\n\n  return {\n    async next() {\n      return mapResult(await iterator.next());\n    },\n\n    async return() {\n      // If iterator.return() does not exist, then type R must be undefined.\n      return typeof iterator.return === 'function'\n        ? mapResult(await iterator.return())\n        : {\n            value: undefined,\n            done: true,\n          };\n    },\n\n    async throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return mapResult(await iterator.throw(error));\n      }\n\n      throw error;\n    },\n\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n",
      "start": 1702937443987,
      "end": 1702937444003,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444003,
      "end": 1702937444003,
      "order": "normal"
    }
  ]
}
