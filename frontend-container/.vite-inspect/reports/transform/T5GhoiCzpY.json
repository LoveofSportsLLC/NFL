{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/bicep.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = bicep\nbicep.displayName = 'bicep'\nbicep.aliases = []\nfunction bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [\n      {\n        // multiline comments eg /* ASDF */\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        // singleline comments eg // ASDF\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    property: [\n      {\n        pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n        lookbehind: true\n      },\n      {\n        pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: /'''[^'][\\s\\S]*?'''/,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword:\n      /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.bicep\n}\n",
      "start": 1702937444826,
      "end": 1702937444850,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444850,
      "end": 1702937444850,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444850,
      "end": 1702937444850,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444850,
      "end": 1702937444850,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444850,
      "end": 1702937444850,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444850,
      "end": 1702937444850,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444850,
      "end": 1702937444850,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444850,
      "end": 1702937444850,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444850,
      "end": 1702937444850,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444850,
      "end": 1702937444850,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444850,
      "end": 1702937444850,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar bicep_1;\nvar hasRequiredBicep;\n\nfunction requireBicep () {\n\tif (hasRequiredBicep) return bicep_1;\n\thasRequiredBicep = 1;\n\t'use strict'\n\n\tbicep_1 = bicep\n\tbicep.displayName = 'bicep'\n\tbicep.aliases = []\n\tfunction bicep(Prism) {\n\t  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n\t  Prism.languages.bicep = {\n\t    comment: [\n\t      {\n\t        // multiline comments eg /* ASDF */\n\t        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t        lookbehind: true,\n\t        greedy: true\n\t      },\n\t      {\n\t        // singleline comments eg // ASDF\n\t        pattern: /(^|[^\\\\:])\\/\\/.*/,\n\t        lookbehind: true,\n\t        greedy: true\n\t      }\n\t    ],\n\t    property: [\n\t      {\n\t        pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n\t        lookbehind: true\n\t      },\n\t      {\n\t        pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n\t        lookbehind: true,\n\t        greedy: true\n\t      }\n\t    ],\n\t    string: [\n\t      {\n\t        pattern: /'''[^'][\\s\\S]*?'''/,\n\t        greedy: true\n\t      },\n\t      {\n\t        pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n\t        lookbehind: true,\n\t        greedy: true\n\t      }\n\t    ],\n\t    'interpolated-string': {\n\t      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n\t      lookbehind: true,\n\t      greedy: true,\n\t      inside: {\n\t        interpolation: {\n\t          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n\t          inside: {\n\t            expression: {\n\t              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n\t              lookbehind: true\n\t            },\n\t            punctuation: /^\\$\\{|\\}$/\n\t          }\n\t        },\n\t        string: /[\\s\\S]+/\n\t      }\n\t    },\n\t    datatype: {\n\t      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n\t      lookbehind: true,\n\t      alias: 'class-name'\n\t    },\n\t    boolean: /\\b(?:false|true)\\b/,\n\t    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n\t    keyword:\n\t      /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n\t    decorator: /@\\w+\\b/,\n\t    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n\t    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n\t    operator:\n\t      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n\t    punctuation: /[{}[\\];(),.:]/\n\t  }\n\t  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside[\n\t    'expression'\n\t  ].inside = Prism.languages.bicep\n\t}\n\treturn bicep_1;\n}\n\nexport { requireBicep as __require };",
      "start": 1702937444850,
      "end": 1702937444851,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,QAAc,GAAG,KAAK;CACtB,KAAK,CAAC,WAAW,GAAG,OAAO;CAC3B,KAAK,CAAC,OAAO,GAAG,EAAE;CAClB,SAAS,KAAK,CAAC,KAAK,EAAE;CACtB;CACA,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG;CAC1B,IAAI,OAAO,EAAE;CACb,MAAM;CACN;CACA,QAAQ,OAAO,EAAE,iCAAiC;CAClD,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP,MAAM;CACN;CACA,QAAQ,OAAO,EAAE,kBAAkB;CACnC,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM;CACN,QAAQ,OAAO,EAAE,qCAAqC;CACtD,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM;CACN,QAAQ,OAAO,EAAE,0DAA0D;CAC3E,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP,KAAK;CACL,IAAI,MAAM,EAAE;CACZ,MAAM;CACN,QAAQ,OAAO,EAAE,oBAAoB;CACrC,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP,MAAM;CACN,QAAQ,OAAO,EAAE,2CAA2C;CAC5D,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP,KAAK;CACL,IAAI,qBAAqB,EAAE;CAC3B,MAAM,OAAO,EAAE,8DAA8D;CAC7E,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,MAAM,EAAE,IAAI;CAClB,MAAM,MAAM,EAAE;CACd,QAAQ,aAAa,EAAE;CACvB,UAAU,OAAO,EAAE,kBAAkB;CACrC,UAAU,MAAM,EAAE;CAClB,YAAY,UAAU,EAAE;CACxB,cAAc,OAAO,EAAE,uBAAuB;CAC9C,cAAc,UAAU,EAAE,IAAI;CAC9B,aAAa;CACb,YAAY,WAAW,EAAE,WAAW;CACpC,WAAW;CACX,SAAS;CACT,QAAQ,MAAM,EAAE,SAAS;CACzB,OAAO;CACP,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM,OAAO,EAAE,4CAA4C;CAC3D,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,KAAK,EAAE,YAAY;CACzB,KAAK;CACL,IAAI,OAAO,EAAE,oBAAoB;CACjC;CACA,IAAI,OAAO;CACX,MAAM,8EAA8E;CACpF,IAAI,SAAS,EAAE,QAAQ;CACvB,IAAI,QAAQ,EAAE,0BAA0B;CACxC,IAAI,MAAM,EAAE,4CAA4C;CACxD,IAAI,QAAQ;CACZ,MAAM,2FAA2F;CACjG,IAAI,WAAW,EAAE,eAAe;CAChC,GAAG;CACH,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,MAAM;CAC7E,IAAI,YAAY;CAChB,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK;CAClC"
      }
    },
    {
      "name": "inject",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    }
  ]
}
