{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/pages/calendar/Calendar.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React from \"react\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\n\r\nconst demoEvents = [\r\n  {\r\n    title: \"All Day Event\",\r\n    start: \"2020-07-01\",\r\n  },\r\n  {\r\n    title: \"Long Event\",\r\n    start: \"2020-07-07\",\r\n    end: \"2020-07-10\",\r\n  },\r\n  {\r\n    groupId: \"999\",\r\n    title: \"Repeating Event\",\r\n    start: \"2020-07-09T16:00:00\",\r\n  },\r\n  {\r\n    groupId: \"999\",\r\n    title: \"Repeating Event\",\r\n    start: \"2020-07-16T16:00:00\",\r\n  },\r\n  {\r\n    title: \"Conference\",\r\n    start: \"2020-07-11\",\r\n    end: \"2020-07-13\",\r\n  },\r\n  {\r\n    title: \"Meeting\",\r\n    start: \"2020-07-12T10:30:00\",\r\n    end: \"2020-07-12T12:30:00\",\r\n  },\r\n  {\r\n    title: \"Lunch\",\r\n    start: \"2020-07-12T12:00:00\",\r\n  },\r\n  {\r\n    title: \"Meeting\",\r\n    start: \"2020-07-12T14:30:00\",\r\n  },\r\n  {\r\n    title: \"Birthday Party\",\r\n    start: \"2020-07-13T07:00:00\",\r\n  },\r\n  {\r\n    title: \"Click for Google\",\r\n    url: \"http://google.com/\",\r\n    start: \"2020-07-28\",\r\n  },\r\n];\r\n\r\nconst Calendar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Calendar\" />\r\n      <Container fluid className=\"p-0\">\r\n        <h1 className=\"h3 mb-3\">Calendar</h1>\r\n\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title>FullCalendar</Card.Title>\r\n            <h6 className=\"card-subtitle text-muted\">\r\n              Open source JavaScript plugin for a full-sized, drag & drop event\r\n              calendar.\r\n            </h6>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <FullCalendar\r\n              plugins={[bootstrapPlugin, dayGridPlugin, timeGridPlugin]}\r\n              themeSystem=\"bootstrap\"\r\n              initialView=\"dayGridMonth\"\r\n              initialDate=\"2020-07-07\"\r\n              headerToolbar={{\r\n                left: \"prev,next today\",\r\n                center: \"title\",\r\n                right: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n              }}\r\n              events={demoEvents}\r\n              bootstrapFontAwesome={false}\r\n            />\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n",
      "start": 1702937440808,
      "end": 1702937440870,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937440870,
      "end": 1702937440870,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937440870,
      "end": 1702937440870,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Card, Container } from \"react-bootstrap\";\nimport { Helmet } from \"react-helmet-async\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nconst demoEvents = [\n  {\n    title: \"All Day Event\",\n    start: \"2020-07-01\"\n  },\n  {\n    title: \"Long Event\",\n    start: \"2020-07-07\",\n    end: \"2020-07-10\"\n  },\n  {\n    groupId: \"999\",\n    title: \"Repeating Event\",\n    start: \"2020-07-09T16:00:00\"\n  },\n  {\n    groupId: \"999\",\n    title: \"Repeating Event\",\n    start: \"2020-07-16T16:00:00\"\n  },\n  {\n    title: \"Conference\",\n    start: \"2020-07-11\",\n    end: \"2020-07-13\"\n  },\n  {\n    title: \"Meeting\",\n    start: \"2020-07-12T10:30:00\",\n    end: \"2020-07-12T12:30:00\"\n  },\n  {\n    title: \"Lunch\",\n    start: \"2020-07-12T12:00:00\"\n  },\n  {\n    title: \"Meeting\",\n    start: \"2020-07-12T14:30:00\"\n  },\n  {\n    title: \"Birthday Party\",\n    start: \"2020-07-13T07:00:00\"\n  },\n  {\n    title: \"Click for Google\",\n    url: \"http://google.com/\",\n    start: \"2020-07-28\"\n  }\n];\nconst Calendar = () => {\n  return /* @__PURE__ */ jsxs(React.Fragment, { children: [\n    /* @__PURE__ */ jsx(Helmet, { title: \"Calendar\" }),\n    /* @__PURE__ */ jsxs(Container, { fluid: true, className: \"p-0\", children: [\n      /* @__PURE__ */ jsx(\"h1\", { className: \"h3 mb-3\", children: \"Calendar\" }),\n      /* @__PURE__ */ jsxs(Card, { children: [\n        /* @__PURE__ */ jsxs(Card.Header, { children: [\n          /* @__PURE__ */ jsx(Card.Title, { children: \"FullCalendar\" }),\n          /* @__PURE__ */ jsx(\"h6\", { className: \"card-subtitle text-muted\", children: \"Open source JavaScript plugin for a full-sized, drag & drop event calendar.\" })\n        ] }),\n        /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsx(\n          FullCalendar,\n          {\n            plugins: [bootstrapPlugin, dayGridPlugin, timeGridPlugin],\n            themeSystem: \"bootstrap\",\n            initialView: \"dayGridMonth\",\n            initialDate: \"2020-07-07\",\n            headerToolbar: {\n              left: \"prev,next today\",\n              center: \"title\",\n              right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n            },\n            events: demoEvents,\n            bootstrapFontAwesome: false\n          }\n        ) })\n      ] })\n    ] })\n  ] });\n};\nexport default Calendar;\n",
      "start": 1702937440870,
      "end": 1702937440874,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/pages/calendar/Calendar.jsx"
        ],
        "sourcesContent": [
          "import React from \"react\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport bootstrapPlugin from \"@fullcalendar/bootstrap\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\n\r\nconst demoEvents = [\r\n  {\r\n    title: \"All Day Event\",\r\n    start: \"2020-07-01\",\r\n  },\r\n  {\r\n    title: \"Long Event\",\r\n    start: \"2020-07-07\",\r\n    end: \"2020-07-10\",\r\n  },\r\n  {\r\n    groupId: \"999\",\r\n    title: \"Repeating Event\",\r\n    start: \"2020-07-09T16:00:00\",\r\n  },\r\n  {\r\n    groupId: \"999\",\r\n    title: \"Repeating Event\",\r\n    start: \"2020-07-16T16:00:00\",\r\n  },\r\n  {\r\n    title: \"Conference\",\r\n    start: \"2020-07-11\",\r\n    end: \"2020-07-13\",\r\n  },\r\n  {\r\n    title: \"Meeting\",\r\n    start: \"2020-07-12T10:30:00\",\r\n    end: \"2020-07-12T12:30:00\",\r\n  },\r\n  {\r\n    title: \"Lunch\",\r\n    start: \"2020-07-12T12:00:00\",\r\n  },\r\n  {\r\n    title: \"Meeting\",\r\n    start: \"2020-07-12T14:30:00\",\r\n  },\r\n  {\r\n    title: \"Birthday Party\",\r\n    start: \"2020-07-13T07:00:00\",\r\n  },\r\n  {\r\n    title: \"Click for Google\",\r\n    url: \"http://google.com/\",\r\n    start: \"2020-07-28\",\r\n  },\r\n];\r\n\r\nconst Calendar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Calendar\" />\r\n      <Container fluid className=\"p-0\">\r\n        <h1 className=\"h3 mb-3\">Calendar</h1>\r\n\r\n        <Card>\r\n          <Card.Header>\r\n            <Card.Title>FullCalendar</Card.Title>\r\n            <h6 className=\"card-subtitle text-muted\">\r\n              Open source JavaScript plugin for a full-sized, drag & drop event\r\n              calendar.\r\n            </h6>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <FullCalendar\r\n              plugins={[bootstrapPlugin, dayGridPlugin, timeGridPlugin]}\r\n              themeSystem=\"bootstrap\"\r\n              initialView=\"dayGridMonth\"\r\n              initialDate=\"2020-07-07\"\r\n              headerToolbar={{\r\n                left: \"prev,next today\",\r\n                center: \"title\",\r\n                right: \"dayGridMonth,timeGridWeek,timeGridDay\",\r\n              }}\r\n              events={demoEvents}\r\n              bootstrapFontAwesome={false}\r\n            />\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"
        ],
        "mappings": "AA6DM,cAKI,YALJ;AA7DN,OAAO,WAAW;AAClB,SAAS,MAAM,iBAAiB;AAChC,SAAS,cAAc;AAEvB,OAAO,kBAAkB;AACzB,OAAO,qBAAqB;AAC5B,OAAO,mBAAmB;AAC1B,OAAO,oBAAoB;AAE3B,MAAM,aAAa;AAAA,EACjB;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,EACP;AAAA,EACA;AAAA,IACE,SAAS;AAAA,IACT,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,SAAS;AAAA,IACT,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,EACP;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,IACP,KAAK;AAAA,EACP;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,KAAK;AAAA,IACL,OAAO;AAAA,EACT;AACF;AAEA,MAAM,WAAW,MAAM;AACrB,SACE,qBAAC,MAAM,UAAN,EACC;AAAA,wBAAC,UAAO,OAAM,YAAW;AAAA,IACzB,qBAAC,aAAU,OAAK,MAAC,WAAU,OACzB;AAAA,0BAAC,QAAG,WAAU,WAAU,sBAAQ;AAAA,MAEhC,qBAAC,QACC;AAAA,6BAAC,KAAK,QAAL,EACC;AAAA,8BAAC,KAAK,OAAL,EAAW,0BAAY;AAAA,UACxB,oBAAC,QAAG,WAAU,4BAA2B,yFAGzC;AAAA,WACF;AAAA,QACA,oBAAC,KAAK,MAAL,EACC;AAAA,UAAC;AAAA;AAAA,YACC,SAAS,CAAC,iBAAiB,eAAe,cAAc;AAAA,YACxD,aAAY;AAAA,YACZ,aAAY;AAAA,YACZ,aAAY;AAAA,YACZ,eAAe;AAAA,cACb,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,OAAO;AAAA,YACT;AAAA,YACA,QAAQ;AAAA,YACR,sBAAsB;AAAA;AAAA,QACxB,GACF;AAAA,SACF;AAAA,OACF;AAAA,KACF;AAEJ;AAEA,eAAe;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937440874,
      "end": 1702937440874,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937440874,
      "end": 1702937440874,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937440874,
      "end": 1702937440874,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937440874,
      "end": 1702937440874,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937440874,
      "end": 1702937440874,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937440874,
      "end": 1702937440874,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937440874,
      "end": 1702937440874,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937440874,
      "end": 1702937440874,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937440875,
      "end": 1702937440875,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937440875,
      "end": 1702937440875,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937440875,
      "end": 1702937440875,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937440875,
      "end": 1702937440875,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937440875,
      "end": 1702937440875,
      "order": "normal"
    }
  ]
}
