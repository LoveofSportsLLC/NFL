{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-i18next/dist/es/useTranslation.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useState, useEffect, useContext, useRef } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace } from './utils.js';\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nexport function useTranslation(ns) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (typeof optsOrDefaultValue === 'string') return optsOrDefaultValue;\n      if (optsOrDefaultValue && typeof optsOrDefaultValue === 'object' && typeof optsOrDefaultValue.defaultValue === 'string') return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react && i18n.options.react.wait !== undefined) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  function getT() {\n    return i18n.getFixedT(props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  }\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getT);\n    }\n    function boundReset() {\n      if (isMounted.current) setT(getT);\n    }\n    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (bindI18n && i18n) bindI18n.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  const isInitial = useRef(true);\n  useEffect(() => {\n    if (isMounted.current && !isInitial.current) {\n      setT(getT);\n    }\n    isInitial.current = false;\n  }, [i18n, keyPrefix]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n}",
      "start": 1702937441220,
      "end": 1702937441296,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    }
  ]
}
