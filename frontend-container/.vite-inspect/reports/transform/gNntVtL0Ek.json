{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/pages/maps/VectorMaps/World.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React, { useEffect, useState } from \"react\";\r\nimport jsVectorMap from \"jsvectormap\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport usePalette from \"../../../hooks/usePalette\";\r\n\r\nfunction World() {\r\n  const palette = usePalette();\r\n  const [debounced, setDebounced] = useState(false);\r\n\r\n  // Workaround, so vector maps work properly in dark mode\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setDebounced(true);\r\n    }, 100);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (debounced) {\r\n      new jsVectorMap({\r\n        selector: \"#maps_world\",\r\n        map: \"world\",\r\n        regionStyle: {\r\n          initial: {\r\n            fill: palette[\"gray-200\"],\r\n          },\r\n        },\r\n        backgroundColor: \"transparent\",\r\n        containerStyle: {\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        },\r\n        zoomOnScroll: false,\r\n      });\r\n    }\r\n  }, [debounced, palette]);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title className=\"mb-0\">World Map</Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <div className=\"map-container\" style={{ height: 300 }}>\r\n          <div id=\"maps_world\" />\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default World;\r\n",
      "start": 1702937441796,
      "end": 1702937441852,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441852,
      "end": 1702937441852,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441852,
      "end": 1702937441852,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from \"react\";\nimport jsVectorMap from \"jsvectormap\";\nimport { Card } from \"react-bootstrap\";\nimport usePalette from \"../../../hooks/usePalette\";\nfunction World() {\n  const palette = usePalette();\n  const [debounced, setDebounced] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setDebounced(true);\n    }, 100);\n  }, []);\n  useEffect(() => {\n    if (debounced) {\n      new jsVectorMap({\n        selector: \"#maps_world\",\n        map: \"world\",\n        regionStyle: {\n          initial: {\n            fill: palette[\"gray-200\"]\n          }\n        },\n        backgroundColor: \"transparent\",\n        containerStyle: {\n          width: \"100%\",\n          height: \"100%\"\n        },\n        zoomOnScroll: false\n      });\n    }\n  }, [debounced, palette]);\n  return /* @__PURE__ */ jsxs(Card, { children: [\n    /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"World Map\" }) }),\n    /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsx(\"div\", { className: \"map-container\", style: { height: 300 }, children: /* @__PURE__ */ jsx(\"div\", { id: \"maps_world\" }) }) })\n  ] });\n}\nexport default World;\n",
      "start": 1702937441852,
      "end": 1702937441855,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/pages/maps/VectorMaps/World.jsx"
        ],
        "sourcesContent": [
          "import React, { useEffect, useState } from \"react\";\r\nimport jsVectorMap from \"jsvectormap\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport usePalette from \"../../../hooks/usePalette\";\r\n\r\nfunction World() {\r\n  const palette = usePalette();\r\n  const [debounced, setDebounced] = useState(false);\r\n\r\n  // Workaround, so vector maps work properly in dark mode\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setDebounced(true);\r\n    }, 100);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (debounced) {\r\n      new jsVectorMap({\r\n        selector: \"#maps_world\",\r\n        map: \"world\",\r\n        regionStyle: {\r\n          initial: {\r\n            fill: palette[\"gray-200\"],\r\n          },\r\n        },\r\n        backgroundColor: \"transparent\",\r\n        containerStyle: {\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n        },\r\n        zoomOnScroll: false,\r\n      });\r\n    }\r\n  }, [debounced, palette]);\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title className=\"mb-0\">World Map</Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <div className=\"map-container\" style={{ height: 300 }}>\r\n          <div id=\"maps_world\" />\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default World;\r\n"
        ],
        "mappings": "AAsCI,SAEI,KAFJ;AAtCJ,OAAO,SAAS,WAAW,gBAAgB;AAC3C,OAAO,iBAAiB;AACxB,SAAS,YAAY;AAErB,OAAO,gBAAgB;AAEvB,SAAS,QAAQ;AACf,QAAM,UAAU,WAAW;AAC3B,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,KAAK;AAGhD,YAAU,MAAM;AACd,eAAW,MAAM;AACf,mBAAa,IAAI;AAAA,IACnB,GAAG,GAAG;AAAA,EACR,GAAG,CAAC,CAAC;AAEL,YAAU,MAAM;AACd,QAAI,WAAW;AACb,UAAI,YAAY;AAAA,QACd,UAAU;AAAA,QACV,KAAK;AAAA,QACL,aAAa;AAAA,UACX,SAAS;AAAA,YACP,MAAM,QAAQ,UAAU;AAAA,UAC1B;AAAA,QACF;AAAA,QACA,iBAAiB;AAAA,QACjB,gBAAgB;AAAA,UACd,OAAO;AAAA,UACP,QAAQ;AAAA,QACV;AAAA,QACA,cAAc;AAAA,MAChB,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,WAAW,OAAO,CAAC;AAEvB,SACE,qBAAC,QACC;AAAA,wBAAC,KAAK,QAAL,EACC,8BAAC,KAAK,OAAL,EAAW,WAAU,QAAO,uBAAS,GACxC;AAAA,IACA,oBAAC,KAAK,MAAL,EACC,8BAAC,SAAI,WAAU,iBAAgB,OAAO,EAAE,QAAQ,IAAI,GAClD,8BAAC,SAAI,IAAG,cAAa,GACvB,GACF;AAAA,KACF;AAEJ;AAEA,eAAe;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937441855,
      "end": 1702937441855,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441855,
      "end": 1702937441855,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441855,
      "end": 1702937441855,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441855,
      "end": 1702937441855,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441856,
      "end": 1702937441856,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441856,
      "end": 1702937441856,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441856,
      "end": 1702937441856,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441856,
      "end": 1702937441856,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441856,
      "end": 1702937441856,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441856,
      "end": 1702937441856,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441856,
      "end": 1702937441856,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441856,
      "end": 1702937441856,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441856,
      "end": 1702937441856,
      "order": "normal"
    }
  ]
}
