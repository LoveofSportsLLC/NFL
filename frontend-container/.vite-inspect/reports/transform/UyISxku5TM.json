{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/@popperjs/core/lib/modifiers/offset.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};",
      "start": 1702937444156,
      "end": 1702937444193,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444193,
      "end": 1702937444193,
      "order": "normal"
    }
  ]
}
