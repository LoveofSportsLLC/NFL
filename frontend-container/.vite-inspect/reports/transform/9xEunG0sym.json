{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/coffeescript.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = coffeescript\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\nfunction coffeescript(Prism) {\n  ;(function (Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: 'variable'\n    }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword:\n        /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          script: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-javascript',\n            inside: Prism.languages.javascript\n          }\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n",
      "start": 1702937444847,
      "end": 1702937444865,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar coffeescript_1;\nvar hasRequiredCoffeescript;\n\nfunction requireCoffeescript () {\n\tif (hasRequiredCoffeescript) return coffeescript_1;\n\thasRequiredCoffeescript = 1;\n\t'use strict'\n\n\tcoffeescript_1 = coffeescript\n\tcoffeescript.displayName = 'coffeescript'\n\tcoffeescript.aliases = ['coffee']\n\tfunction coffeescript(Prism) {\n\t  ;(function (Prism) {\n\t    // Ignore comments starting with { to privilege string interpolation highlighting\n\t    var comment = /#(?!\\{).+/\n\t    var interpolation = {\n\t      pattern: /#\\{[^}]+\\}/,\n\t      alias: 'variable'\n\t    }\n\t    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n\t      comment: comment,\n\t      string: [\n\t        // Strings are multiline\n\t        {\n\t          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n\t          greedy: true\n\t        },\n\t        {\n\t          // Strings are multiline\n\t          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n\t          greedy: true,\n\t          inside: {\n\t            interpolation: interpolation\n\t          }\n\t        }\n\t      ],\n\t      keyword:\n\t        /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n\t      'class-member': {\n\t        pattern: /@(?!\\d)\\w+/,\n\t        alias: 'variable'\n\t      }\n\t    })\n\t    Prism.languages.insertBefore('coffeescript', 'comment', {\n\t      'multiline-comment': {\n\t        pattern: /###[\\s\\S]+?###/,\n\t        alias: 'comment'\n\t      },\n\t      // Block regexp can contain comments and interpolation\n\t      'block-regex': {\n\t        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n\t        alias: 'regex',\n\t        inside: {\n\t          comment: comment,\n\t          interpolation: interpolation\n\t        }\n\t      }\n\t    })\n\t    Prism.languages.insertBefore('coffeescript', 'string', {\n\t      'inline-javascript': {\n\t        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n\t        inside: {\n\t          delimiter: {\n\t            pattern: /^`|`$/,\n\t            alias: 'punctuation'\n\t          },\n\t          script: {\n\t            pattern: /[\\s\\S]+/,\n\t            alias: 'language-javascript',\n\t            inside: Prism.languages.javascript\n\t          }\n\t        }\n\t      },\n\t      // Block strings\n\t      'multiline-string': [\n\t        {\n\t          pattern: /'''[\\s\\S]*?'''/,\n\t          greedy: true,\n\t          alias: 'string'\n\t        },\n\t        {\n\t          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t          greedy: true,\n\t          alias: 'string',\n\t          inside: {\n\t            interpolation: interpolation\n\t          }\n\t        }\n\t      ]\n\t    })\n\t    Prism.languages.insertBefore('coffeescript', 'keyword', {\n\t      // Object property\n\t      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n\t    })\n\t    delete Prism.languages.coffeescript['template-string']\n\t    Prism.languages.coffee = Prism.languages.coffeescript\n\t  })(Prism)\n\t}\n\treturn coffeescript_1;\n}\n\nexport { requireCoffeescript as __require };",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444865,
      "end": 1702937444865,
      "order": "normal"
    }
  ]
}
