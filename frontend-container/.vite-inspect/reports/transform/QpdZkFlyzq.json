{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/rip.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = rip\nrip.displayName = 'rip'\nrip.aliases = []\nfunction rip(Prism) {\n  Prism.languages.rip = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    regex: {\n      pattern:\n        /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\n    builtin: /@|\\bSystem\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n    number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n  }\n}\n",
      "start": 1702937445042,
      "end": 1702937445066,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445066,
      "end": 1702937445066,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445066,
      "end": 1702937445066,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445066,
      "end": 1702937445066,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445066,
      "end": 1702937445066,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445066,
      "end": 1702937445066,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445066,
      "end": 1702937445066,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445066,
      "end": 1702937445066,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445066,
      "end": 1702937445066,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445066,
      "end": 1702937445066,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445066,
      "end": 1702937445066,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar rip_1;\nvar hasRequiredRip;\n\nfunction requireRip () {\n\tif (hasRequiredRip) return rip_1;\n\thasRequiredRip = 1;\n\t'use strict'\n\n\trip_1 = rip\n\trip.displayName = 'rip'\n\trip.aliases = []\n\tfunction rip(Prism) {\n\t  Prism.languages.rip = {\n\t    comment: {\n\t      pattern: /#.*/,\n\t      greedy: true\n\t    },\n\t    char: {\n\t      pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n\t      greedy: true\n\t    },\n\t    string: {\n\t      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t      greedy: true\n\t    },\n\t    regex: {\n\t      pattern:\n\t        /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n\t      lookbehind: true,\n\t      greedy: true\n\t    },\n\t    keyword:\n\t      /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\n\t    builtin: /@|\\bSystem\\b/,\n\t    boolean: /\\b(?:false|true)\\b/,\n\t    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n\t    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n\t    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n\t    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n\t    number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n\t    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n\t    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n\t  }\n\t}\n\treturn rip_1;\n}\n\nexport { requireRip as __require };",
      "start": 1702937445066,
      "end": 1702937445067,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,MAAc,GAAG,GAAG;CACpB,GAAG,CAAC,WAAW,GAAG,KAAK;CACvB,GAAG,CAAC,OAAO,GAAG,EAAE;CAChB,SAAS,GAAG,CAAC,KAAK,EAAE;CACpB,EAAE,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG;CACxB,IAAI,OAAO,EAAE;CACb,MAAM,OAAO,EAAE,KAAK;CACpB,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,IAAI,EAAE;CACV,MAAM,OAAO,EAAE,kCAAkC;CACjD,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,MAAM,EAAE;CACZ,MAAM,OAAO,EAAE,iCAAiC;CAChD,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,KAAK,EAAE;CACX,MAAM,OAAO;CACb,QAAQ,gFAAgF;CACxF,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,OAAO;CACX,MAAM,iFAAiF;CACvF,IAAI,OAAO,EAAE,cAAc;CAC3B,IAAI,OAAO,EAAE,oBAAoB;CACjC,IAAI,IAAI,EAAE,uBAAuB;CACjC,IAAI,IAAI,EAAE,uBAAuB;CACjC,IAAI,QAAQ,EAAE,yCAAyC;CACvD,IAAI,MAAM,EAAE,4DAA4D;CACxE,IAAI,MAAM,EAAE,2BAA2B;CACvC,IAAI,WAAW,EAAE,oCAAoC;CACrD,IAAI,SAAS,EAAE,2DAA2D;CAC1E,GAAG;CACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937445067,
      "end": 1702937445067,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445067,
      "end": 1702937445067,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445067,
      "end": 1702937445067,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445067,
      "end": 1702937445067,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445067,
      "end": 1702937445067,
      "order": "normal"
    }
  ]
}
