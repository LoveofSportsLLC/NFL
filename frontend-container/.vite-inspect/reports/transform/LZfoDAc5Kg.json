{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/@restart/ui/node_modules/uncontrollable/lib/esm/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { useCallback, useRef, useState } from 'react';\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  const wasPropRef = useRef(propValue !== undefined);\n  const [stateValue, setState] = useState(defaultValue);\n  const isProp = propValue !== undefined;\n  const wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n  return [isProp ? propValue : stateValue, useCallback((...args) => {\n    const [value, ...rest] = args;\n    let returnValue = handler == null ? void 0 : handler(value, ...rest);\n    setState(value);\n    return returnValue;\n  }, [handler])];\n}\nexport { useUncontrolledProp };\nexport function useUncontrolled(props, config) {\n  return Object.keys(config).reduce((result, fieldName) => {\n    const _ref = result,\n      _defaultKey = defaultKey(fieldName),\n      {\n        [_defaultKey]: defaultValue,\n        [fieldName]: propsValue\n      } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [_defaultKey, fieldName].map(_toPropertyKey));\n    const handlerName = config[fieldName];\n    const [value, handler] = useUncontrolledProp(propsValue, defaultValue, props[handlerName]);\n    return Object.assign({}, rest, {\n      [fieldName]: value,\n      [handlerName]: handler\n    });\n  }, props);\n}",
      "start": 1702937443117,
      "end": 1702937443141,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937443141,
      "end": 1702937443141,
      "order": "normal"
    }
  ]
}
