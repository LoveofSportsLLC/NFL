{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/OffcanvasToggling.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;",
      "start": 1702937441501,
      "end": 1702937441523,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441523,
      "end": 1702937441523,
      "order": "normal"
    }
  ]
}
