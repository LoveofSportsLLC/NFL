{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/pages/ui/Alerts.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Button, Card, Col, Container, Row, Alert } from \"react-bootstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBell } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst colors = [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\"];\r\n\r\nconst DefaultAlerts = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Default alerts</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Alerts with contextual background color.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      {colors.map((color, key) => (\r\n        <Alert variant={color} key={key} dismissible>\r\n          <div className=\"alert-message\">\r\n            <strong>Hello there!</strong> A simple {color} alert—check it out!\r\n          </div>\r\n        </Alert>\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst IconAlerts = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Icon alerts</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Alerts with icon and background color.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      {colors.map((color, key) => (\r\n        <Alert variant={color} key={key} dismissible>\r\n          <div className=\"alert-icon\">\r\n            <FontAwesomeIcon icon={faBell} fixedWidth />\r\n          </div>\r\n          <div className=\"alert-message\">\r\n            <strong>Hello there!</strong> A simple {color} alert—check it out!\r\n          </div>\r\n        </Alert>\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst OutlineAlerts = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Outline alerts</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Alerts with contextual icon background.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      {colors.map((color, key) => (\r\n        <Alert variant={color} className=\"alert-outline\" key={key} dismissible>\r\n          <div className=\"alert-icon\">\r\n            <FontAwesomeIcon icon={faBell} fixedWidth />\r\n          </div>\r\n          <div className=\"alert-message\">\r\n            <strong>Hello there!</strong> A simple {color} alert—check it out!\r\n          </div>\r\n        </Alert>\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst ColouredOutlineAlerts = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Colored outline alerts</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Alerts with contextual outline color.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      {colors.map((color, key) => (\r\n        <Alert\r\n          variant={color}\r\n          className=\"alert-outline-coloured\"\r\n          key={key}\r\n          dismissible\r\n        >\r\n          <div className=\"alert-icon\">\r\n            <FontAwesomeIcon icon={faBell} fixedWidth />\r\n          </div>\r\n          <div className=\"alert-message\">\r\n            <strong>Hello there!</strong> A simple {color} alert—check it out!\r\n          </div>\r\n        </Alert>\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst AdditionalContentAlerts = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Alerts with additonal content</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">Alerts with large contents.</h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Alert variant=\"primary\" dismissible>\r\n        <div className=\"alert-message\">\r\n          <h4 className=\"alert-heading\">Well done!</h4>\r\n          <p>\r\n            Aww yeah, you successfully read this important alert message. This\r\n            example text is going to run a bit longer so that you can see how\r\n            spacing within an alert works with this kind of content.\r\n          </p>\r\n          <hr />\r\n          <p className=\"mb-0\">\r\n            Whenever you need to, be sure to use margin utilities to keep things\r\n            nice and tidy.\r\n          </p>\r\n        </div>\r\n      </Alert>\r\n      <Alert variant=\"primary\" className=\"alert-outline\" dismissible>\r\n        <div className=\"alert-message\">\r\n          <h4 className=\"alert-heading\">Well done!</h4>\r\n          <p>\r\n            Aww yeah, you successfully read this important alert message. This\r\n            example text is going to run a bit longer so that you can see how\r\n            spacing within an alert works with this kind of content.\r\n          </p>\r\n          <hr />\r\n          <p className=\"mb-0\">\r\n            Whenever you need to, be sure to use margin utilities to keep things\r\n            nice and tidy.\r\n          </p>\r\n        </div>\r\n      </Alert>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst AlertsWithButtons = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Alerts with buttons</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">Alerts with actions.</h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Alert variant=\"primary\" dismissible>\r\n        <div className=\"alert-message\">\r\n          <h4 className=\"alert-heading\">Well done!</h4>\r\n          <p>\r\n            Aww yeah, you successfully read this important alert message. This\r\n            example text is going to run a bit longer so that you can see how\r\n            spacing within an alert works with this kind of content.\r\n          </p>\r\n          <hr />\r\n          <div className=\"btn-list\">\r\n            <Button variant=\"light\" className=\"me-1\">\r\n              Okay\r\n            </Button>\r\n            <Button variant=\"secondary\">No, thanks</Button>\r\n          </div>\r\n        </div>\r\n      </Alert>\r\n      <Alert variant=\"primary\" className=\"alert-outline\" dismissible>\r\n        <div className=\"alert-message\">\r\n          <h4 className=\"alert-heading\">Well done!</h4>\r\n          <p>\r\n            Aww yeah, you successfully read this important alert message. This\r\n            example text is going to run a bit longer so that you can see how\r\n            spacing within an alert works with this kind of content.\r\n          </p>\r\n          <hr />\r\n          <div className=\"btn-list\">\r\n            <Button variant=\"success\" className=\"me-1\">\r\n              Okay\r\n            </Button>\r\n            <Button variant=\"danger\">No, thanks</Button>\r\n          </div>\r\n        </div>\r\n      </Alert>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Alerts = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Alerts\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Alerts</h1>\r\n\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <DefaultAlerts />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <IconAlerts />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <OutlineAlerts />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <ColouredOutlineAlerts />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <AdditionalContentAlerts />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <AlertsWithButtons />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Alerts;\r\n",
      "start": 1702937436868,
      "end": 1702937436963,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937436963,
      "end": 1702937436963,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937436963,
      "end": 1702937436963,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Button, Card, Col, Container, Row, Alert } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBell } from \"@fortawesome/free-regular-svg-icons\";\nconst colors = [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\"];\nconst DefaultAlerts = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsxs(Card.Header, { children: [\n    /* @__PURE__ */ jsx(Card.Title, { children: \"Default alerts\" }),\n    /* @__PURE__ */ jsx(\"h6\", { className: \"card-subtitle text-muted\", children: \"Alerts with contextual background color.\" })\n  ] }),\n  /* @__PURE__ */ jsx(Card.Body, { children: colors.map((color, key) => /* @__PURE__ */ jsx(Alert, { variant: color, dismissible: true, children: /* @__PURE__ */ jsxs(\"div\", { className: \"alert-message\", children: [\n    /* @__PURE__ */ jsx(\"strong\", { children: \"Hello there!\" }),\n    \" A simple \",\n    color,\n    \" alert—check it out!\"\n  ] }) }, key)) })\n] });\nconst IconAlerts = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsxs(Card.Header, { children: [\n    /* @__PURE__ */ jsx(Card.Title, { children: \"Icon alerts\" }),\n    /* @__PURE__ */ jsx(\"h6\", { className: \"card-subtitle text-muted\", children: \"Alerts with icon and background color.\" })\n  ] }),\n  /* @__PURE__ */ jsx(Card.Body, { children: colors.map((color, key) => /* @__PURE__ */ jsxs(Alert, { variant: color, dismissible: true, children: [\n    /* @__PURE__ */ jsx(\"div\", { className: \"alert-icon\", children: /* @__PURE__ */ jsx(FontAwesomeIcon, { icon: faBell, fixedWidth: true }) }),\n    /* @__PURE__ */ jsxs(\"div\", { className: \"alert-message\", children: [\n      /* @__PURE__ */ jsx(\"strong\", { children: \"Hello there!\" }),\n      \" A simple \",\n      color,\n      \" alert—check it out!\"\n    ] })\n  ] }, key)) })\n] });\nconst OutlineAlerts = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsxs(Card.Header, { children: [\n    /* @__PURE__ */ jsx(Card.Title, { children: \"Outline alerts\" }),\n    /* @__PURE__ */ jsx(\"h6\", { className: \"card-subtitle text-muted\", children: \"Alerts with contextual icon background.\" })\n  ] }),\n  /* @__PURE__ */ jsx(Card.Body, { children: colors.map((color, key) => /* @__PURE__ */ jsxs(Alert, { variant: color, className: \"alert-outline\", dismissible: true, children: [\n    /* @__PURE__ */ jsx(\"div\", { className: \"alert-icon\", children: /* @__PURE__ */ jsx(FontAwesomeIcon, { icon: faBell, fixedWidth: true }) }),\n    /* @__PURE__ */ jsxs(\"div\", { className: \"alert-message\", children: [\n      /* @__PURE__ */ jsx(\"strong\", { children: \"Hello there!\" }),\n      \" A simple \",\n      color,\n      \" alert—check it out!\"\n    ] })\n  ] }, key)) })\n] });\nconst ColouredOutlineAlerts = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsxs(Card.Header, { children: [\n    /* @__PURE__ */ jsx(Card.Title, { children: \"Colored outline alerts\" }),\n    /* @__PURE__ */ jsx(\"h6\", { className: \"card-subtitle text-muted\", children: \"Alerts with contextual outline color.\" })\n  ] }),\n  /* @__PURE__ */ jsx(Card.Body, { children: colors.map((color, key) => /* @__PURE__ */ jsxs(\n    Alert,\n    {\n      variant: color,\n      className: \"alert-outline-coloured\",\n      dismissible: true,\n      children: [\n        /* @__PURE__ */ jsx(\"div\", { className: \"alert-icon\", children: /* @__PURE__ */ jsx(FontAwesomeIcon, { icon: faBell, fixedWidth: true }) }),\n        /* @__PURE__ */ jsxs(\"div\", { className: \"alert-message\", children: [\n          /* @__PURE__ */ jsx(\"strong\", { children: \"Hello there!\" }),\n          \" A simple \",\n          color,\n          \" alert—check it out!\"\n        ] })\n      ]\n    },\n    key\n  )) })\n] });\nconst AdditionalContentAlerts = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsxs(Card.Header, { children: [\n    /* @__PURE__ */ jsx(Card.Title, { children: \"Alerts with additonal content\" }),\n    /* @__PURE__ */ jsx(\"h6\", { className: \"card-subtitle text-muted\", children: \"Alerts with large contents.\" })\n  ] }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsx(Alert, { variant: \"primary\", dismissible: true, children: /* @__PURE__ */ jsxs(\"div\", { className: \"alert-message\", children: [\n      /* @__PURE__ */ jsx(\"h4\", { className: \"alert-heading\", children: \"Well done!\" }),\n      /* @__PURE__ */ jsx(\"p\", { children: \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\" }),\n      /* @__PURE__ */ jsx(\"hr\", {}),\n      /* @__PURE__ */ jsx(\"p\", { className: \"mb-0\", children: \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\" })\n    ] }) }),\n    /* @__PURE__ */ jsx(Alert, { variant: \"primary\", className: \"alert-outline\", dismissible: true, children: /* @__PURE__ */ jsxs(\"div\", { className: \"alert-message\", children: [\n      /* @__PURE__ */ jsx(\"h4\", { className: \"alert-heading\", children: \"Well done!\" }),\n      /* @__PURE__ */ jsx(\"p\", { children: \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\" }),\n      /* @__PURE__ */ jsx(\"hr\", {}),\n      /* @__PURE__ */ jsx(\"p\", { className: \"mb-0\", children: \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\" })\n    ] }) })\n  ] })\n] });\nconst AlertsWithButtons = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsxs(Card.Header, { children: [\n    /* @__PURE__ */ jsx(Card.Title, { children: \"Alerts with buttons\" }),\n    /* @__PURE__ */ jsx(\"h6\", { className: \"card-subtitle text-muted\", children: \"Alerts with actions.\" })\n  ] }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsx(Alert, { variant: \"primary\", dismissible: true, children: /* @__PURE__ */ jsxs(\"div\", { className: \"alert-message\", children: [\n      /* @__PURE__ */ jsx(\"h4\", { className: \"alert-heading\", children: \"Well done!\" }),\n      /* @__PURE__ */ jsx(\"p\", { children: \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\" }),\n      /* @__PURE__ */ jsx(\"hr\", {}),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"btn-list\", children: [\n        /* @__PURE__ */ jsx(Button, { variant: \"light\", className: \"me-1\", children: \"Okay\" }),\n        /* @__PURE__ */ jsx(Button, { variant: \"secondary\", children: \"No, thanks\" })\n      ] })\n    ] }) }),\n    /* @__PURE__ */ jsx(Alert, { variant: \"primary\", className: \"alert-outline\", dismissible: true, children: /* @__PURE__ */ jsxs(\"div\", { className: \"alert-message\", children: [\n      /* @__PURE__ */ jsx(\"h4\", { className: \"alert-heading\", children: \"Well done!\" }),\n      /* @__PURE__ */ jsx(\"p\", { children: \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\" }),\n      /* @__PURE__ */ jsx(\"hr\", {}),\n      /* @__PURE__ */ jsxs(\"div\", { className: \"btn-list\", children: [\n        /* @__PURE__ */ jsx(Button, { variant: \"success\", className: \"me-1\", children: \"Okay\" }),\n        /* @__PURE__ */ jsx(Button, { variant: \"danger\", children: \"No, thanks\" })\n      ] })\n    ] }) })\n  ] })\n] });\nconst Alerts = () => /* @__PURE__ */ jsxs(React.Fragment, { children: [\n  /* @__PURE__ */ jsx(Helmet, { title: \"Alerts\" }),\n  /* @__PURE__ */ jsxs(Container, { fluid: true, className: \"p-0\", children: [\n    /* @__PURE__ */ jsx(\"h1\", { className: \"h3 mb-3\", children: \"Alerts\" }),\n    /* @__PURE__ */ jsxs(Row, { children: [\n      /* @__PURE__ */ jsx(Col, { lg: \"6\", children: /* @__PURE__ */ jsx(DefaultAlerts, {}) }),\n      /* @__PURE__ */ jsx(Col, { lg: \"6\", children: /* @__PURE__ */ jsx(IconAlerts, {}) }),\n      /* @__PURE__ */ jsx(Col, { lg: \"6\", children: /* @__PURE__ */ jsx(OutlineAlerts, {}) }),\n      /* @__PURE__ */ jsx(Col, { lg: \"6\", children: /* @__PURE__ */ jsx(ColouredOutlineAlerts, {}) }),\n      /* @__PURE__ */ jsx(Col, { lg: \"6\", children: /* @__PURE__ */ jsx(AdditionalContentAlerts, {}) }),\n      /* @__PURE__ */ jsx(Col, { lg: \"6\", children: /* @__PURE__ */ jsx(AlertsWithButtons, {}) })\n    ] })\n  ] })\n] });\nexport default Alerts;\n",
      "start": 1702937436963,
      "end": 1702937436967,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/pages/ui/Alerts.jsx"
        ],
        "sourcesContent": [
          "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Button, Card, Col, Container, Row, Alert } from \"react-bootstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBell } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst colors = [\"primary\", \"secondary\", \"success\", \"danger\", \"warning\", \"info\"];\r\n\r\nconst DefaultAlerts = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Default alerts</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Alerts with contextual background color.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      {colors.map((color, key) => (\r\n        <Alert variant={color} key={key} dismissible>\r\n          <div className=\"alert-message\">\r\n            <strong>Hello there!</strong> A simple {color} alert—check it out!\r\n          </div>\r\n        </Alert>\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst IconAlerts = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Icon alerts</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Alerts with icon and background color.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      {colors.map((color, key) => (\r\n        <Alert variant={color} key={key} dismissible>\r\n          <div className=\"alert-icon\">\r\n            <FontAwesomeIcon icon={faBell} fixedWidth />\r\n          </div>\r\n          <div className=\"alert-message\">\r\n            <strong>Hello there!</strong> A simple {color} alert—check it out!\r\n          </div>\r\n        </Alert>\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst OutlineAlerts = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Outline alerts</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Alerts with contextual icon background.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      {colors.map((color, key) => (\r\n        <Alert variant={color} className=\"alert-outline\" key={key} dismissible>\r\n          <div className=\"alert-icon\">\r\n            <FontAwesomeIcon icon={faBell} fixedWidth />\r\n          </div>\r\n          <div className=\"alert-message\">\r\n            <strong>Hello there!</strong> A simple {color} alert—check it out!\r\n          </div>\r\n        </Alert>\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst ColouredOutlineAlerts = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Colored outline alerts</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">\r\n        Alerts with contextual outline color.\r\n      </h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      {colors.map((color, key) => (\r\n        <Alert\r\n          variant={color}\r\n          className=\"alert-outline-coloured\"\r\n          key={key}\r\n          dismissible\r\n        >\r\n          <div className=\"alert-icon\">\r\n            <FontAwesomeIcon icon={faBell} fixedWidth />\r\n          </div>\r\n          <div className=\"alert-message\">\r\n            <strong>Hello there!</strong> A simple {color} alert—check it out!\r\n          </div>\r\n        </Alert>\r\n      ))}\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst AdditionalContentAlerts = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Alerts with additonal content</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">Alerts with large contents.</h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Alert variant=\"primary\" dismissible>\r\n        <div className=\"alert-message\">\r\n          <h4 className=\"alert-heading\">Well done!</h4>\r\n          <p>\r\n            Aww yeah, you successfully read this important alert message. This\r\n            example text is going to run a bit longer so that you can see how\r\n            spacing within an alert works with this kind of content.\r\n          </p>\r\n          <hr />\r\n          <p className=\"mb-0\">\r\n            Whenever you need to, be sure to use margin utilities to keep things\r\n            nice and tidy.\r\n          </p>\r\n        </div>\r\n      </Alert>\r\n      <Alert variant=\"primary\" className=\"alert-outline\" dismissible>\r\n        <div className=\"alert-message\">\r\n          <h4 className=\"alert-heading\">Well done!</h4>\r\n          <p>\r\n            Aww yeah, you successfully read this important alert message. This\r\n            example text is going to run a bit longer so that you can see how\r\n            spacing within an alert works with this kind of content.\r\n          </p>\r\n          <hr />\r\n          <p className=\"mb-0\">\r\n            Whenever you need to, be sure to use margin utilities to keep things\r\n            nice and tidy.\r\n          </p>\r\n        </div>\r\n      </Alert>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst AlertsWithButtons = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title>Alerts with buttons</Card.Title>\r\n      <h6 className=\"card-subtitle text-muted\">Alerts with actions.</h6>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Alert variant=\"primary\" dismissible>\r\n        <div className=\"alert-message\">\r\n          <h4 className=\"alert-heading\">Well done!</h4>\r\n          <p>\r\n            Aww yeah, you successfully read this important alert message. This\r\n            example text is going to run a bit longer so that you can see how\r\n            spacing within an alert works with this kind of content.\r\n          </p>\r\n          <hr />\r\n          <div className=\"btn-list\">\r\n            <Button variant=\"light\" className=\"me-1\">\r\n              Okay\r\n            </Button>\r\n            <Button variant=\"secondary\">No, thanks</Button>\r\n          </div>\r\n        </div>\r\n      </Alert>\r\n      <Alert variant=\"primary\" className=\"alert-outline\" dismissible>\r\n        <div className=\"alert-message\">\r\n          <h4 className=\"alert-heading\">Well done!</h4>\r\n          <p>\r\n            Aww yeah, you successfully read this important alert message. This\r\n            example text is going to run a bit longer so that you can see how\r\n            spacing within an alert works with this kind of content.\r\n          </p>\r\n          <hr />\r\n          <div className=\"btn-list\">\r\n            <Button variant=\"success\" className=\"me-1\">\r\n              Okay\r\n            </Button>\r\n            <Button variant=\"danger\">No, thanks</Button>\r\n          </div>\r\n        </div>\r\n      </Alert>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Alerts = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Alerts\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Alerts</h1>\r\n\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <DefaultAlerts />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <IconAlerts />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <OutlineAlerts />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <ColouredOutlineAlerts />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <AdditionalContentAlerts />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <AlertsWithButtons />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Alerts;\r\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937436967,
      "end": 1702937436967,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937436967,
      "end": 1702937436967,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937436967,
      "end": 1702937436967,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937436967,
      "end": 1702937436967,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937436967,
      "end": 1702937436967,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937436967,
      "end": 1702937436967,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937436967,
      "end": 1702937436967,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937436967,
      "end": 1702937436967,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937436967,
      "end": 1702937436967,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937436967,
      "end": 1702937436967,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937436967,
      "end": 1702937436967,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937436967,
      "end": 1702937436968,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937436968,
      "end": 1702937436968,
      "order": "normal"
    }
  ]
}
