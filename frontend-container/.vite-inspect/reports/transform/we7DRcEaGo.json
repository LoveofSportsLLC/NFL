{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/aspnet.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = aspnet\naspnet.displayName = 'aspnet'\naspnet.aliases = []\nfunction aspnet(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive': {\n      pattern: /<%\\s*@.*%>/,\n      alias: 'tag',\n      inside: {\n        'page-directive': {\n          pattern:\n            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          alias: 'tag'\n        },\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    directive: {\n      pattern: /<%.*%>/,\n      alias: 'tag',\n      inside: {\n        directive: {\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.csharp\n      }\n    }\n  }) // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern =\n    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/ // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      directive: Prism.languages.aspnet['directive']\n    },\n    Prism.languages.aspnet.tag.inside['attr-value']\n  )\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp-comment': {\n      pattern: /<%--[\\s\\S]*?--%>/,\n      alias: ['asp', 'comment']\n    }\n  }) // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore(\n    'aspnet',\n    Prism.languages.javascript ? 'script' : 'tag',\n    {\n      'asp-script': {\n        pattern:\n          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        alias: ['asp', 'script'],\n        inside: Prism.languages.csharp || {}\n      }\n    }\n  )\n}\n",
      "start": 1702937444809,
      "end": 1702937444836,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/csharp.js?commonjs-wrapped\";\n\nvar aspnet_1;\nvar hasRequiredAspnet;\n\nfunction requireAspnet () {\n\tif (hasRequiredAspnet) return aspnet_1;\n\thasRequiredAspnet = 1;\n\t'use strict'\n\tvar refractorCsharp = require$$0()\n\taspnet_1 = aspnet\n\taspnet.displayName = 'aspnet'\n\taspnet.aliases = []\n\tfunction aspnet(Prism) {\n\t  Prism.register(refractorCsharp)\n\t  Prism.languages.aspnet = Prism.languages.extend('markup', {\n\t    'page-directive': {\n\t      pattern: /<%\\s*@.*%>/,\n\t      alias: 'tag',\n\t      inside: {\n\t        'page-directive': {\n\t          pattern:\n\t            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n\t          alias: 'tag'\n\t        },\n\t        rest: Prism.languages.markup.tag.inside\n\t      }\n\t    },\n\t    directive: {\n\t      pattern: /<%.*%>/,\n\t      alias: 'tag',\n\t      inside: {\n\t        directive: {\n\t          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n\t          alias: 'tag'\n\t        },\n\t        rest: Prism.languages.csharp\n\t      }\n\t    }\n\t  }) // Regexp copied from prism-markup, with a negative look-ahead added\n\t  Prism.languages.aspnet.tag.pattern =\n\t    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/ // match directives of attribute value foo=\"<% Bar %>\"\n\t  Prism.languages.insertBefore(\n\t    'inside',\n\t    'punctuation',\n\t    {\n\t      directive: Prism.languages.aspnet['directive']\n\t    },\n\t    Prism.languages.aspnet.tag.inside['attr-value']\n\t  )\n\t  Prism.languages.insertBefore('aspnet', 'comment', {\n\t    'asp-comment': {\n\t      pattern: /<%--[\\s\\S]*?--%>/,\n\t      alias: ['asp', 'comment']\n\t    }\n\t  }) // script runat=\"server\" contains csharp, not javascript\n\t  Prism.languages.insertBefore(\n\t    'aspnet',\n\t    Prism.languages.javascript ? 'script' : 'tag',\n\t    {\n\t      'asp-script': {\n\t        pattern:\n\t          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n\t        lookbehind: true,\n\t        alias: ['asp', 'script'],\n\t        inside: Prism.languages.csharp || {}\n\t      }\n\t    }\n\t  )\n\t}\n\treturn aspnet_1;\n}\n\nexport { requireAspnet as __require };",
      "start": 1702937444836,
      "end": 1702937444876,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;;CAAA,YAAY;CACZ,IAAI,eAAe,GAAG,YAAsB;AAC5C,SAAc,GAAG,MAAM;CACvB,MAAM,CAAC,WAAW,GAAG,QAAQ;CAC7B,MAAM,CAAC,OAAO,GAAG,EAAE;CACnB,SAAS,MAAM,CAAC,KAAK,EAAE;CACvB,EAAE,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC;CACjC,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE;CAC5D,IAAI,gBAAgB,EAAE;CACtB,MAAM,OAAO,EAAE,YAAY;CAC3B,MAAM,KAAK,EAAE,KAAK;CAClB,MAAM,MAAM,EAAE;CACd,QAAQ,gBAAgB,EAAE;CAC1B,UAAU,OAAO;CACjB,YAAY,2HAA2H;CACvI,UAAU,KAAK,EAAE,KAAK;CACtB,SAAS;CACT,QAAQ,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM;CAC/C,OAAO;CACP,KAAK;CACL,IAAI,SAAS,EAAE;CACf,MAAM,OAAO,EAAE,QAAQ;CACvB,MAAM,KAAK,EAAE,KAAK;CAClB,MAAM,MAAM,EAAE;CACd,QAAQ,SAAS,EAAE;CACnB,UAAU,OAAO,EAAE,uBAAuB;CAC1C,UAAU,KAAK,EAAE,KAAK;CACtB,SAAS;CACT,QAAQ,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM;CACpC,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO;CACpC,IAAI,kGAAkG;CACtG,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY;CAC9B,IAAI,QAAQ;CACZ,IAAI,aAAa;CACjB,IAAI;CACJ,MAAM,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC;CACpD,KAAK;CACL,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;CACnD,GAAG;CACH,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,EAAE;CACpD,IAAI,aAAa,EAAE;CACnB,MAAM,OAAO,EAAE,kBAAkB;CACjC,MAAM,KAAK,EAAE,CAAC,KAAK,EAAE,SAAS,CAAC;CAC/B,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY;CAC9B,IAAI,QAAQ;CACZ,IAAI,KAAK,CAAC,SAAS,CAAC,UAAU,GAAG,QAAQ,GAAG,KAAK;CACjD,IAAI;CACJ,MAAM,YAAY,EAAE;CACpB,QAAQ,OAAO;CACf,UAAU,iEAAiE;CAC3E,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,KAAK,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC;CAChC,QAAQ,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,IAAI,EAAE;CAC5C,OAAO;CACP,KAAK;CACL,GAAG;CACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937444876,
      "end": 1702937444876,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444876,
      "end": 1702937444876,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444876,
      "end": 1702937444876,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444876,
      "end": 1702937444876,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444876,
      "end": 1702937444876,
      "order": "normal"
    }
  ]
}
