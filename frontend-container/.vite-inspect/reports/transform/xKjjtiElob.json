{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/pages/forms/BasicInputs.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Card, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nconst InputComponent = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Input</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Control type=\"text\" name=\"input\" placeholder=\"Input\" />\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst TextareaComponent = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Textarea</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Control as=\"textarea\" name=\"input\" placeholder=\"Textarea\" />\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Checkboxes = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Checkboxes</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check\r\n          label=\"Option one is this and that—be sure to\r\n          include why it's great\"\r\n          type=\"checkbox\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check label=\"Option two is disabled\" type=\"checkbox\" disabled />\r\n      </Form.Group>\r\n\r\n      <Form>\r\n        <Form.Check inline label=\"1\" type=\"checkbox\" />\r\n        <Form.Check inline label=\"2\" type=\"checkbox\" />\r\n        <Form.Check inline label=\"3\" type=\"checkbox\" disabled />\r\n      </Form>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Sizes = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Sizes</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Large input\"\r\n        size=\"lg\"\r\n        className=\"mb-3\"\r\n      />\r\n      <Form.Control type=\"text\" placeholder=\"Medium input\" className=\"mb-3\" />\r\n      <Form.Control type=\"text\" placeholder=\"Small input\" size=\"sm\" />\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Radios = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Radios</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check\r\n          label=\"Option one is this and that—be sure to include why it's great\"\r\n          type=\"radio\"\r\n          name=\"radios-example\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check\r\n          label=\"Option two can be something else and selecting it will deselect option one\"\r\n          type=\"radio\"\r\n          name=\"radios-example\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check\r\n          label=\"Option two is disabled\"\r\n          type=\"radio\"\r\n          disabled\r\n          name=\"radios-example\"\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form>\r\n        <Form.Check inline label=\"1\" type=\"radio\" name=\"radios-example-2\" />\r\n        <Form.Check inline label=\"2\" type=\"radio\" name=\"radios-example-2\" />\r\n        <Form.Check\r\n          inline\r\n          label=\"3\"\r\n          type=\"radio\"\r\n          name=\"radios-example-2\"\r\n          disabled\r\n        />\r\n      </Form>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Switches = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Switches</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Check\r\n        type=\"switch\"\r\n        id=\"exampleCustomSwitch\"\r\n        name=\"customSwitch\"\r\n        label=\"Toggle this switch element\"\r\n      />\r\n      <Form.Check\r\n        type=\"switch\"\r\n        id=\"exampleCustomSwitch1\"\r\n        label=\"Disabled switch element\"\r\n        disabled\r\n      />\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Selects = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Selects</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Select\r\n        id=\"exampleCustomSelect\"\r\n        name=\"customSelect\"\r\n        className=\"mb-3\"\r\n      >\r\n        <option value=\"\">Open this select menu</option>\r\n        <option>One</option>\r\n        <option>Two</option>\r\n        <option>Three</option>\r\n      </Form.Select>\r\n\r\n      <Form.Select\r\n        id=\"exampleCustomSelectMultiple\"\r\n        name=\"customSelectMultiple\"\r\n        multiple\r\n      >\r\n        <option value=\"\">Open this select menu</option>\r\n        <option>One</option>\r\n        <option>Two</option>\r\n        <option>Three</option>\r\n      </Form.Select>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Disabled = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Disabled</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label htmlFor=\"disabledInput\">Disabled input</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"disabledInput\"\r\n          id=\"disabledInput\"\r\n          placeholder=\"Disabled input\"\r\n          disabled\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label htmlFor=\"disabledSelect\">Disabled select menu</Form.Label>\r\n        <Form.Select name=\"disabledSelect\" id=\"disabledSelect\" disabled>\r\n          <option value=\"\">Disabled select</option>\r\n          <option>...</option>\r\n          <option>...</option>\r\n          <option>...</option>\r\n        </Form.Select>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check label=\"Can't check this\" type=\"checkbox\" disabled />\r\n      </Form.Group>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst ReadOnly = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Read only</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"readonlyInput\"\r\n        id=\"readonlyInput\"\r\n        placeholder=\"Readonly input\"\r\n        readOnly\r\n      />\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst BasicInputs = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Basic Inputs\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Basic Inputs</h1>\r\n\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <InputComponent />\r\n          <TextareaComponent />\r\n          <Checkboxes />\r\n          <Sizes />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <Radios />\r\n          <Switches />\r\n          <Selects />\r\n          <Disabled />\r\n          <ReadOnly />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default BasicInputs;\r\n",
      "start": 1702937436961,
      "end": 1702937440808,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937440808,
      "end": 1702937440808,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937440808,
      "end": 1702937440808,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Card, Col, Container, Form, Row } from \"react-bootstrap\";\nconst InputComponent = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Input\" }) }),\n  /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsx(Form.Control, { type: \"text\", name: \"input\", placeholder: \"Input\" }) })\n] });\nconst TextareaComponent = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Textarea\" }) }),\n  /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsx(Form.Control, { as: \"textarea\", name: \"input\", placeholder: \"Textarea\" }) })\n] });\nconst Checkboxes = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Checkboxes\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsx(Form.Group, { className: \"mb-2\", children: /* @__PURE__ */ jsx(\n      Form.Check,\n      {\n        label: \"Option one is this and that—be sure to\\r\\n          include why it's great\",\n        type: \"checkbox\"\n      }\n    ) }),\n    /* @__PURE__ */ jsx(Form.Group, { className: \"mb-2\", children: /* @__PURE__ */ jsx(Form.Check, { label: \"Option two is disabled\", type: \"checkbox\", disabled: true }) }),\n    /* @__PURE__ */ jsxs(Form, { children: [\n      /* @__PURE__ */ jsx(Form.Check, { inline: true, label: \"1\", type: \"checkbox\" }),\n      /* @__PURE__ */ jsx(Form.Check, { inline: true, label: \"2\", type: \"checkbox\" }),\n      /* @__PURE__ */ jsx(Form.Check, { inline: true, label: \"3\", type: \"checkbox\", disabled: true })\n    ] })\n  ] })\n] });\nconst Sizes = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Sizes\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsx(\n      Form.Control,\n      {\n        type: \"text\",\n        placeholder: \"Large input\",\n        size: \"lg\",\n        className: \"mb-3\"\n      }\n    ),\n    /* @__PURE__ */ jsx(Form.Control, { type: \"text\", placeholder: \"Medium input\", className: \"mb-3\" }),\n    /* @__PURE__ */ jsx(Form.Control, { type: \"text\", placeholder: \"Small input\", size: \"sm\" })\n  ] })\n] });\nconst Radios = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Radios\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsx(Form.Group, { className: \"mb-2\", children: /* @__PURE__ */ jsx(\n      Form.Check,\n      {\n        label: \"Option one is this and that—be sure to include why it's great\",\n        type: \"radio\",\n        name: \"radios-example\"\n      }\n    ) }),\n    /* @__PURE__ */ jsx(Form.Group, { className: \"mb-2\", children: /* @__PURE__ */ jsx(\n      Form.Check,\n      {\n        label: \"Option two can be something else and selecting it will deselect option one\",\n        type: \"radio\",\n        name: \"radios-example\"\n      }\n    ) }),\n    /* @__PURE__ */ jsx(Form.Group, { className: \"mb-2\", children: /* @__PURE__ */ jsx(\n      Form.Check,\n      {\n        label: \"Option two is disabled\",\n        type: \"radio\",\n        disabled: true,\n        name: \"radios-example\"\n      }\n    ) }),\n    /* @__PURE__ */ jsxs(Form, { children: [\n      /* @__PURE__ */ jsx(Form.Check, { inline: true, label: \"1\", type: \"radio\", name: \"radios-example-2\" }),\n      /* @__PURE__ */ jsx(Form.Check, { inline: true, label: \"2\", type: \"radio\", name: \"radios-example-2\" }),\n      /* @__PURE__ */ jsx(\n        Form.Check,\n        {\n          inline: true,\n          label: \"3\",\n          type: \"radio\",\n          name: \"radios-example-2\",\n          disabled: true\n        }\n      )\n    ] })\n  ] })\n] });\nconst Switches = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Switches\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsx(\n      Form.Check,\n      {\n        type: \"switch\",\n        id: \"exampleCustomSwitch\",\n        name: \"customSwitch\",\n        label: \"Toggle this switch element\"\n      }\n    ),\n    /* @__PURE__ */ jsx(\n      Form.Check,\n      {\n        type: \"switch\",\n        id: \"exampleCustomSwitch1\",\n        label: \"Disabled switch element\",\n        disabled: true\n      }\n    )\n  ] })\n] });\nconst Selects = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Selects\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsxs(\n      Form.Select,\n      {\n        id: \"exampleCustomSelect\",\n        name: \"customSelect\",\n        className: \"mb-3\",\n        children: [\n          /* @__PURE__ */ jsx(\"option\", { value: \"\", children: \"Open this select menu\" }),\n          /* @__PURE__ */ jsx(\"option\", { children: \"One\" }),\n          /* @__PURE__ */ jsx(\"option\", { children: \"Two\" }),\n          /* @__PURE__ */ jsx(\"option\", { children: \"Three\" })\n        ]\n      }\n    ),\n    /* @__PURE__ */ jsxs(\n      Form.Select,\n      {\n        id: \"exampleCustomSelectMultiple\",\n        name: \"customSelectMultiple\",\n        multiple: true,\n        children: [\n          /* @__PURE__ */ jsx(\"option\", { value: \"\", children: \"Open this select menu\" }),\n          /* @__PURE__ */ jsx(\"option\", { children: \"One\" }),\n          /* @__PURE__ */ jsx(\"option\", { children: \"Two\" }),\n          /* @__PURE__ */ jsx(\"option\", { children: \"Three\" })\n        ]\n      }\n    )\n  ] })\n] });\nconst Disabled = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Disabled\" }) }),\n  /* @__PURE__ */ jsxs(Card.Body, { children: [\n    /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"disabledInput\", children: \"Disabled input\" }),\n      /* @__PURE__ */ jsx(\n        Form.Control,\n        {\n          type: \"text\",\n          name: \"disabledInput\",\n          id: \"disabledInput\",\n          placeholder: \"Disabled input\",\n          disabled: true\n        }\n      )\n    ] }),\n    /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n      /* @__PURE__ */ jsx(Form.Label, { htmlFor: \"disabledSelect\", children: \"Disabled select menu\" }),\n      /* @__PURE__ */ jsxs(Form.Select, { name: \"disabledSelect\", id: \"disabledSelect\", disabled: true, children: [\n        /* @__PURE__ */ jsx(\"option\", { value: \"\", children: \"Disabled select\" }),\n        /* @__PURE__ */ jsx(\"option\", { children: \"...\" }),\n        /* @__PURE__ */ jsx(\"option\", { children: \"...\" }),\n        /* @__PURE__ */ jsx(\"option\", { children: \"...\" })\n      ] })\n    ] }),\n    /* @__PURE__ */ jsx(Form.Group, { className: \"mb-2\", children: /* @__PURE__ */ jsx(Form.Check, { label: \"Can't check this\", type: \"checkbox\", disabled: true }) })\n  ] })\n] });\nconst ReadOnly = () => /* @__PURE__ */ jsxs(Card, { children: [\n  /* @__PURE__ */ jsx(Card.Header, { children: /* @__PURE__ */ jsx(Card.Title, { className: \"mb-0\", children: \"Read only\" }) }),\n  /* @__PURE__ */ jsx(Card.Body, { children: /* @__PURE__ */ jsx(\n    Form.Control,\n    {\n      type: \"text\",\n      name: \"readonlyInput\",\n      id: \"readonlyInput\",\n      placeholder: \"Readonly input\",\n      readOnly: true\n    }\n  ) })\n] });\nconst BasicInputs = () => /* @__PURE__ */ jsxs(React.Fragment, { children: [\n  /* @__PURE__ */ jsx(Helmet, { title: \"Basic Inputs\" }),\n  /* @__PURE__ */ jsxs(Container, { fluid: true, className: \"p-0\", children: [\n    /* @__PURE__ */ jsx(\"h1\", { className: \"h3 mb-3\", children: \"Basic Inputs\" }),\n    /* @__PURE__ */ jsxs(Row, { children: [\n      /* @__PURE__ */ jsxs(Col, { lg: \"6\", children: [\n        /* @__PURE__ */ jsx(InputComponent, {}),\n        /* @__PURE__ */ jsx(TextareaComponent, {}),\n        /* @__PURE__ */ jsx(Checkboxes, {}),\n        /* @__PURE__ */ jsx(Sizes, {})\n      ] }),\n      /* @__PURE__ */ jsxs(Col, { lg: \"6\", children: [\n        /* @__PURE__ */ jsx(Radios, {}),\n        /* @__PURE__ */ jsx(Switches, {}),\n        /* @__PURE__ */ jsx(Selects, {}),\n        /* @__PURE__ */ jsx(Disabled, {}),\n        /* @__PURE__ */ jsx(ReadOnly, {})\n      ] })\n    ] })\n  ] })\n] });\nexport default BasicInputs;\n",
      "start": 1702937440808,
      "end": 1702937440821,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/pages/forms/BasicInputs.jsx"
        ],
        "sourcesContent": [
          "import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Card, Col, Container, Form, Row } from \"react-bootstrap\";\r\n\r\nconst InputComponent = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Input</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Control type=\"text\" name=\"input\" placeholder=\"Input\" />\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst TextareaComponent = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Textarea</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Control as=\"textarea\" name=\"input\" placeholder=\"Textarea\" />\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Checkboxes = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Checkboxes</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check\r\n          label=\"Option one is this and that—be sure to\r\n          include why it's great\"\r\n          type=\"checkbox\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check label=\"Option two is disabled\" type=\"checkbox\" disabled />\r\n      </Form.Group>\r\n\r\n      <Form>\r\n        <Form.Check inline label=\"1\" type=\"checkbox\" />\r\n        <Form.Check inline label=\"2\" type=\"checkbox\" />\r\n        <Form.Check inline label=\"3\" type=\"checkbox\" disabled />\r\n      </Form>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Sizes = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Sizes</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Large input\"\r\n        size=\"lg\"\r\n        className=\"mb-3\"\r\n      />\r\n      <Form.Control type=\"text\" placeholder=\"Medium input\" className=\"mb-3\" />\r\n      <Form.Control type=\"text\" placeholder=\"Small input\" size=\"sm\" />\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Radios = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Radios</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check\r\n          label=\"Option one is this and that—be sure to include why it's great\"\r\n          type=\"radio\"\r\n          name=\"radios-example\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check\r\n          label=\"Option two can be something else and selecting it will deselect option one\"\r\n          type=\"radio\"\r\n          name=\"radios-example\"\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check\r\n          label=\"Option two is disabled\"\r\n          type=\"radio\"\r\n          disabled\r\n          name=\"radios-example\"\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form>\r\n        <Form.Check inline label=\"1\" type=\"radio\" name=\"radios-example-2\" />\r\n        <Form.Check inline label=\"2\" type=\"radio\" name=\"radios-example-2\" />\r\n        <Form.Check\r\n          inline\r\n          label=\"3\"\r\n          type=\"radio\"\r\n          name=\"radios-example-2\"\r\n          disabled\r\n        />\r\n      </Form>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Switches = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Switches</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Check\r\n        type=\"switch\"\r\n        id=\"exampleCustomSwitch\"\r\n        name=\"customSwitch\"\r\n        label=\"Toggle this switch element\"\r\n      />\r\n      <Form.Check\r\n        type=\"switch\"\r\n        id=\"exampleCustomSwitch1\"\r\n        label=\"Disabled switch element\"\r\n        disabled\r\n      />\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Selects = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Selects</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Select\r\n        id=\"exampleCustomSelect\"\r\n        name=\"customSelect\"\r\n        className=\"mb-3\"\r\n      >\r\n        <option value=\"\">Open this select menu</option>\r\n        <option>One</option>\r\n        <option>Two</option>\r\n        <option>Three</option>\r\n      </Form.Select>\r\n\r\n      <Form.Select\r\n        id=\"exampleCustomSelectMultiple\"\r\n        name=\"customSelectMultiple\"\r\n        multiple\r\n      >\r\n        <option value=\"\">Open this select menu</option>\r\n        <option>One</option>\r\n        <option>Two</option>\r\n        <option>Three</option>\r\n      </Form.Select>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst Disabled = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Disabled</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label htmlFor=\"disabledInput\">Disabled input</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"disabledInput\"\r\n          id=\"disabledInput\"\r\n          placeholder=\"Disabled input\"\r\n          disabled\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label htmlFor=\"disabledSelect\">Disabled select menu</Form.Label>\r\n        <Form.Select name=\"disabledSelect\" id=\"disabledSelect\" disabled>\r\n          <option value=\"\">Disabled select</option>\r\n          <option>...</option>\r\n          <option>...</option>\r\n          <option>...</option>\r\n        </Form.Select>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-2\">\r\n        <Form.Check label=\"Can't check this\" type=\"checkbox\" disabled />\r\n      </Form.Group>\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst ReadOnly = () => (\r\n  <Card>\r\n    <Card.Header>\r\n      <Card.Title className=\"mb-0\">Read only</Card.Title>\r\n    </Card.Header>\r\n    <Card.Body>\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"readonlyInput\"\r\n        id=\"readonlyInput\"\r\n        placeholder=\"Readonly input\"\r\n        readOnly\r\n      />\r\n    </Card.Body>\r\n  </Card>\r\n);\r\n\r\nconst BasicInputs = () => (\r\n  <React.Fragment>\r\n    <Helmet title=\"Basic Inputs\" />\r\n    <Container fluid className=\"p-0\">\r\n      <h1 className=\"h3 mb-3\">Basic Inputs</h1>\r\n\r\n      <Row>\r\n        <Col lg=\"6\">\r\n          <InputComponent />\r\n          <TextareaComponent />\r\n          <Checkboxes />\r\n          <Sizes />\r\n        </Col>\r\n        <Col lg=\"6\">\r\n          <Radios />\r\n          <Switches />\r\n          <Selects />\r\n          <Disabled />\r\n          <ReadOnly />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default BasicInputs;\r\n"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937440821,
      "end": 1702937440821,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937440822,
      "end": 1702937440822,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937440822,
      "end": 1702937440822,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937440822,
      "end": 1702937440822,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937440822,
      "end": 1702937440822,
      "order": "normal"
    }
  ]
}
