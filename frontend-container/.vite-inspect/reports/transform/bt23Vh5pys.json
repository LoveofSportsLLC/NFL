{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/graphql/type/assertName.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { isNameContinue, isNameStart } from '../language/characterClasses.mjs';\n/**\n * Upholds the spec rules about naming.\n */\n\nexport function assertName(name) {\n  name != null || devAssert(false, 'Must provide name.');\n  typeof name === 'string' || devAssert(false, 'Expected name to be a string.');\n\n  if (name.length === 0) {\n    throw new GraphQLError('Expected name to be a non-empty string.');\n  }\n\n  for (let i = 1; i < name.length; ++i) {\n    if (!isNameContinue(name.charCodeAt(i))) {\n      throw new GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`,\n      );\n    }\n  }\n\n  if (!isNameStart(name.charCodeAt(0))) {\n    throw new GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`,\n    );\n  }\n\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nexport function assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new GraphQLError(`Enum values cannot be named: ${name}`);\n  }\n\n  return assertName(name);\n}\n",
      "start": 1702937443032,
      "end": 1702937443052,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937443052,
      "end": 1702937443052,
      "order": "normal"
    }
  ]
}
