{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/typescript.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = typescript\ntypescript.displayName = 'typescript'\ntypescript.aliases = ['ts']\nfunction typescript(Prism) {\n  ;(function (Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      'class-name': {\n        pattern:\n          /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      builtin:\n        /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n    }) // The keywords TypeScript adds to JavaScript\n    Prism.languages.typescript.keyword.push(\n      /\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n      /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n      /\\btype\\b(?=\\s*(?:[\\{*]|$))/\n    ) // doesn't work with TS because TS is too complex\n    delete Prism.languages.typescript['parameter']\n    delete Prism.languages.typescript['literal-property'] // a version of typescript specifically for highlighting types\n    var typeInside = Prism.languages.extend('typescript', {})\n    delete typeInside['class-name']\n    Prism.languages.typescript['class-name'].inside = typeInside\n    Prism.languages.insertBefore('typescript', 'function', {\n      decorator: {\n        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n        inside: {\n          at: {\n            pattern: /^@/,\n            alias: 'operator'\n          },\n          function: /^[\\s\\S]+/\n        }\n      },\n      'generic-function': {\n        // e.g. foo<T extends \"bar\" | \"baz\">( ...\n        pattern:\n          /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n        greedy: true,\n        inside: {\n          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            // everything after the first <\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      }\n    })\n    Prism.languages.ts = Prism.languages.typescript\n  })(Prism)\n}\n",
      "start": 1702937445093,
      "end": 1702937445120,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445120,
      "end": 1702937445120,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445120,
      "end": 1702937445120,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445120,
      "end": 1702937445120,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445120,
      "end": 1702937445120,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445120,
      "end": 1702937445120,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445120,
      "end": 1702937445120,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445120,
      "end": 1702937445120,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445120,
      "end": 1702937445120,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445120,
      "end": 1702937445120,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445120,
      "end": 1702937445120,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar typescript_1;\nvar hasRequiredTypescript;\n\nfunction requireTypescript () {\n\tif (hasRequiredTypescript) return typescript_1;\n\thasRequiredTypescript = 1;\n\t'use strict'\n\n\ttypescript_1 = typescript\n\ttypescript.displayName = 'typescript'\n\ttypescript.aliases = ['ts']\n\tfunction typescript(Prism) {\n\t  ;(function (Prism) {\n\t    Prism.languages.typescript = Prism.languages.extend('javascript', {\n\t      'class-name': {\n\t        pattern:\n\t          /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t        lookbehind: true,\n\t        greedy: true,\n\t        inside: null // see below\n\t      },\n\t      builtin:\n\t        /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n\t    }) // The keywords TypeScript adds to JavaScript\n\t    Prism.languages.typescript.keyword.push(\n\t      /\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n\t      /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n\t      /\\btype\\b(?=\\s*(?:[\\{*]|$))/\n\t    ) // doesn't work with TS because TS is too complex\n\t    delete Prism.languages.typescript['parameter']\n\t    delete Prism.languages.typescript['literal-property'] // a version of typescript specifically for highlighting types\n\t    var typeInside = Prism.languages.extend('typescript', {})\n\t    delete typeInside['class-name']\n\t    Prism.languages.typescript['class-name'].inside = typeInside\n\t    Prism.languages.insertBefore('typescript', 'function', {\n\t      decorator: {\n\t        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t        inside: {\n\t          at: {\n\t            pattern: /^@/,\n\t            alias: 'operator'\n\t          },\n\t          function: /^[\\s\\S]+/\n\t        }\n\t      },\n\t      'generic-function': {\n\t        // e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t        pattern:\n\t          /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t        greedy: true,\n\t        inside: {\n\t          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t          generic: {\n\t            pattern: /<[\\s\\S]+/,\n\t            // everything after the first <\n\t            alias: 'class-name',\n\t            inside: typeInside\n\t          }\n\t        }\n\t      }\n\t    })\n\t    Prism.languages.ts = Prism.languages.typescript\n\t  })(Prism)\n\t}\n\treturn typescript_1;\n}\n\nexport { requireTypescript as __require };",
      "start": 1702937445120,
      "end": 1702937445121,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,aAAc,GAAG,UAAU;CAC3B,UAAU,CAAC,WAAW,GAAG,YAAY;CACrC,UAAU,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC;CAC3B,SAAS,UAAU,CAAC,KAAK,EAAE;CAC3B,EAAE,CAAC,CAAC,UAAU,KAAK,EAAE;CACrB,IAAI,KAAK,CAAC,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE;CACtE,MAAM,YAAY,EAAE;CACpB,QAAQ,OAAO;CACf,UAAU,8KAA8K;CACxL,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE,IAAI;CACpB,QAAQ,MAAM,EAAE,IAAI;CACpB,OAAO;CACP,MAAM,OAAO;CACb,QAAQ,uFAAuF;CAC/F,KAAK,CAAC;CACN,IAAI,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI;CAC3C,MAAM,oDAAoD;CAC1D,MAAM,0FAA0F;CAChG,MAAM,4BAA4B;CAClC,KAAK;CACL,IAAI,OAAO,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC;CAClD,IAAI,OAAO,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,kBAAkB,CAAC;CACzD,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,CAAC;CAC7D,IAAI,OAAO,UAAU,CAAC,YAAY,CAAC;CACnC,IAAI,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,MAAM,GAAG,UAAU;CAChE,IAAI,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,EAAE,UAAU,EAAE;CAC3D,MAAM,SAAS,EAAE;CACjB,QAAQ,OAAO,EAAE,oBAAoB;CACrC,QAAQ,MAAM,EAAE;CAChB,UAAU,EAAE,EAAE;CACd,YAAY,OAAO,EAAE,IAAI;CACzB,YAAY,KAAK,EAAE,UAAU;CAC7B,WAAW;CACX,UAAU,QAAQ,EAAE,UAAU;CAC9B,SAAS;CACT,OAAO;CACP,MAAM,kBAAkB,EAAE;CAC1B;CACA,QAAQ,OAAO;CACf,UAAU,wGAAwG;CAClH,QAAQ,MAAM,EAAE,IAAI;CACpB,QAAQ,MAAM,EAAE;CAChB,UAAU,QAAQ,EAAE,2DAA2D;CAC/E,UAAU,OAAO,EAAE;CACnB,YAAY,OAAO,EAAE,UAAU;CAC/B;CACA,YAAY,KAAK,EAAE,YAAY;CAC/B,YAAY,MAAM,EAAE,UAAU;CAC9B,WAAW;CACX,SAAS;CACT,OAAO;CACP,KAAK,CAAC;CACN,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,UAAU;CACnD,GAAG,EAAE,KAAK,CAAC;CACX"
      }
    },
    {
      "name": "inject",
      "start": 1702937445121,
      "end": 1702937445121,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445121,
      "end": 1702937445121,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445121,
      "end": 1702937445121,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445121,
      "end": 1702937445121,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445121,
      "end": 1702937445121,
      "order": "normal"
    }
  ]
}
