{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/Form.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});",
      "start": 1702937441464,
      "end": 1702937441485,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441485,
      "end": 1702937441485,
      "order": "normal"
    }
  ]
}
