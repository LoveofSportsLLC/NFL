{
  "resolvedId": "/home/zepor/ssweb/frontend-container/src/components/auth/ResetPassword.jsx",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nfunction ResetPassword() {\r\n  const navigate = useNavigate();\r\n  const { resetPassword } = useAuth();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        submit: false,\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Must be a valid email\")\r\n          .max(255)\r\n          .required(\"Email is required\"),\r\n      })}\r\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n        try {\r\n          resetPassword(values.email);\r\n          navigate(\"/auth/sign-in\");\r\n        } catch (error) {\r\n          const message = error.message || \"Something went wrong\";\r\n\r\n          setStatus({ success: false });\r\n          setErrors({ submit: message });\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          {errors.submit && (\r\n            <Alert className=\"my-3\" variant=\"danger\">\r\n              <div className=\"alert-message\">{errors.submit}</div>\r\n            </Alert>\r\n          )}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              value={values.email}\r\n              isInvalid={Boolean(touched.email && errors.email)}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n            />\r\n            {!!touched.email && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.email}\r\n              </Form.Control.Feedback>\r\n            )}\r\n          </Form.Group>\r\n          <div className=\"d-grid gap-2 mt-3\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Reset password\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n",
      "start": 1702937441648,
      "end": 1702937441797,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441797,
      "end": 1702937441797,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441797,
      "end": 1702937441797,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport useAuth from \"../../hooks/useAuth\";\nfunction ResetPassword() {\n  const navigate = useNavigate();\n  const { resetPassword } = useAuth();\n  return /* @__PURE__ */ jsx(\n    Formik,\n    {\n      initialValues: {\n        email: \"\",\n        submit: false\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\")\n      }),\n      onSubmit: async (values, { setErrors, setStatus, setSubmitting }) => {\n        try {\n          resetPassword(values.email);\n          navigate(\"/auth/sign-in\");\n        } catch (error) {\n          const message = error.message || \"Something went wrong\";\n          setStatus({ success: false });\n          setErrors({ submit: message });\n          setSubmitting(false);\n        }\n      },\n      children: ({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => /* @__PURE__ */ jsxs(Form, { onSubmit: handleSubmit, children: [\n        errors.submit && /* @__PURE__ */ jsx(Alert, { className: \"my-3\", variant: \"danger\", children: /* @__PURE__ */ jsx(\"div\", { className: \"alert-message\", children: errors.submit }) }),\n        /* @__PURE__ */ jsxs(Form.Group, { className: \"mb-3\", children: [\n          /* @__PURE__ */ jsx(Form.Label, { children: \"Email\" }),\n          /* @__PURE__ */ jsx(\n            Form.Control,\n            {\n              type: \"email\",\n              name: \"email\",\n              label: \"Email Address\",\n              value: values.email,\n              isInvalid: Boolean(touched.email && errors.email),\n              onBlur: handleBlur,\n              onChange: handleChange\n            }\n          ),\n          !!touched.email && /* @__PURE__ */ jsx(Form.Control.Feedback, { type: \"invalid\", children: errors.email })\n        ] }),\n        /* @__PURE__ */ jsx(\"div\", { className: \"d-grid gap-2 mt-3\", children: /* @__PURE__ */ jsx(\n          Button,\n          {\n            type: \"submit\",\n            variant: \"primary\",\n            size: \"lg\",\n            disabled: isSubmitting,\n            children: \"Reset password\"\n          }\n        ) })\n      ] })\n    }\n  );\n}\nexport default ResetPassword;\n",
      "start": 1702937441798,
      "end": 1702937441800,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/home/zepor/ssweb/frontend-container/src/components/auth/ResetPassword.jsx"
        ],
        "sourcesContent": [
          "import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nfunction ResetPassword() {\r\n  const navigate = useNavigate();\r\n  const { resetPassword } = useAuth();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        submit: false,\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Must be a valid email\")\r\n          .max(255)\r\n          .required(\"Email is required\"),\r\n      })}\r\n      onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n        try {\r\n          resetPassword(values.email);\r\n          navigate(\"/auth/sign-in\");\r\n        } catch (error) {\r\n          const message = error.message || \"Something went wrong\";\r\n\r\n          setStatus({ success: false });\r\n          setErrors({ submit: message });\r\n          setSubmitting(false);\r\n        }\r\n      }}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values,\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          {errors.submit && (\r\n            <Alert className=\"my-3\" variant=\"danger\">\r\n              <div className=\"alert-message\">{errors.submit}</div>\r\n            </Alert>\r\n          )}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              value={values.email}\r\n              isInvalid={Boolean(touched.email && errors.email)}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n            />\r\n            {!!touched.email && (\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.email}\r\n              </Form.Control.Feedback>\r\n            )}\r\n          </Form.Group>\r\n          <div className=\"d-grid gap-2 mt-3\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Reset password\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"
        ],
        "mappings": "AAgDc,cAGJ,YAHI;AAhDd,OAAO,WAAW;AAClB,SAAS,mBAAmB;AAC5B,YAAY,SAAS;AACrB,SAAS,cAAc;AACvB,SAAS,OAAO,QAAQ,YAAY;AACpC,OAAO,aAAa;AAEpB,SAAS,gBAAgB;AACvB,QAAM,WAAW,YAAY;AAC7B,QAAM,EAAE,cAAc,IAAI,QAAQ;AAElC,SACE;AAAA,IAAC;AAAA;AAAA,MACC,eAAe;AAAA,QACb,OAAO;AAAA,QACP,QAAQ;AAAA,MACV;AAAA,MACA,kBAAkB,IAAI,OAAO,EAAE,MAAM;AAAA,QACnC,OAAO,IAAI,OAAO,EACf,MAAM,uBAAuB,EAC7B,IAAI,GAAG,EACP,SAAS,mBAAmB;AAAA,MACjC,CAAC;AAAA,MACD,UAAU,OAAO,QAAQ,EAAE,WAAW,WAAW,cAAc,MAAM;AACnE,YAAI;AACF,wBAAc,OAAO,KAAK;AAC1B,mBAAS,eAAe;AAAA,QAC1B,SAAS,OAAO;AACd,gBAAM,UAAU,MAAM,WAAW;AAEjC,oBAAU,EAAE,SAAS,MAAM,CAAC;AAC5B,oBAAU,EAAE,QAAQ,QAAQ,CAAC;AAC7B,wBAAc,KAAK;AAAA,QACrB;AAAA,MACF;AAAA,MAEC,WAAC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,MACE,qBAAC,QAAK,UAAU,cACb;AAAA,eAAO,UACN,oBAAC,SAAM,WAAU,QAAO,SAAQ,UAC9B,8BAAC,SAAI,WAAU,iBAAiB,iBAAO,QAAO,GAChD;AAAA,QAEF,qBAAC,KAAK,OAAL,EAAW,WAAU,QACpB;AAAA,8BAAC,KAAK,OAAL,EAAW,mBAAK;AAAA,UACjB;AAAA,YAAC,KAAK;AAAA,YAAL;AAAA,cACC,MAAK;AAAA,cACL,MAAK;AAAA,cACL,OAAM;AAAA,cACN,OAAO,OAAO;AAAA,cACd,WAAW,QAAQ,QAAQ,SAAS,OAAO,KAAK;AAAA,cAChD,QAAQ;AAAA,cACR,UAAU;AAAA;AAAA,UACZ;AAAA,UACC,CAAC,CAAC,QAAQ,SACT,oBAAC,KAAK,QAAQ,UAAb,EAAsB,MAAK,WACzB,iBAAO,OACV;AAAA,WAEJ;AAAA,QACA,oBAAC,SAAI,WAAU,qBACb;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,SAAQ;AAAA,YACR,MAAK;AAAA,YACL,UAAU;AAAA,YACX;AAAA;AAAA,QAED,GACF;AAAA,SACF;AAAA;AAAA,EAEJ;AAEJ;AAEA,eAAe;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1702937441800,
      "end": 1702937441800,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441800,
      "end": 1702937441800,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441800,
      "end": 1702937441800,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441800,
      "end": 1702937441800,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441800,
      "end": 1702937441800,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441800,
      "end": 1702937441800,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441800,
      "end": 1702937441800,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441800,
      "end": 1702937441800,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441800,
      "end": 1702937441800,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441800,
      "end": 1702937441800,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441800,
      "end": 1702937441800,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441800,
      "end": 1702937441801,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441801,
      "end": 1702937441801,
      "order": "normal"
    }
  ]
}
