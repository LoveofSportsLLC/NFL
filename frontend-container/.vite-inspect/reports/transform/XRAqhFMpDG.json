{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/aql.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = aql\naql.displayName = 'aql'\naql.aliases = []\nfunction aql(Prism) {\n  Prism.languages.aql = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    property: {\n      pattern:\n        /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    variable: /@@?\\w+/,\n    keyword: [\n      {\n        pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n        lookbehind: true\n      },\n      /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i, // pseudo keywords get a lookbehind to avoid false positives\n      {\n        pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n        lookbehind: true\n      },\n      {\n        pattern: /\\bOPTIONS(?=\\s*\\{)/i\n      }\n    ],\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    boolean: /\\b(?:false|true)\\b/i,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    number: [\n      /\\b0b[01]+/i,\n      /\\b0x[0-9a-f]+/i,\n      /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n    ],\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n    punctuation: /::|[?.:,;()[\\]{}]/\n  }\n}\n",
      "start": 1702937444783,
      "end": 1702937444832,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444832,
      "end": 1702937444832,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444832,
      "end": 1702937444832,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444832,
      "end": 1702937444832,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444832,
      "end": 1702937444832,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444832,
      "end": 1702937444832,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444832,
      "end": 1702937444832,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444832,
      "end": 1702937444832,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444832,
      "end": 1702937444832,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444832,
      "end": 1702937444832,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444832,
      "end": 1702937444833,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar aql_1;\nvar hasRequiredAql;\n\nfunction requireAql () {\n\tif (hasRequiredAql) return aql_1;\n\thasRequiredAql = 1;\n\t'use strict'\n\n\taql_1 = aql\n\taql.displayName = 'aql'\n\taql.aliases = []\n\tfunction aql(Prism) {\n\t  Prism.languages.aql = {\n\t    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n\t    property: {\n\t      pattern:\n\t        /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n\t      lookbehind: true,\n\t      greedy: true\n\t    },\n\t    string: {\n\t      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n\t      greedy: true\n\t    },\n\t    identifier: {\n\t      pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n\t      greedy: true\n\t    },\n\t    variable: /@@?\\w+/,\n\t    keyword: [\n\t      {\n\t        pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n\t        lookbehind: true\n\t      },\n\t      /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i, // pseudo keywords get a lookbehind to avoid false positives\n\t      {\n\t        pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n\t        lookbehind: true\n\t      },\n\t      {\n\t        pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n\t        lookbehind: true\n\t      },\n\t      {\n\t        pattern: /\\bOPTIONS(?=\\s*\\{)/i\n\t      }\n\t    ],\n\t    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n\t    boolean: /\\b(?:false|true)\\b/i,\n\t    range: {\n\t      pattern: /\\.\\./,\n\t      alias: 'operator'\n\t    },\n\t    number: [\n\t      /\\b0b[01]+/i,\n\t      /\\b0x[0-9a-f]+/i,\n\t      /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n\t    ],\n\t    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n\t    punctuation: /::|[?.:,;()[\\]{}]/\n\t  }\n\t}\n\treturn aql_1;\n}\n\nexport { requireAql as __require };",
      "start": 1702937444833,
      "end": 1702937444833,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,MAAc,GAAG,GAAG;CACpB,GAAG,CAAC,WAAW,GAAG,KAAK;CACvB,GAAG,CAAC,OAAO,GAAG,EAAE;CAChB,SAAS,GAAG,CAAC,KAAK,EAAE;CACpB,EAAE,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG;CACxB,IAAI,OAAO,EAAE,yBAAyB;CACtC,IAAI,QAAQ,EAAE;CACd,MAAM,OAAO;CACb,QAAQ,mEAAmE;CAC3E,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,MAAM,EAAE;CACZ,MAAM,OAAO,EAAE,kCAAkC;CACjD,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,UAAU,EAAE;CAChB,MAAM,OAAO,EAAE,kCAAkC;CACjD,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,QAAQ,EAAE,QAAQ;CACtB,IAAI,OAAO,EAAE;CACb,MAAM;CACN,QAAQ,OAAO,EAAE,gCAAgC;CACjD,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM,uOAAuO;CAC7O,MAAM;CACN,QAAQ,OAAO,EAAE,wCAAwC;CACzD,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM;CACN,QAAQ,OAAO,EAAE,kCAAkC;CACnD,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM;CACN,QAAQ,OAAO,EAAE,qBAAqB;CACtC,OAAO;CACP,KAAK;CACL,IAAI,QAAQ,EAAE,sBAAsB;CACpC,IAAI,OAAO,EAAE,qBAAqB;CAClC,IAAI,KAAK,EAAE;CACX,MAAM,OAAO,EAAE,MAAM;CACrB,MAAM,KAAK,EAAE,UAAU;CACvB,KAAK;CACL,IAAI,MAAM,EAAE;CACZ,MAAM,YAAY;CAClB,MAAM,gBAAgB;CACtB,MAAM,uDAAuD;CAC7D,KAAK;CACL,IAAI,QAAQ,EAAE,uCAAuC;CACrD,IAAI,WAAW,EAAE,mBAAmB;CACpC,GAAG;CACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937444833,
      "end": 1702937444833,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444833,
      "end": 1702937444833,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444833,
      "end": 1702937444833,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444833,
      "end": 1702937444833,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444833,
      "end": 1702937444833,
      "order": "normal"
    }
  ]
}
