{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/vala.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = vala\nvala.displayName = 'vala'\nvala.aliases = []\nfunction vala(Prism) {\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern:\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern:\n          /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number:\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator:\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  })\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern:\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  })\n}\n",
      "start": 1702937445107,
      "end": 1702937445128,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar vala_1;\nvar hasRequiredVala;\n\nfunction requireVala () {\n\tif (hasRequiredVala) return vala_1;\n\thasRequiredVala = 1;\n\t'use strict'\n\n\tvala_1 = vala\n\tvala.displayName = 'vala'\n\tvala.aliases = []\n\tfunction vala(Prism) {\n\t  Prism.languages.vala = Prism.languages.extend('clike', {\n\t    // Classes copied from prism-csharp\n\t    'class-name': [\n\t      {\n\t        // (Foo bar, Bar baz)\n\t        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n\t        inside: {\n\t          punctuation: /\\./\n\t        }\n\t      },\n\t      {\n\t        // [Foo]\n\t        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t        lookbehind: true,\n\t        inside: {\n\t          punctuation: /\\./\n\t        }\n\t      },\n\t      {\n\t        // class Foo : Bar\n\t        pattern:\n\t          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t        lookbehind: true,\n\t        inside: {\n\t          punctuation: /\\./\n\t        }\n\t      },\n\t      {\n\t        // class Foo\n\t        pattern:\n\t          /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n\t        lookbehind: true,\n\t        inside: {\n\t          punctuation: /\\./\n\t        }\n\t      }\n\t    ],\n\t    keyword:\n\t      /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\n\t    function: /\\b\\w+(?=\\s*\\()/,\n\t    number:\n\t      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n\t    operator:\n\t      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n\t    punctuation: /[{}[\\];(),.:]/,\n\t    constant: /\\b[A-Z0-9_]+\\b/\n\t  })\n\t  Prism.languages.insertBefore('vala', 'string', {\n\t    'raw-string': {\n\t      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n\t      greedy: true,\n\t      alias: 'string'\n\t    },\n\t    'template-string': {\n\t      pattern: /@\"[\\s\\S]*?\"/,\n\t      greedy: true,\n\t      inside: {\n\t        interpolation: {\n\t          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n\t          inside: {\n\t            delimiter: {\n\t              pattern: /^\\$\\(?|\\)$/,\n\t              alias: 'punctuation'\n\t            },\n\t            rest: Prism.languages.vala\n\t          }\n\t        },\n\t        string: /[\\s\\S]+/\n\t      }\n\t    }\n\t  })\n\t  Prism.languages.insertBefore('vala', 'keyword', {\n\t    regex: {\n\t      pattern:\n\t        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n\t      greedy: true,\n\t      inside: {\n\t        'regex-source': {\n\t          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t          lookbehind: true,\n\t          alias: 'language-regex',\n\t          inside: Prism.languages.regex\n\t        },\n\t        'regex-delimiter': /^\\//,\n\t        'regex-flags': /^[a-z]+$/\n\t      }\n\t    }\n\t  })\n\t}\n\treturn vala_1;\n}\n\nexport { requireVala as __require };",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,OAAc,GAAG,IAAI;CACrB,IAAI,CAAC,WAAW,GAAG,MAAM;CACzB,IAAI,CAAC,OAAO,GAAG,EAAE;CACjB,SAAS,IAAI,CAAC,KAAK,EAAE;CACrB,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE;CACzD;CACA,IAAI,YAAY,EAAE;CAClB,MAAM;CACN;CACA,QAAQ,OAAO,EAAE,iDAAiD;CAClE,QAAQ,MAAM,EAAE;CAChB,UAAU,WAAW,EAAE,IAAI;CAC3B,SAAS;CACT,OAAO;CACP,MAAM;CACN;CACA,QAAQ,OAAO,EAAE,0BAA0B;CAC3C,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE;CAChB,UAAU,WAAW,EAAE,IAAI;CAC3B,SAAS;CACT,OAAO;CACP,MAAM;CACN;CACA,QAAQ,OAAO;CACf,UAAU,yEAAyE;CACnF,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE;CAChB,UAAU,WAAW,EAAE,IAAI;CAC3B,SAAS;CACT,OAAO;CACP,MAAM;CACN;CACA,QAAQ,OAAO;CACf,UAAU,mFAAmF;CAC7F,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,MAAM,EAAE;CAChB,UAAU,WAAW,EAAE,IAAI;CAC3B,SAAS;CACT,OAAO;CACP,KAAK;CACL,IAAI,OAAO;CACX,MAAM,2kBAA2kB;CACjlB,IAAI,QAAQ,EAAE,gBAAgB;CAC9B,IAAI,MAAM;CACV,MAAM,0EAA0E;CAChF,IAAI,QAAQ;CACZ,MAAM,mEAAmE;CACzE,IAAI,WAAW,EAAE,eAAe;CAChC,IAAI,QAAQ,EAAE,gBAAgB;CAC9B,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAE;CACjD,IAAI,YAAY,EAAE;CAClB,MAAM,OAAO,EAAE,gBAAgB;CAC/B,MAAM,MAAM,EAAE,IAAI;CAClB,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK;CACL,IAAI,iBAAiB,EAAE;CACvB,MAAM,OAAO,EAAE,aAAa;CAC5B,MAAM,MAAM,EAAE,IAAI;CAClB,MAAM,MAAM,EAAE;CACd,QAAQ,aAAa,EAAE;CACvB,UAAU,OAAO,EAAE,6BAA6B;CAChD,UAAU,MAAM,EAAE;CAClB,YAAY,SAAS,EAAE;CACvB,cAAc,OAAO,EAAE,YAAY;CACnC,cAAc,KAAK,EAAE,aAAa;CAClC,aAAa;CACb,YAAY,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI;CACtC,WAAW;CACX,SAAS;CACT,QAAQ,MAAM,EAAE,SAAS;CACzB,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,EAAE;CAClD,IAAI,KAAK,EAAE;CACX,MAAM,OAAO;CACb,QAAQ,yFAAyF;CACjG,MAAM,MAAM,EAAE,IAAI;CAClB,MAAM,MAAM,EAAE;CACd,QAAQ,cAAc,EAAE;CACxB,UAAU,OAAO,EAAE,2BAA2B;CAC9C,UAAU,UAAU,EAAE,IAAI;CAC1B,UAAU,KAAK,EAAE,gBAAgB;CACjC,UAAU,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK;CACvC,SAAS;CACT,QAAQ,iBAAiB,EAAE,KAAK;CAChC,QAAQ,aAAa,EAAE,UAAU;CACjC,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ"
      }
    },
    {
      "name": "inject",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445128,
      "end": 1702937445128,
      "order": "normal"
    }
  ]
}
