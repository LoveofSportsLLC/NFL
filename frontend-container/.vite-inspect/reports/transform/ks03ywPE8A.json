{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/smali.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = smali\nsmali.displayName = 'smali'\nsmali.aliases = []\nfunction smali(Prism) {\n  // Test files for the parser itself:\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n  Prism.languages.smali = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n      lookbehind: true,\n      inside: {\n        'class-name': {\n          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n          lookbehind: true\n        },\n        namespace: {\n          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\//\n          }\n        },\n        builtin: /^L/\n      }\n    },\n    builtin: [\n      {\n        // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n        pattern: /([();\\[])[BCDFIJSVZ]+/,\n        lookbehind: true\n      },\n      {\n        // e.g. .field mWifiOnUid:I\n        pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /(\\.end\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n      lookbehind: true\n    },\n    field: {\n      pattern: /[\\w$]+(?=:)/,\n      alias: 'variable'\n    },\n    register: {\n      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    boolean: {\n      pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n      lookbehind: true\n    },\n    label: {\n      pattern: /(:)\\w+/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    operator: /->|\\.\\.|[\\[=]/,\n    punctuation: /[{}(),;:]/\n  }\n}\n",
      "start": 1702937445057,
      "end": 1702937445086,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar smali_1;\nvar hasRequiredSmali;\n\nfunction requireSmali () {\n\tif (hasRequiredSmali) return smali_1;\n\thasRequiredSmali = 1;\n\t'use strict'\n\n\tsmali_1 = smali\n\tsmali.displayName = 'smali'\n\tsmali.aliases = []\n\tfunction smali(Prism) {\n\t  // Test files for the parser itself:\n\t  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n\t  Prism.languages.smali = {\n\t    comment: /#.*/,\n\t    string: {\n\t      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n\t      greedy: true\n\t    },\n\t    'class-name': {\n\t      pattern:\n\t        /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n\t      lookbehind: true,\n\t      inside: {\n\t        'class-name': {\n\t          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n\t          lookbehind: true\n\t        },\n\t        namespace: {\n\t          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n\t          lookbehind: true,\n\t          inside: {\n\t            punctuation: /\\//\n\t          }\n\t        },\n\t        builtin: /^L/\n\t      }\n\t    },\n\t    builtin: [\n\t      {\n\t        // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n\t        pattern: /([();\\[])[BCDFIJSVZ]+/,\n\t        lookbehind: true\n\t      },\n\t      {\n\t        // e.g. .field mWifiOnUid:I\n\t        pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n\t        lookbehind: true\n\t      }\n\t    ],\n\t    keyword: [\n\t      {\n\t        pattern: /(\\.end\\s+)[\\w-]+/,\n\t        lookbehind: true\n\t      },\n\t      {\n\t        pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n\t        lookbehind: true\n\t      },\n\t      {\n\t        pattern:\n\t          /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n\t        lookbehind: true\n\t      }\n\t    ],\n\t    function: {\n\t      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n\t      lookbehind: true\n\t    },\n\t    field: {\n\t      pattern: /[\\w$]+(?=:)/,\n\t      alias: 'variable'\n\t    },\n\t    register: {\n\t      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n\t      lookbehind: true,\n\t      alias: 'variable'\n\t    },\n\t    boolean: {\n\t      pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n\t      lookbehind: true\n\t    },\n\t    number: {\n\t      pattern:\n\t        /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n\t      lookbehind: true\n\t    },\n\t    label: {\n\t      pattern: /(:)\\w+/,\n\t      lookbehind: true,\n\t      alias: 'property'\n\t    },\n\t    operator: /->|\\.\\.|[\\[=]/,\n\t    punctuation: /[{}(),;:]/\n\t  }\n\t}\n\treturn smali_1;\n}\n\nexport { requireSmali as __require };",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,QAAc,GAAG,KAAK;CACtB,KAAK,CAAC,WAAW,GAAG,OAAO;CAC3B,KAAK,CAAC,OAAO,GAAG,EAAE;CAClB,SAAS,KAAK,CAAC,KAAK,EAAE;CACtB;CACA;CACA,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG;CAC1B,IAAI,OAAO,EAAE,KAAK;CAClB,IAAI,MAAM,EAAE;CACZ,MAAM,OAAO,EAAE,+DAA+D;CAC9E,MAAM,MAAM,EAAE,IAAI;CAClB,KAAK;CACL,IAAI,YAAY,EAAE;CAClB,MAAM,OAAO;CACb,QAAQ,mEAAmE;CAC3E,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,MAAM,EAAE;CACd,QAAQ,YAAY,EAAE;CACtB,UAAU,OAAO,EAAE,gCAAgC;CACnD,UAAU,UAAU,EAAE,IAAI;CAC1B,SAAS;CACT,QAAQ,SAAS,EAAE;CACnB,UAAU,OAAO,EAAE,gCAAgC;CACnD,UAAU,UAAU,EAAE,IAAI;CAC1B,UAAU,MAAM,EAAE;CAClB,YAAY,WAAW,EAAE,IAAI;CAC7B,WAAW;CACX,SAAS;CACT,QAAQ,OAAO,EAAE,IAAI;CACrB,OAAO;CACP,KAAK;CACL,IAAI,OAAO,EAAE;CACb,MAAM;CACN;CACA,QAAQ,OAAO,EAAE,uBAAuB;CACxC,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM;CACN;CACA,QAAQ,OAAO,EAAE,sBAAsB;CACvC,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,KAAK;CACL,IAAI,OAAO,EAAE;CACb,MAAM;CACN,QAAQ,OAAO,EAAE,kBAAkB;CACnC,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM;CACN,QAAQ,OAAO,EAAE,2BAA2B;CAC5C,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,MAAM;CACN,QAAQ,OAAO;CACf,UAAU,yJAAyJ;CACnK,QAAQ,UAAU,EAAE,IAAI;CACxB,OAAO;CACP,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM,OAAO,EAAE,oCAAoC;CACnD,MAAM,UAAU,EAAE,IAAI;CACtB,KAAK;CACL,IAAI,KAAK,EAAE;CACX,MAAM,OAAO,EAAE,aAAa;CAC5B,MAAM,KAAK,EAAE,UAAU;CACvB,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM,OAAO,EAAE,6BAA6B;CAC5C,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,KAAK,EAAE,UAAU;CACvB,KAAK;CACL,IAAI,OAAO,EAAE;CACb,MAAM,OAAO,EAAE,qCAAqC;CACpD,MAAM,UAAU,EAAE,IAAI;CACtB,KAAK;CACL,IAAI,MAAM,EAAE;CACZ,MAAM,OAAO;CACb,QAAQ,qJAAqJ;CAC7J,MAAM,UAAU,EAAE,IAAI;CACtB,KAAK;CACL,IAAI,KAAK,EAAE;CACX,MAAM,OAAO,EAAE,QAAQ;CACvB,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,KAAK,EAAE,UAAU;CACvB,KAAK;CACL,IAAI,QAAQ,EAAE,eAAe;CAC7B,IAAI,WAAW,EAAE,WAAW;CAC5B,GAAG;CACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445086,
      "end": 1702937445086,
      "order": "normal"
    }
  ]
}
