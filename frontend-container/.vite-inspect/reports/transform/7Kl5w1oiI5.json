{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/idris.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = idris\nidris.displayName = 'idris'\nidris.aliases = ['idr']\nfunction idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  })\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n",
      "start": 1702937444916,
      "end": 1702937444937,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/haskell.js?commonjs-wrapped\";\n\nvar idris_1;\nvar hasRequiredIdris;\n\nfunction requireIdris () {\n\tif (hasRequiredIdris) return idris_1;\n\thasRequiredIdris = 1;\n\t'use strict'\n\tvar refractorHaskell = require$$0()\n\tidris_1 = idris\n\tidris.displayName = 'idris'\n\tidris.aliases = ['idr']\n\tfunction idris(Prism) {\n\t  Prism.register(refractorHaskell)\n\t  Prism.languages.idris = Prism.languages.extend('haskell', {\n\t    comment: {\n\t      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n\t    },\n\t    keyword:\n\t      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n\t    builtin: undefined\n\t  })\n\t  Prism.languages.insertBefore('idris', 'keyword', {\n\t    'import-statement': {\n\t      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n\t      lookbehind: true,\n\t      inside: {\n\t        punctuation: /\\./\n\t      }\n\t    }\n\t  })\n\t  Prism.languages.idr = Prism.languages.idris\n\t}\n\treturn idris_1;\n}\n\nexport { requireIdris as __require };",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;;CAAA,YAAY;CACZ,IAAI,gBAAgB,GAAG,YAAuB;AAC9C,QAAc,GAAG,KAAK;CACtB,KAAK,CAAC,WAAW,GAAG,OAAO;CAC3B,KAAK,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC;CACvB,SAAS,KAAK,CAAC,KAAK,EAAE;CACtB,EAAE,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC;CAClC,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE;CAC5D,IAAI,OAAO,EAAE;CACb,MAAM,OAAO,EAAE,sCAAsC;CACrD,KAAK;CACL,IAAI,OAAO;CACX,MAAM,iTAAiT;CACvT,IAAI,OAAO,EAAE,SAAS;CACtB,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,EAAE;CACnD,IAAI,kBAAkB,EAAE;CACxB,MAAM,OAAO,EAAE,mDAAmD;CAClE,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,MAAM,EAAE;CACd,QAAQ,WAAW,EAAE,IAAI;CACzB,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ,EAAE,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK;CAC7C"
      }
    },
    {
      "name": "inject",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444938,
      "end": 1702937444938,
      "order": "normal"
    }
  ]
}
