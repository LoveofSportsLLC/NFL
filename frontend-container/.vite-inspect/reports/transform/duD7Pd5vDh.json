{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/pcaxis.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = pcaxis\npcaxis.displayName = 'pcaxis'\npcaxis.aliases = ['px']\nfunction pcaxis(Prism) {\n  Prism.languages.pcaxis = {\n    string: /\"[^\"]*\"/,\n    keyword: {\n      pattern:\n        /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        keyword: /^[-A-Z\\d]+/,\n        language: {\n          pattern: /^(\\s*)\\[[-\\w]+\\]/,\n          lookbehind: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            property: /[-\\w]+/\n          }\n        },\n        'sub-key': {\n          pattern: /^(\\s*)\\S[\\s\\S]*/,\n          lookbehind: true,\n          inside: {\n            parameter: {\n              pattern: /\"[^\"]*\"/,\n              alias: 'property'\n            },\n            punctuation: /^\\(|\\)$|,/\n          }\n        }\n      }\n    },\n    operator: /=/,\n    tlist: {\n      pattern:\n        /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n      greedy: true,\n      inside: {\n        function: /^TLIST/,\n        property: {\n          pattern: /^(\\s*\\(\\s*)\\w+/,\n          lookbehind: true\n        },\n        string: /\"[^\"]*\"/,\n        punctuation: /[(),]/,\n        operator: /-/\n      }\n    },\n    punctuation: /[;,]/,\n    number: {\n      pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n      lookbehind: true\n    },\n    boolean: /NO|YES/\n  }\n  Prism.languages.px = Prism.languages.pcaxis\n}\n",
      "start": 1702937445005,
      "end": 1702937445028,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar pcaxis_1;\nvar hasRequiredPcaxis;\n\nfunction requirePcaxis () {\n\tif (hasRequiredPcaxis) return pcaxis_1;\n\thasRequiredPcaxis = 1;\n\t'use strict'\n\n\tpcaxis_1 = pcaxis\n\tpcaxis.displayName = 'pcaxis'\n\tpcaxis.aliases = ['px']\n\tfunction pcaxis(Prism) {\n\t  Prism.languages.pcaxis = {\n\t    string: /\"[^\"]*\"/,\n\t    keyword: {\n\t      pattern:\n\t        /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n\t      lookbehind: true,\n\t      greedy: true,\n\t      inside: {\n\t        keyword: /^[-A-Z\\d]+/,\n\t        language: {\n\t          pattern: /^(\\s*)\\[[-\\w]+\\]/,\n\t          lookbehind: true,\n\t          inside: {\n\t            punctuation: /^\\[|\\]$/,\n\t            property: /[-\\w]+/\n\t          }\n\t        },\n\t        'sub-key': {\n\t          pattern: /^(\\s*)\\S[\\s\\S]*/,\n\t          lookbehind: true,\n\t          inside: {\n\t            parameter: {\n\t              pattern: /\"[^\"]*\"/,\n\t              alias: 'property'\n\t            },\n\t            punctuation: /^\\(|\\)$|,/\n\t          }\n\t        }\n\t      }\n\t    },\n\t    operator: /=/,\n\t    tlist: {\n\t      pattern:\n\t        /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n\t      greedy: true,\n\t      inside: {\n\t        function: /^TLIST/,\n\t        property: {\n\t          pattern: /^(\\s*\\(\\s*)\\w+/,\n\t          lookbehind: true\n\t        },\n\t        string: /\"[^\"]*\"/,\n\t        punctuation: /[(),]/,\n\t        operator: /-/\n\t      }\n\t    },\n\t    punctuation: /[;,]/,\n\t    number: {\n\t      pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n\t      lookbehind: true\n\t    },\n\t    boolean: /NO|YES/\n\t  }\n\t  Prism.languages.px = Prism.languages.pcaxis\n\t}\n\treturn pcaxis_1;\n}\n\nexport { requirePcaxis as __require };",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,SAAc,GAAG,MAAM;CACvB,MAAM,CAAC,WAAW,GAAG,QAAQ;CAC7B,MAAM,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC;CACvB,SAAS,MAAM,CAAC,KAAK,EAAE;CACvB,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG;CAC3B,IAAI,MAAM,EAAE,SAAS;CACrB,IAAI,OAAO,EAAE;CACb,MAAM,OAAO;CACb,QAAQ,oFAAoF;CAC5F,MAAM,UAAU,EAAE,IAAI;CACtB,MAAM,MAAM,EAAE,IAAI;CAClB,MAAM,MAAM,EAAE;CACd,QAAQ,OAAO,EAAE,YAAY;CAC7B,QAAQ,QAAQ,EAAE;CAClB,UAAU,OAAO,EAAE,kBAAkB;CACrC,UAAU,UAAU,EAAE,IAAI;CAC1B,UAAU,MAAM,EAAE;CAClB,YAAY,WAAW,EAAE,SAAS;CAClC,YAAY,QAAQ,EAAE,QAAQ;CAC9B,WAAW;CACX,SAAS;CACT,QAAQ,SAAS,EAAE;CACnB,UAAU,OAAO,EAAE,iBAAiB;CACpC,UAAU,UAAU,EAAE,IAAI;CAC1B,UAAU,MAAM,EAAE;CAClB,YAAY,SAAS,EAAE;CACvB,cAAc,OAAO,EAAE,SAAS;CAChC,cAAc,KAAK,EAAE,UAAU;CAC/B,aAAa;CACb,YAAY,WAAW,EAAE,WAAW;CACpC,WAAW;CACX,SAAS;CACT,OAAO;CACP,KAAK;CACL,IAAI,QAAQ,EAAE,GAAG;CACjB,IAAI,KAAK,EAAE;CACX,MAAM,OAAO;CACb,QAAQ,sEAAsE;CAC9E,MAAM,MAAM,EAAE,IAAI;CAClB,MAAM,MAAM,EAAE;CACd,QAAQ,QAAQ,EAAE,QAAQ;CAC1B,QAAQ,QAAQ,EAAE;CAClB,UAAU,OAAO,EAAE,gBAAgB;CACnC,UAAU,UAAU,EAAE,IAAI;CAC1B,SAAS;CACT,QAAQ,MAAM,EAAE,SAAS;CACzB,QAAQ,WAAW,EAAE,OAAO;CAC5B,QAAQ,QAAQ,EAAE,GAAG;CACrB,OAAO;CACP,KAAK;CACL,IAAI,WAAW,EAAE,MAAM;CACvB,IAAI,MAAM,EAAE;CACZ,MAAM,OAAO,EAAE,2BAA2B;CAC1C,MAAM,UAAU,EAAE,IAAI;CACtB,KAAK;CACL,IAAI,OAAO,EAAE,QAAQ;CACrB,GAAG;CACH,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM;CAC7C"
      }
    },
    {
      "name": "inject",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445028,
      "end": 1702937445028,
      "order": "normal"
    }
  ]
}
