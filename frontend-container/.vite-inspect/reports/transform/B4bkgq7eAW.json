{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/ftl.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ftl\nftl.displayName = 'ftl'\nftl.aliases = []\nfunction ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n",
      "start": 1702937444892,
      "end": 1702937444911,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444911,
      "end": 1702937444911,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444911,
      "end": 1702937444911,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444911,
      "end": 1702937444911,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444911,
      "end": 1702937444911,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444911,
      "end": 1702937444911,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444911,
      "end": 1702937444911,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444911,
      "end": 1702937444911,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444911,
      "end": 1702937444911,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444911,
      "end": 1702937444911,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444911,
      "end": 1702937444911,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/markup-templating.js?commonjs-wrapped\";\n\nvar ftl_1;\nvar hasRequiredFtl;\n\nfunction requireFtl () {\n\tif (hasRequiredFtl) return ftl_1;\n\thasRequiredFtl = 1;\n\t'use strict'\n\tvar refractorMarkupTemplating = require$$0()\n\tftl_1 = ftl\n\tftl.displayName = 'ftl'\n\tftl.aliases = []\n\tfunction ftl(Prism) {\n\t  Prism.register(refractorMarkupTemplating)\n\t  ;(function (Prism) {\n\t    // https://freemarker.apache.org/docs/dgui_template_exp.html\n\t    // FTL expression with 4 levels of nesting supported\n\t    var FTL_EXPR =\n\t      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n\t        .source\n\t    for (var i = 0; i < 2; i++) {\n\t      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n\t        return FTL_EXPR\n\t      })\n\t    }\n\t    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n\t    var ftl = {\n\t      comment: /<#--[\\s\\S]*?-->/,\n\t      string: [\n\t        {\n\t          // raw string\n\t          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n\t          greedy: true\n\t        },\n\t        {\n\t          pattern: RegExp(\n\t            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n\t              /<expr>/g,\n\t              function () {\n\t                return FTL_EXPR\n\t              }\n\t            )\n\t          ),\n\t          greedy: true,\n\t          inside: {\n\t            interpolation: {\n\t              pattern: RegExp(\n\t                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n\t                  /<expr>/g,\n\t                  function () {\n\t                    return FTL_EXPR\n\t                  }\n\t                )\n\t              ),\n\t              lookbehind: true,\n\t              inside: {\n\t                'interpolation-punctuation': {\n\t                  pattern: /^\\$\\{|\\}$/,\n\t                  alias: 'punctuation'\n\t                },\n\t                rest: null\n\t              }\n\t            }\n\t          }\n\t        }\n\t      ],\n\t      keyword: /\\b(?:as)\\b/,\n\t      boolean: /\\b(?:false|true)\\b/,\n\t      'builtin-function': {\n\t        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n\t        lookbehind: true,\n\t        alias: 'function'\n\t      },\n\t      function: /\\b\\w+(?=\\s*\\()/,\n\t      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n\t      operator:\n\t        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n\t      punctuation: /[,;.:()[\\]{}]/\n\t    }\n\t    ftl.string[1].inside.interpolation.inside.rest = ftl\n\t    Prism.languages.ftl = {\n\t      'ftl-comment': {\n\t        // the pattern is shortened to be more efficient\n\t        pattern: /^<#--[\\s\\S]*/,\n\t        alias: 'comment'\n\t      },\n\t      'ftl-directive': {\n\t        pattern: /^<[\\s\\S]+>$/,\n\t        inside: {\n\t          directive: {\n\t            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n\t            lookbehind: true,\n\t            alias: 'keyword'\n\t          },\n\t          punctuation: /^<\\/?|\\/?>$/,\n\t          content: {\n\t            pattern: /\\s*\\S[\\s\\S]*/,\n\t            alias: 'ftl',\n\t            inside: ftl\n\t          }\n\t        }\n\t      },\n\t      'ftl-interpolation': {\n\t        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n\t        inside: {\n\t          punctuation: /^\\$\\{|\\}$/,\n\t          content: {\n\t            pattern: /\\s*\\S[\\s\\S]*/,\n\t            alias: 'ftl',\n\t            inside: ftl\n\t          }\n\t        }\n\t      }\n\t    }\n\t    Prism.hooks.add('before-tokenize', function (env) {\n\t      // eslint-disable-next-line regexp/no-useless-lazy\n\t      var pattern = RegExp(\n\t        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n\t          /<expr>/g,\n\t          function () {\n\t            return FTL_EXPR\n\t          }\n\t        ),\n\t        'gi'\n\t      )\n\t      Prism.languages['markup-templating'].buildPlaceholders(\n\t        env,\n\t        'ftl',\n\t        pattern\n\t      )\n\t    })\n\t    Prism.hooks.add('after-tokenize', function (env) {\n\t      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n\t    })\n\t  })(Prism)\n\t}\n\treturn ftl_1;\n}\n\nexport { requireFtl as __require };",
      "start": 1702937444911,
      "end": 1702937444995,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937444995,
      "end": 1702937444995,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444995,
      "end": 1702937444995,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444995,
      "end": 1702937444995,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444995,
      "end": 1702937444995,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444995,
      "end": 1702937444995,
      "order": "normal"
    }
  ]
}
