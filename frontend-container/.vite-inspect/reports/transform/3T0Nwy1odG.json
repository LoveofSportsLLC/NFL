{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/log.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = log\nlog.displayName = 'log'\nlog.aliases = []\nfunction log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n",
      "start": 1702937444958,
      "end": 1702937444976,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar log_1;\nvar hasRequiredLog;\n\nfunction requireLog () {\n\tif (hasRequiredLog) return log_1;\n\thasRequiredLog = 1;\n\t'use strict'\n\n\tlog_1 = log\n\tlog.displayName = 'log'\n\tlog.aliases = []\n\tfunction log(Prism) {\n\t  // This is a language definition for generic log files.\n\t  // Since there is no one log format, this language definition has to support all formats to some degree.\n\t  //\n\t  // Based on https://github.com/MTDL9/vim-log-highlighting\n\t  Prism.languages.log = {\n\t    string: {\n\t      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n\t      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n\t      greedy: true\n\t    },\n\t    exception: {\n\t      pattern:\n\t        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n\t      lookbehind: true,\n\t      greedy: true,\n\t      alias: ['javastacktrace', 'language-javastacktrace'],\n\t      inside: Prism.languages['javastacktrace'] || {\n\t        keyword: /\\bat\\b/,\n\t        function: /[a-z_][\\w$]*(?=\\()/,\n\t        punctuation: /[.:()]/\n\t      }\n\t    },\n\t    level: [\n\t      {\n\t        pattern:\n\t          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n\t        alias: ['error', 'important']\n\t      },\n\t      {\n\t        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n\t        alias: ['warning', 'important']\n\t      },\n\t      {\n\t        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n\t        alias: ['info', 'keyword']\n\t      },\n\t      {\n\t        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n\t        alias: ['debug', 'keyword']\n\t      },\n\t      {\n\t        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n\t        alias: ['trace', 'comment']\n\t      }\n\t    ],\n\t    property: {\n\t      pattern:\n\t        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n\t      lookbehind: true\n\t    },\n\t    separator: {\n\t      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n\t      lookbehind: true,\n\t      alias: 'comment'\n\t    },\n\t    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n\t    email: {\n\t      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n\t      lookbehind: true,\n\t      alias: 'url'\n\t    },\n\t    'ip-address': {\n\t      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n\t      alias: 'constant'\n\t    },\n\t    'mac-address': {\n\t      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n\t      alias: 'constant'\n\t    },\n\t    domain: {\n\t      pattern:\n\t        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n\t      lookbehind: true,\n\t      alias: 'constant'\n\t    },\n\t    uuid: {\n\t      pattern:\n\t        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n\t      alias: 'constant'\n\t    },\n\t    hash: {\n\t      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n\t      alias: 'constant'\n\t    },\n\t    'file-path': {\n\t      pattern:\n\t        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n\t      lookbehind: true,\n\t      greedy: true,\n\t      alias: 'string'\n\t    },\n\t    date: {\n\t      pattern: RegExp(\n\t        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n\t          '|' +\n\t          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n\t            .source +\n\t          '|' +\n\t          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n\t            .source,\n\t        'i'\n\t      ),\n\t      alias: 'number'\n\t    },\n\t    time: {\n\t      pattern:\n\t        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n\t      alias: 'number'\n\t    },\n\t    boolean: /\\b(?:false|null|true)\\b/i,\n\t    number: {\n\t      pattern:\n\t        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n\t      lookbehind: true\n\t    },\n\t    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n\t    punctuation: /[\\[\\].,]/\n\t  }\n\t}\n\treturn log_1;\n}\n\nexport { requireLog as __require };",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444976,
      "end": 1702937444976,
      "order": "normal"
    }
  ]
}
