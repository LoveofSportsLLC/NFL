{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/bison.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = bison\nbison.displayName = 'bison'\nbison.aliases = []\nfunction bison(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.bison = Prism.languages.extend('c', {})\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  })\n}\n",
      "start": 1702937444829,
      "end": 1702937444851,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444851,
      "end": 1702937444851,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/c.js?commonjs-wrapped\";\n\nvar bison_1;\nvar hasRequiredBison;\n\nfunction requireBison () {\n\tif (hasRequiredBison) return bison_1;\n\thasRequiredBison = 1;\n\t'use strict'\n\tvar refractorC = require$$0()\n\tbison_1 = bison\n\tbison.displayName = 'bison'\n\tbison.aliases = []\n\tfunction bison(Prism) {\n\t  Prism.register(refractorC)\n\t  Prism.languages.bison = Prism.languages.extend('c', {})\n\t  Prism.languages.insertBefore('bison', 'comment', {\n\t    bison: {\n\t      // This should match all the beginning of the file\n\t      // including the prologue(s), the bison declarations and\n\t      // the grammar rules.\n\t      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n\t      inside: {\n\t        c: {\n\t          // Allow for one level of nested braces\n\t          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n\t          inside: {\n\t            delimiter: {\n\t              pattern: /^%?\\{|%?\\}$/,\n\t              alias: 'punctuation'\n\t            },\n\t            'bison-variable': {\n\t              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n\t              alias: 'variable',\n\t              inside: {\n\t                punctuation: /<|>/\n\t              }\n\t            },\n\t            rest: Prism.languages.c\n\t          }\n\t        },\n\t        comment: Prism.languages.c.comment,\n\t        string: Prism.languages.c.string,\n\t        property: /\\S+(?=:)/,\n\t        keyword: /%\\w+/,\n\t        number: {\n\t          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n\t          lookbehind: true\n\t        },\n\t        punctuation: /%[%?]|[|:;\\[\\]<>]/\n\t      }\n\t    }\n\t  })\n\t}\n\treturn bison_1;\n}\n\nexport { requireBison as __require };",
      "start": 1702937444851,
      "end": 1702937444869,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;;CAAA,YAAY;CACZ,IAAI,UAAU,GAAG,YAAiB;AAClC,QAAc,GAAG,KAAK;CACtB,KAAK,CAAC,WAAW,GAAG,OAAO;CAC3B,KAAK,CAAC,OAAO,GAAG,EAAE;CAClB,SAAS,KAAK,CAAC,KAAK,EAAE;CACtB,EAAE,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC;CAC5B,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC;CACzD,EAAE,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,EAAE;CACnD,IAAI,KAAK,EAAE;CACX;CACA;CACA;CACA,MAAM,OAAO,EAAE,+BAA+B;CAC9C,MAAM,MAAM,EAAE;CACd,QAAQ,CAAC,EAAE;CACX;CACA,UAAU,OAAO,EAAE,yCAAyC;CAC5D,UAAU,MAAM,EAAE;CAClB,YAAY,SAAS,EAAE;CACvB,cAAc,OAAO,EAAE,aAAa;CACpC,cAAc,KAAK,EAAE,aAAa;CAClC,aAAa;CACb,YAAY,gBAAgB,EAAE;CAC9B,cAAc,OAAO,EAAE,0BAA0B;CACjD,cAAc,KAAK,EAAE,UAAU;CAC/B,cAAc,MAAM,EAAE;CACtB,gBAAgB,WAAW,EAAE,KAAK;CAClC,eAAe;CACf,aAAa;CACb,YAAY,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;CACnC,WAAW;CACX,SAAS;CACT,QAAQ,OAAO,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO;CAC1C,QAAQ,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM;CACxC,QAAQ,QAAQ,EAAE,UAAU;CAC5B,QAAQ,OAAO,EAAE,MAAM;CACvB,QAAQ,MAAM,EAAE;CAChB,UAAU,OAAO,EAAE,+BAA+B;CAClD,UAAU,UAAU,EAAE,IAAI;CAC1B,SAAS;CACT,QAAQ,WAAW,EAAE,mBAAmB;CACxC,OAAO;CACP,KAAK;CACL,GAAG,CAAC;CACJ"
      }
    },
    {
      "name": "inject",
      "start": 1702937444869,
      "end": 1702937444869,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444869,
      "end": 1702937444869,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444869,
      "end": 1702937444869,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444869,
      "end": 1702937444869,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444869,
      "end": 1702937444869,
      "order": "normal"
    }
  ]
}
