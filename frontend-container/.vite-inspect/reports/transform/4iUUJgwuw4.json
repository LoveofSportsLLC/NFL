{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/mizar.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = mizar\nmizar.displayName = 'mizar'\nmizar.aliases = []\nfunction mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword:\n      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\b\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n",
      "start": 1702937444968,
      "end": 1702937444992,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444992,
      "end": 1702937444992,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444992,
      "end": 1702937444992,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444992,
      "end": 1702937444992,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444992,
      "end": 1702937444992,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444992,
      "end": 1702937444992,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444992,
      "end": 1702937444992,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444992,
      "end": 1702937444992,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444992,
      "end": 1702937444992,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444992,
      "end": 1702937444992,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444992,
      "end": 1702937444992,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar mizar_1;\nvar hasRequiredMizar;\n\nfunction requireMizar () {\n\tif (hasRequiredMizar) return mizar_1;\n\thasRequiredMizar = 1;\n\t'use strict'\n\n\tmizar_1 = mizar\n\tmizar.displayName = 'mizar'\n\tmizar.aliases = []\n\tfunction mizar(Prism) {\n\t  Prism.languages.mizar = {\n\t    comment: /::.+/,\n\t    keyword:\n\t      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n\t    parameter: {\n\t      pattern: /\\$(?:10|\\d)/,\n\t      alias: 'variable'\n\t    },\n\t    variable: /\\b\\w+(?=:)/,\n\t    number: /(?:\\b|-)\\d+\\b/,\n\t    operator: /\\.\\.\\.|->|&|\\.?=/,\n\t    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n\t  }\n\t}\n\treturn mizar_1;\n}\n\nexport { requireMizar as __require };",
      "start": 1702937444992,
      "end": 1702937444993,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,QAAc,GAAG,KAAK;CACtB,KAAK,CAAC,WAAW,GAAG,OAAO;CAC3B,KAAK,CAAC,OAAO,GAAG,EAAE;CAClB,SAAS,KAAK,CAAC,KAAK,EAAE;CACtB,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG;CAC1B,IAAI,OAAO,EAAE,MAAM;CACnB,IAAI,OAAO;CACX,MAAM,q0BAAq0B;CAC30B,IAAI,SAAS,EAAE;CACf,MAAM,OAAO,EAAE,aAAa;CAC5B,MAAM,KAAK,EAAE,UAAU;CACvB,KAAK;CACL,IAAI,QAAQ,EAAE,YAAY;CAC1B,IAAI,MAAM,EAAE,eAAe;CAC3B,IAAI,QAAQ,EAAE,kBAAkB;CAChC,IAAI,WAAW,EAAE,uBAAuB;CACxC,GAAG;CACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937444993,
      "end": 1702937444993,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444993,
      "end": 1702937444993,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444993,
      "end": 1702937444993,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444993,
      "end": 1702937444993,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444993,
      "end": 1702937444993,
      "order": "normal"
    }
  ]
}
