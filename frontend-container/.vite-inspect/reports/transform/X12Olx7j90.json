{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/yaml.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag =\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)' // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey =\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n        /<PLAIN>/g,\n        function () {\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n            .source\n        }\n      )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern =\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n          .replace(/<<prop>>/g, function () {\n            return properties\n          })\n          .replace(/<<value>>/g, function () {\n            return value\n          })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/false|true/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n",
      "start": 1702937445125,
      "end": 1702937445150,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar yaml_1;\nvar hasRequiredYaml;\n\nfunction requireYaml () {\n\tif (hasRequiredYaml) return yaml_1;\n\thasRequiredYaml = 1;\n\t'use strict'\n\n\tyaml_1 = yaml\n\tyaml.displayName = 'yaml'\n\tyaml.aliases = ['yml']\n\tfunction yaml(Prism) {\n\t  ;(function (Prism) {\n\t    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n\t    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n\t    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\t    var tag =\n\t      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\t    var properties =\n\t      '(?:' +\n\t      tag.source +\n\t      '(?:[ \\t]+' +\n\t      anchorOrAlias.source +\n\t      ')?|' +\n\t      anchorOrAlias.source +\n\t      '(?:[ \\t]+' +\n\t      tag.source +\n\t      ')?)' // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n\t    // This is a simplified version that doesn't support \"#\" and multiline keys\n\t    // All these long scarry character classes are simplified versions of YAML's characters\n\t    var plainKey =\n\t      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n\t        /<PLAIN>/g,\n\t        function () {\n\t          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n\t            .source\n\t        }\n\t      )\n\t    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n\t    /**\n\t     *\n\t     * @param {string} value\n\t     * @param {string} [flags]\n\t     * @returns {RegExp}\n\t     */\n\t    function createValuePattern(value, flags) {\n\t      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n\t      var pattern =\n\t        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n\t          .replace(/<<prop>>/g, function () {\n\t            return properties\n\t          })\n\t          .replace(/<<value>>/g, function () {\n\t            return value\n\t          })\n\t      return RegExp(pattern, flags)\n\t    }\n\t    Prism.languages.yaml = {\n\t      scalar: {\n\t        pattern: RegExp(\n\t          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n\t            /<<prop>>/g,\n\t            function () {\n\t              return properties\n\t            }\n\t          )\n\t        ),\n\t        lookbehind: true,\n\t        alias: 'string'\n\t      },\n\t      comment: /#.*/,\n\t      key: {\n\t        pattern: RegExp(\n\t          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n\t            .replace(/<<prop>>/g, function () {\n\t              return properties\n\t            })\n\t            .replace(/<<key>>/g, function () {\n\t              return '(?:' + plainKey + '|' + string + ')'\n\t            })\n\t        ),\n\t        lookbehind: true,\n\t        greedy: true,\n\t        alias: 'atrule'\n\t      },\n\t      directive: {\n\t        pattern: /(^[ \\t]*)%.+/m,\n\t        lookbehind: true,\n\t        alias: 'important'\n\t      },\n\t      datetime: {\n\t        pattern: createValuePattern(\n\t          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n\t            .source\n\t        ),\n\t        lookbehind: true,\n\t        alias: 'number'\n\t      },\n\t      boolean: {\n\t        pattern: createValuePattern(/false|true/.source, 'i'),\n\t        lookbehind: true,\n\t        alias: 'important'\n\t      },\n\t      null: {\n\t        pattern: createValuePattern(/null|~/.source, 'i'),\n\t        lookbehind: true,\n\t        alias: 'important'\n\t      },\n\t      string: {\n\t        pattern: createValuePattern(string),\n\t        lookbehind: true,\n\t        greedy: true\n\t      },\n\t      number: {\n\t        pattern: createValuePattern(\n\t          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n\t            .source,\n\t          'i'\n\t        ),\n\t        lookbehind: true\n\t      },\n\t      tag: tag,\n\t      important: anchorOrAlias,\n\t      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n\t    }\n\t    Prism.languages.yml = Prism.languages.yaml\n\t  })(Prism)\n\t}\n\treturn yaml_1;\n}\n\nexport { requireYaml as __require };",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445150,
      "end": 1702937445150,
      "order": "normal"
    }
  ]
}
