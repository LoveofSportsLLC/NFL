{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/asm6502.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = asm6502\nasm6502.displayName = 'asm6502'\nasm6502.aliases = []\nfunction asm6502(Prism) {\n  Prism.languages.asm6502 = {\n    comment: /;.*/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{1,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[xya]\\b/i,\n      alias: 'variable'\n    },\n    punctuation: /[(),:]/\n  }\n}\n",
      "start": 1702937444791,
      "end": 1702937444835,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444835,
      "end": 1702937444835,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar asm6502_1;\nvar hasRequiredAsm6502;\n\nfunction requireAsm6502 () {\n\tif (hasRequiredAsm6502) return asm6502_1;\n\thasRequiredAsm6502 = 1;\n\t'use strict'\n\n\tasm6502_1 = asm6502\n\tasm6502.displayName = 'asm6502'\n\tasm6502.aliases = []\n\tfunction asm6502(Prism) {\n\t  Prism.languages.asm6502 = {\n\t    comment: /;.*/,\n\t    directive: {\n\t      pattern: /\\.\\w+(?= )/,\n\t      alias: 'property'\n\t    },\n\t    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t    'op-code': {\n\t      pattern:\n\t        /\\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b/,\n\t      alias: 'keyword'\n\t    },\n\t    'hex-number': {\n\t      pattern: /#?\\$[\\da-f]{1,4}\\b/i,\n\t      alias: 'number'\n\t    },\n\t    'binary-number': {\n\t      pattern: /#?%[01]+\\b/,\n\t      alias: 'number'\n\t    },\n\t    'decimal-number': {\n\t      pattern: /#?\\b\\d+\\b/,\n\t      alias: 'number'\n\t    },\n\t    register: {\n\t      pattern: /\\b[xya]\\b/i,\n\t      alias: 'variable'\n\t    },\n\t    punctuation: /[(),:]/\n\t  }\n\t}\n\treturn asm6502_1;\n}\n\nexport { requireAsm6502 as __require };",
      "start": 1702937444835,
      "end": 1702937444836,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,UAAc,GAAG,OAAO;CACxB,OAAO,CAAC,WAAW,GAAG,SAAS;CAC/B,OAAO,CAAC,OAAO,GAAG,EAAE;CACpB,SAAS,OAAO,CAAC,KAAK,EAAE;CACxB,EAAE,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG;CAC5B,IAAI,OAAO,EAAE,KAAK;CAClB,IAAI,SAAS,EAAE;CACf,MAAM,OAAO,EAAE,YAAY;CAC3B,MAAM,KAAK,EAAE,UAAU;CACvB,KAAK;CACL,IAAI,MAAM,EAAE,mCAAmC;CAC/C,IAAI,SAAS,EAAE;CACf,MAAM,OAAO;CACb,QAAQ,ycAAyc;CACjd,MAAM,KAAK,EAAE,SAAS;CACtB,KAAK;CACL,IAAI,YAAY,EAAE;CAClB,MAAM,OAAO,EAAE,qBAAqB;CACpC,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK;CACL,IAAI,eAAe,EAAE;CACrB,MAAM,OAAO,EAAE,YAAY;CAC3B,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK;CACL,IAAI,gBAAgB,EAAE;CACtB,MAAM,OAAO,EAAE,WAAW;CAC1B,MAAM,KAAK,EAAE,QAAQ;CACrB,KAAK;CACL,IAAI,QAAQ,EAAE;CACd,MAAM,OAAO,EAAE,YAAY;CAC3B,MAAM,KAAK,EAAE,UAAU;CACvB,KAAK;CACL,IAAI,WAAW,EAAE,QAAQ;CACzB,GAAG;CACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444836,
      "end": 1702937444836,
      "order": "normal"
    }
  ]
}
