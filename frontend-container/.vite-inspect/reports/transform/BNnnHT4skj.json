{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/Toast.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use client\";\n\nimport * as React from 'react';\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport classNames from 'classnames';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport ToastFade from './ToastFade';\nimport ToastHeader from './ToastHeader';\nimport ToastBody from './ToastBody';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ToastContext from './ToastContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Toast = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  transition: Transition = ToastFade,\n  show = true,\n  animation = true,\n  delay = 5000,\n  autohide = false,\n  onClose,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  bg,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'toast');\n\n  // We use refs for these, because we don't want to restart the autohide\n  // timer in case these values change.\n  const delayRef = useRef(delay);\n  const onCloseRef = useRef(onClose);\n  useEffect(() => {\n    delayRef.current = delay;\n    onCloseRef.current = onClose;\n  }, [delay, onClose]);\n  const autohideTimeout = useTimeout();\n  const autohideToast = !!(autohide && show);\n  const autohideFunc = useCallback(() => {\n    if (autohideToast) {\n      onCloseRef.current == null ? void 0 : onCloseRef.current();\n    }\n  }, [autohideToast]);\n  useEffect(() => {\n    // Only reset timer if show or autohide changes.\n    autohideTimeout.set(autohideFunc, delayRef.current);\n  }, [autohideTimeout, autohideFunc]);\n  const toastContext = useMemo(() => ({\n    onClose\n  }), [onClose]);\n  const hasAnimation = !!(Transition && animation);\n  const toast = /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(bsPrefix, className, bg && `bg-${bg}`, !hasAnimation && (show ? 'show' : 'hide')),\n    role: \"alert\",\n    \"aria-live\": \"assertive\",\n    \"aria-atomic\": \"true\"\n  });\n  return /*#__PURE__*/_jsx(ToastContext.Provider, {\n    value: toastContext,\n    children: hasAnimation && Transition ? /*#__PURE__*/_jsx(Transition, {\n      in: show,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: onExited,\n      unmountOnExit: true,\n      children: toast\n    }) : toast\n  });\n});\nToast.displayName = 'Toast';\nexport default Object.assign(Toast, {\n  Body: ToastBody,\n  Header: ToastHeader\n});",
      "start": 1702937441525,
      "end": 1702937441546,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441546,
      "end": 1702937441546,
      "order": "normal"
    }
  ]
}
