{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-i18next/dist/es/withTranslation.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createElement, forwardRef as forwardRefReact } from 'react';\nimport { useTranslation } from './useTranslation.js';\nimport { getDisplayName } from './utils.js';\nexport function withTranslation(ns) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function Extend(WrappedComponent) {\n    function I18nextWithTranslation(_ref) {\n      let {\n        forwardedRef,\n        ...rest\n      } = _ref;\n      const [t, i18n, ready] = useTranslation(ns, {\n        ...rest,\n        keyPrefix: options.keyPrefix\n      });\n      const passDownProps = {\n        ...rest,\n        t,\n        i18n,\n        tReady: ready\n      };\n      if (options.withRef && forwardedRef) {\n        passDownProps.ref = forwardedRef;\n      } else if (!options.withRef && forwardedRef) {\n        passDownProps.forwardedRef = forwardedRef;\n      }\n      return createElement(WrappedComponent, passDownProps);\n    }\n    I18nextWithTranslation.displayName = `withI18nextTranslation(${getDisplayName(WrappedComponent)})`;\n    I18nextWithTranslation.WrappedComponent = WrappedComponent;\n    const forwardRef = (props, ref) => createElement(I18nextWithTranslation, Object.assign({}, props, {\n      forwardedRef: ref\n    }));\n    return options.withRef ? forwardRefReact(forwardRef) : I18nextWithTranslation;\n  };\n}",
      "start": 1702937441223,
      "end": 1702937441296,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441296,
      "end": 1702937441296,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441296,
      "end": 1702937441297,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441297,
      "end": 1702937441297,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441297,
      "end": 1702937441297,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441297,
      "end": 1702937441297,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441297,
      "end": 1702937441297,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441297,
      "end": 1702937441297,
      "order": "normal"
    }
  ]
}
