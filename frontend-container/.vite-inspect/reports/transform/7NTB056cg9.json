{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/ElementChildren.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };",
      "start": 1702937441957,
      "end": 1702937442026,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937442026,
      "end": 1702937442026,
      "order": "normal"
    }
  ]
}
