{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/graphql/validation/rules/VariablesAreInputTypesRule.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isInputType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n *\n * See https://spec.graphql.org/draft/#sec-Variables-Are-Input-Types\n */\nexport function VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.type);\n\n      if (type !== undefined && !isInputType(type)) {\n        const variableName = node.variable.name.value;\n        const typeName = print(node.type);\n        context.reportError(\n          new GraphQLError(\n            `Variable \"$${variableName}\" cannot be non-input type \"${typeName}\".`,\n            {\n              nodes: node.type,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n",
      "start": 1702937443089,
      "end": 1702937443104,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937443104,
      "end": 1702937443104,
      "order": "normal"
    }
  ]
}
