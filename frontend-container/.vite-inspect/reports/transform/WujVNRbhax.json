{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/nevod.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = nevod\nnevod.displayName = 'nevod'\nnevod.aliases = []\nfunction nevod(Prism) {\n  Prism.languages.nevod = {\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n    string: {\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n      greedy: true,\n      inside: {\n        'string-attrs': /!$|!\\*$|\\*$/\n      }\n    },\n    namespace: {\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n      lookbehind: true\n    },\n    pattern: {\n      pattern:\n        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      inside: {\n        'pattern-name': {\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n          alias: 'class-name'\n        },\n        fields: {\n          pattern: /\\(.*\\)/,\n          inside: {\n            'field-name': {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: 'variable'\n            },\n            punctuation: /[,()]/,\n            operator: {\n              pattern: /~/,\n              alias: 'field-hidden-mark'\n            }\n          }\n        }\n      }\n    },\n    search: {\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n      alias: 'function',\n      lookbehind: true\n    },\n    keyword:\n      /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n    'standard-pattern': {\n      pattern:\n        /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n      inside: {\n        'standard-pattern-name': {\n          pattern: /^[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: 'number'\n        },\n        'standard-pattern-attr': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        punctuation: /[,()]/\n      }\n    },\n    quantifier: {\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /=/,\n        alias: 'pattern-def'\n      },\n      {\n        pattern: /&/,\n        alias: 'conjunction'\n      },\n      {\n        pattern: /~/,\n        alias: 'exception'\n      },\n      {\n        pattern: /\\?/,\n        alias: 'optionality'\n      },\n      {\n        pattern: /[[\\]]/,\n        alias: 'repetition'\n      },\n      {\n        pattern: /[{}]/,\n        alias: 'variation'\n      },\n      {\n        pattern: /[+_]/,\n        alias: 'sequence'\n      },\n      {\n        pattern: /\\.{2,3}/,\n        alias: 'span'\n      }\n    ],\n    'field-capture': [\n      {\n        pattern:\n          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      },\n      {\n        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      }\n    ],\n    punctuation: /[:;,()]/,\n    name: /[a-zA-Z0-9\\-.]+/\n  }\n}\n",
      "start": 1702937444977,
      "end": 1702937445010,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar nevod_1;\nvar hasRequiredNevod;\n\nfunction requireNevod () {\n\tif (hasRequiredNevod) return nevod_1;\n\thasRequiredNevod = 1;\n\t'use strict'\n\n\tnevod_1 = nevod\n\tnevod.displayName = 'nevod'\n\tnevod.aliases = []\n\tfunction nevod(Prism) {\n\t  Prism.languages.nevod = {\n\t    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n\t    string: {\n\t      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n\t      greedy: true,\n\t      inside: {\n\t        'string-attrs': /!$|!\\*$|\\*$/\n\t      }\n\t    },\n\t    namespace: {\n\t      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n\t      lookbehind: true\n\t    },\n\t    pattern: {\n\t      pattern:\n\t        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n\t      lookbehind: true,\n\t      inside: {\n\t        'pattern-name': {\n\t          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n\t          alias: 'class-name'\n\t        },\n\t        fields: {\n\t          pattern: /\\(.*\\)/,\n\t          inside: {\n\t            'field-name': {\n\t              pattern: /[a-zA-Z0-9\\-.]+/,\n\t              alias: 'variable'\n\t            },\n\t            punctuation: /[,()]/,\n\t            operator: {\n\t              pattern: /~/,\n\t              alias: 'field-hidden-mark'\n\t            }\n\t          }\n\t        }\n\t      }\n\t    },\n\t    search: {\n\t      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n\t      alias: 'function',\n\t      lookbehind: true\n\t    },\n\t    keyword:\n\t      /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n\t    'standard-pattern': {\n\t      pattern:\n\t        /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n\t      inside: {\n\t        'standard-pattern-name': {\n\t          pattern: /^[a-zA-Z0-9\\-.]+/,\n\t          alias: 'builtin'\n\t        },\n\t        quantifier: {\n\t          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n\t          alias: 'number'\n\t        },\n\t        'standard-pattern-attr': {\n\t          pattern: /[a-zA-Z0-9\\-.]+/,\n\t          alias: 'builtin'\n\t        },\n\t        punctuation: /[,()]/\n\t      }\n\t    },\n\t    quantifier: {\n\t      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n\t      alias: 'number'\n\t    },\n\t    operator: [\n\t      {\n\t        pattern: /=/,\n\t        alias: 'pattern-def'\n\t      },\n\t      {\n\t        pattern: /&/,\n\t        alias: 'conjunction'\n\t      },\n\t      {\n\t        pattern: /~/,\n\t        alias: 'exception'\n\t      },\n\t      {\n\t        pattern: /\\?/,\n\t        alias: 'optionality'\n\t      },\n\t      {\n\t        pattern: /[[\\]]/,\n\t        alias: 'repetition'\n\t      },\n\t      {\n\t        pattern: /[{}]/,\n\t        alias: 'variation'\n\t      },\n\t      {\n\t        pattern: /[+_]/,\n\t        alias: 'sequence'\n\t      },\n\t      {\n\t        pattern: /\\.{2,3}/,\n\t        alias: 'span'\n\t      }\n\t    ],\n\t    'field-capture': [\n\t      {\n\t        pattern:\n\t          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n\t        lookbehind: true,\n\t        inside: {\n\t          'field-name': {\n\t            pattern: /[a-zA-Z0-9\\-.]+/,\n\t            alias: 'variable'\n\t          },\n\t          colon: /:/\n\t        }\n\t      },\n\t      {\n\t        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n\t        inside: {\n\t          'field-name': {\n\t            pattern: /[a-zA-Z0-9\\-.]+/,\n\t            alias: 'variable'\n\t          },\n\t          colon: /:/\n\t        }\n\t      }\n\t    ],\n\t    punctuation: /[:;,()]/,\n\t    name: /[a-zA-Z0-9\\-.]+/\n\t  }\n\t}\n\treturn nevod_1;\n}\n\nexport { requireNevod as __require };",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "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"
      }
    },
    {
      "name": "inject",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937445011,
      "end": 1702937445011,
      "order": "normal"
    }
  ]
}
