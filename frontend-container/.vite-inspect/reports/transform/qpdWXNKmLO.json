{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-bootstrap/esm/Accordion.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});",
      "start": 1702937441295,
      "end": 1702937441418,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441418,
      "end": 1702937441418,
      "order": "normal"
    }
  ]
}
