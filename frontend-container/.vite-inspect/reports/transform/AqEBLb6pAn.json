{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/react-i18next/dist/es/context.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createContext } from 'react';\nimport { getDefaults, setDefaults } from './defaults.js';\nimport { getI18n, setI18n } from './i18nInstance.js';\nimport { initReactI18next } from './initReactI18next.js';\nexport { getDefaults, setDefaults, getI18n, setI18n, initReactI18next };\nexport const I18nContext = createContext();\nexport class ReportNamespaces {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach(ns => {\n      if (!this.usedNamespaces[ns]) this.usedNamespaces[ns] = true;\n    });\n  }\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n}\nexport function composeInitialProps(ForComponent) {\n  return ctx => new Promise(resolve => {\n    const i18nInitialProps = getInitialProps();\n    if (ForComponent.getInitialProps) {\n      ForComponent.getInitialProps(ctx).then(componentsInitialProps => {\n        resolve({\n          ...componentsInitialProps,\n          ...i18nInitialProps\n        });\n      });\n    } else {\n      resolve(i18nInitialProps);\n    }\n  });\n}\nexport function getInitialProps() {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach(l => {\n    initialI18nStore[l] = {};\n    namespaces.forEach(ns => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n}",
      "start": 1702937441241,
      "end": 1702937441298,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937441298,
      "end": 1702937441298,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937441298,
      "end": 1702937441298,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937441298,
      "end": 1702937441298,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937441298,
      "end": 1702937441298,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937441298,
      "end": 1702937441298,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937441298,
      "end": 1702937441298,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937441298,
      "end": 1702937441298,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937441298,
      "end": 1702937441298,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937441298,
      "end": 1702937441298,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937441298,
      "end": 1702937441298,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1702937441298,
      "end": 1702937441298,
      "order": "normal"
    },
    {
      "name": "inject",
      "start": 1702937441298,
      "end": 1702937441299,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937441299,
      "end": 1702937441299,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937441299,
      "end": 1702937441299,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937441299,
      "end": 1702937441299,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937441299,
      "end": 1702937441299,
      "order": "normal"
    }
  ]
}
