{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/handlebars.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = handlebars\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = ['hbs']\nfunction handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:false|true)\\b/,\n      block: {\n        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n    Prism.languages.hbs = Prism.languages.handlebars\n  })(Prism)\n}\n",
      "start": 1702937444903,
      "end": 1702937444923,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444923,
      "end": 1702937444923,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444923,
      "end": 1702937444923,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444923,
      "end": 1702937444923,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444923,
      "end": 1702937444923,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444923,
      "end": 1702937444923,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444923,
      "end": 1702937444923,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444923,
      "end": 1702937444923,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444923,
      "end": 1702937444923,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444923,
      "end": 1702937444923,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444923,
      "end": 1702937444923,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __require as require$$0 } from \"\\u0000/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/markup-templating.js?commonjs-wrapped\";\n\nvar handlebars_1;\nvar hasRequiredHandlebars;\n\nfunction requireHandlebars () {\n\tif (hasRequiredHandlebars) return handlebars_1;\n\thasRequiredHandlebars = 1;\n\t'use strict'\n\tvar refractorMarkupTemplating = require$$0()\n\thandlebars_1 = handlebars\n\thandlebars.displayName = 'handlebars'\n\thandlebars.aliases = ['hbs']\n\tfunction handlebars(Prism) {\n\t  Prism.register(refractorMarkupTemplating)\n\t  ;(function (Prism) {\n\t    Prism.languages.handlebars = {\n\t      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n\t      delimiter: {\n\t        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n\t        alias: 'punctuation'\n\t      },\n\t      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n\t      boolean: /\\b(?:false|true)\\b/,\n\t      block: {\n\t        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n\t        lookbehind: true,\n\t        alias: 'keyword'\n\t      },\n\t      brackets: {\n\t        pattern: /\\[[^\\]]+\\]/,\n\t        inside: {\n\t          punctuation: /\\[|\\]/,\n\t          variable: /[\\s\\S]+/\n\t        }\n\t      },\n\t      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n\t      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n\t    }\n\t    Prism.hooks.add('before-tokenize', function (env) {\n\t      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n\t      Prism.languages['markup-templating'].buildPlaceholders(\n\t        env,\n\t        'handlebars',\n\t        handlebarsPattern\n\t      )\n\t    })\n\t    Prism.hooks.add('after-tokenize', function (env) {\n\t      Prism.languages['markup-templating'].tokenizePlaceholders(\n\t        env,\n\t        'handlebars'\n\t      )\n\t    })\n\t    Prism.languages.hbs = Prism.languages.handlebars\n\t  })(Prism)\n\t}\n\treturn handlebars_1;\n}\n\nexport { requireHandlebars as __require };",
      "start": 1702937444923,
      "end": 1702937444995,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;;CAAA,YAAY;CACZ,IAAI,yBAAyB,GAAG,YAAiC;AACjE,aAAc,GAAG,UAAU;CAC3B,UAAU,CAAC,WAAW,GAAG,YAAY;CACrC,UAAU,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC;CAC5B,SAAS,UAAU,CAAC,KAAK,EAAE;CAC3B,EAAE,KAAK,CAAC,QAAQ,CAAC,yBAAyB,CAAC;CAC3C,GAAG,CAAC,UAAU,KAAK,EAAE;CACrB,IAAI,KAAK,CAAC,SAAS,CAAC,UAAU,GAAG;CACjC,MAAM,OAAO,EAAE,mBAAmB;CAClC,MAAM,SAAS,EAAE;CACjB,QAAQ,OAAO,EAAE,mBAAmB;CACpC,QAAQ,KAAK,EAAE,aAAa;CAC5B,OAAO;CACP,MAAM,MAAM,EAAE,kCAAkC;CAChD,MAAM,MAAM,EAAE,gEAAgE;CAC9E,MAAM,OAAO,EAAE,oBAAoB;CACnC,MAAM,KAAK,EAAE;CACb,QAAQ,OAAO,EAAE,8CAA8C;CAC/D,QAAQ,UAAU,EAAE,IAAI;CACxB,QAAQ,KAAK,EAAE,SAAS;CACxB,OAAO;CACP,MAAM,QAAQ,EAAE;CAChB,QAAQ,OAAO,EAAE,YAAY;CAC7B,QAAQ,MAAM,EAAE;CAChB,UAAU,WAAW,EAAE,OAAO;CAC9B,UAAU,QAAQ,EAAE,SAAS;CAC7B,SAAS;CACT,OAAO;CACP,MAAM,WAAW,EAAE,oCAAoC;CACvD,MAAM,QAAQ,EAAE,sCAAsC;CACtD,KAAK;CACL,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,EAAE,UAAU,GAAG,EAAE;CACtD,MAAM,IAAI,iBAAiB,GAAG,wCAAwC;CACtE,MAAM,KAAK,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,iBAAiB;CAC5D,QAAQ,GAAG;CACX,QAAQ,YAAY;CACpB,QAAQ,iBAAiB;CACzB,OAAO;CACP,KAAK,CAAC;CACN,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,EAAE,UAAU,GAAG,EAAE;CACrD,MAAM,KAAK,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,oBAAoB;CAC/D,QAAQ,GAAG;CACX,QAAQ,YAAY;CACpB,OAAO;CACP,KAAK,CAAC;CACN,IAAI,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,UAAU;CACpD,GAAG,EAAE,KAAK,CAAC;CACX"
      }
    },
    {
      "name": "inject",
      "start": 1702937444995,
      "end": 1702937444995,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444995,
      "end": 1702937444995,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444995,
      "end": 1702937444995,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444995,
      "end": 1702937444995,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444995,
      "end": 1702937444995,
      "order": "normal"
    }
  ]
}
