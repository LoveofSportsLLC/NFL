{
  "resolvedId": "/home/zepor/ssweb/frontend-container/node_modules/refractor/lang/git.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "'use strict'\n\nmodule.exports = git\ngit.displayName = 'git'\ngit.aliases = []\nfunction git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/\n      }\n    },\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    'commit-sha1': /^commit \\w{40}$/m\n  }\n}\n",
      "start": 1702937444895,
      "end": 1702937444915,
      "sourcemaps": null
    },
    {
      "name": "vite:react-babel",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\n\nvar git_1;\nvar hasRequiredGit;\n\nfunction requireGit () {\n\tif (hasRequiredGit) return git_1;\n\thasRequiredGit = 1;\n\t'use strict'\n\n\tgit_1 = git\n\tgit.displayName = 'git'\n\tgit.aliases = []\n\tfunction git(Prism) {\n\t  Prism.languages.git = {\n\t    /*\n\t     * A simple one line comment like in a git status command\n\t     * For instance:\n\t     * $ git status\n\t     * # On branch infinite-scroll\n\t     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n\t     * # and have 1 and 2 different commits each, respectively.\n\t     * nothing to commit (working directory clean)\n\t     */\n\t    comment: /^#.*/m,\n\t    /*\n\t     * Regexp to match the changed lines in a git diff output. Check the example below.\n\t     */\n\t    deleted: /^[-–].*/m,\n\t    inserted: /^\\+.*/m,\n\t    /*\n\t     * a string (double and simple quote)\n\t     */\n\t    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t    /*\n\t     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n\t     * For instance:\n\t     * $ git add file.txt\n\t     */\n\t    command: {\n\t      pattern: /^.*\\$ git .*$/m,\n\t      inside: {\n\t        /*\n\t         * A git command can contain a parameter starting by a single or a double dash followed by a string\n\t         * For instance:\n\t         * $ git diff --cached\n\t         * $ git log -p\n\t         */\n\t        parameter: /\\s--?\\w+/\n\t      }\n\t    },\n\t    /*\n\t     * Coordinates displayed in a git diff command\n\t     * For instance:\n\t     * $ git diff\n\t     * diff --git file.txt file.txt\n\t     * index 6214953..1d54a52 100644\n\t     * --- file.txt\n\t     * +++ file.txt\n\t     * @@ -1 +1,2 @@\n\t     * -Here's my tetx file\n\t     * +Here's my text file\n\t     * +And this is the second line\n\t     */\n\t    coord: /^@@.*@@$/m,\n\t    /*\n\t     * Match a \"commit [SHA1]\" line in a git log output.\n\t     * For instance:\n\t     * $ git log\n\t     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n\t     * Author: lgiraudel\n\t     * Date:   Mon Feb 17 11:18:34 2014 +0100\n\t     *\n\t     *     Add of a new line\n\t     */\n\t    'commit-sha1': /^commit \\w{40}$/m\n\t  }\n\t}\n\treturn git_1;\n}\n\nexport { requireGit as __require };",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;;;;;CAAA,YAAY;AACZ;AACA,MAAc,GAAG,GAAG;CACpB,GAAG,CAAC,WAAW,GAAG,KAAK;CACvB,GAAG,CAAC,OAAO,GAAG,EAAE;CAChB,SAAS,GAAG,CAAC,KAAK,EAAE;CACpB,EAAE,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG;CACxB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,IAAI,OAAO,EAAE,OAAO;CACpB;CACA;CACA;CACA,IAAI,OAAO,EAAE,UAAU;CACvB,IAAI,QAAQ,EAAE,QAAQ;CACtB;CACA;CACA;CACA,IAAI,MAAM,EAAE,iCAAiC;CAC7C;CACA;CACA;CACA;CACA;CACA,IAAI,OAAO,EAAE;CACb,MAAM,OAAO,EAAE,gBAAgB;CAC/B,MAAM,MAAM,EAAE;CACd;CACA;CACA;CACA;CACA;CACA;CACA,QAAQ,SAAS,EAAE,UAAU;CAC7B,OAAO;CACP,KAAK;CACL;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,IAAI,KAAK,EAAE,WAAW;CACtB;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA,IAAI,aAAa,EAAE,kBAAkB;CACrC,GAAG;CACH"
      }
    },
    {
      "name": "inject",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1702937444915,
      "end": 1702937444915,
      "order": "normal"
    }
  ]
}
