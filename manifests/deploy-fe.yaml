apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deploy
  namespace: azdevspace
  labels:
    app: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: loveofsports.azurecr.io/loveofsports/ssweb-frontend:34c362351cd2cd6ff6f2a2ae1eba16810194e24b
        env:
        - name: FRONTEND_SERVICE_HOST
          value: frontend
        - name: FRONTEND_SERVICE_PORT
          value: "3000"
        - name: NODE_ENV
          value: production
        - name: AZURE_STORAGE_ACCOUNT
          value: sportfs
        - name: AZURE_STORAGE_KEY
          valueFrom:
            secretKeyRef:
              name: azure-storage-account-secret
              key: azurestorageaccountkey
        - name: AZURE_SHARE_NAME
          value: sportshare
        - name: MONGODB_URL
          valueFrom:
            secretKeyRef:
              name: my-cluster-secrets
              key: MONGODB_URL
        - name: REDIS_HOST
          value: "redis-service"
        - name: BACKEND_HOST
          value: "backend-service"
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: /ssweb/frontend-container
          name: frontend-file
        resources:
          requests:
            cpu: "1"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "2Gi"
      imagePullSecrets:
      - name: my-registry-secret
      volumes:
      - name: frontend-file
        persistentVolumeClaim:
          claimName: frontend-pvc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: frontend-pdb
  namespace: azdevspace
spec:
  minAvailable: 2 # Set the minimum available pods to 2 (to allow 1 disruption)
  selector:
    matchLabels:
      app: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: azdevspace
spec:
  ports:
  - name: http
    port: 80
    targetPort: 3000
  - name: https
    port: 443
    targetPort: 3000
  selector:
    app: frontend
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer: {}
