apiVersion: v1
kind: Pod
metadata:
  namespace: azdevspace
  name: frontend-pod
  labels:
    app: frontend
spec:
  containers:
    - name: frontend
      image: loveofsports.azurecr.io/ssweb-frontend:latest
      env:
        - name: FRONTEND_SERVICE_HOST
          value: frontend
        - name: FRONTEND_SERVICE_PORT
          value: "3000"
        - name: NODE_ENV
          value: development
        - name: AZURE_STORAGE_ACCOUNT
          value: sportfs
        - name: AZURE_STORAGE_KEY
          valueFrom:
            secretKeyRef:
              name: azure-storage-account-secret
              key: azurestorageaccountkey
        - name: AZURE_SHARE_NAME
          value: sportshare
        - name: MONGODB_URL  # Add this environment variable
          valueFrom:
            secretKeyRef:
              name: my-cluster-secrets
              key: MONGODB_URL  # Use the correct key name
      ports:
        - containerPort: 3000
      volumeMounts:
        - mountPath: /ssweb/javascript
          name: frontend-file
      resources:
        limits:
          cpu: "2"
          memory: "2Gi"
  imagePullSecrets:
  - name: my-registry-secret
  volumes:
    - name: frontend-file
      persistentVolumeClaim:
        claimName: frontend-pvc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: frontend-pdb
  namespace: azdevspace
spec:
  minAvailable: 2  # Set the minimum available pods to 2 (to allow 1 disruption)
  selector:
    matchLabels:
      app: frontend
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-11-12T18:57:14Z"
  name: frontend-service
  namespace: azdevspace
  resourceVersion: "736207"
  uid: a545598a-3357-470f-a7f2-f404253a8e14
spec:
  clusterIP: 10.0.103.223
  clusterIPs:
  - 10.0.103.223
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
  - name: http
    port: 80
    targetPort: 3000
  - name: https
    port: 443
    targetPort: 3000
  selector:
    app: frontend
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
