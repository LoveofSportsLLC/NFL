/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/10.0.17
 * Generated at: 2023-10-26 23:14:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class worksheet_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/assets/jquery-ui-dist/jquery-ui.min.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/assets/slickgrid/slick.grid.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/css/slick-nifi-theme.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/js/jquery/modal/jquery.modal.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/js/jquery/combo/jquery.combo.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/assets/qtip2/dist/jquery.qtip.min.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/js/codemirror/lib/codemirror.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/js/codemirror/addon/hint/show-hint.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/js/jquery/nfeditor/jquery.nfeditor.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/js/jquery/nfeditor/languages/nfeditor.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/fonts/flowfont/flowfont.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/assets/font-awesome/css/font-awesome.min.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/assets/reset.css/reset.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/main.css\" type=\"text/css\" />\n");
      out.write("        <link rel=\"stylesheet\" href=\"../nifi/css/common-ui.css\" type=\"text/css\" />\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/jquery/dist/jquery.min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/jquery/jquery.center.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/jquery/jquery.each.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/jquery/jquery.tab.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/jquery/modal/jquery.modal.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/jquery/combo/jquery.combo.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/jquery/jquery.ellipsis.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/jquery-ui-dist/jquery-ui.min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/qtip2/dist/jquery.qtip.min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/JSON2/json2.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/slickgrid/lib/jquery.event.drag-2.3.0.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/slickgrid/plugins/slick.cellrangedecorator.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/slickgrid/plugins/slick.cellrangeselector.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/slickgrid/plugins/slick.cellselectionmodel.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/slickgrid/plugins/slick.rowselectionmodel.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/slickgrid/slick.formatters.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/slickgrid/slick.editors.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/slickgrid/slick.dataview.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/slickgrid/slick.core.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/assets/slickgrid/slick.grid.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/codemirror/lib/codemirror-compressed.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/nf/nf-namespace.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/nf/nf-authorization-storage.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/nf/nf-storage.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/nf/nf-ajax-setup.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/nf/nf-universal-capture.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/jquery/nfeditor/languages/nfel.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../nifi/js/jquery/nfeditor/jquery.nfeditor.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"js/application.js\"></script>\n");
      out.write("        <title>Update Attribute</title>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div id=\"attribute-updater-processor-id\" class=\"hidden\">");
      out.print( request.getParameter("id") == null ? "" : org.apache.nifi.util.EscapeUtils.escapeHtml(request.getParameter("id")) );
      out.write("</div>\n");
      out.write("        <div id=\"attribute-updater-client-id\" class=\"hidden\">");
      out.print( request.getParameter("clientId") == null ? "" : org.apache.nifi.util.EscapeUtils.escapeHtml(request.getParameter("clientId")) );
      out.write("</div>\n");
      out.write("        <div id=\"attribute-updater-revision\" class=\"hidden\">");
      out.print( request.getParameter("revision") == null ? "" : org.apache.nifi.util.EscapeUtils.escapeHtml(request.getParameter("revision")) );
      out.write("</div>\n");
      out.write("        <div id=\"attribute-updater-editable\" class=\"hidden\">");
      out.print( request.getParameter("editable") == null ? "" : org.apache.nifi.util.EscapeUtils.escapeHtml(request.getParameter("editable")) );
      out.write("</div>\n");
      out.write("        <div id=\"attribute-updater-disconnected-node-acknowledged\" class=\"hidden\">");
      out.print( request.getParameter("disconnectedNodeAcknowledged") == null ? "false" : org.apache.nifi.util.EscapeUtils.escapeHtml(request.getParameter("disconnectedNodeAcknowledged")) );
      out.write("</div>\n");
      out.write("        <div id=\"update-attributes-content\">\n");
      out.write("            <div id=\"rule-list-panel\">\n");
      out.write("                <div id=\"flowfile-policy-container\">\n");
      out.write("                    <span id=\"selected-flowfile-policy\" class=\"hidden\"></span>\n");
      out.write("                    <div id=\"flowfile-policy-label\" class=\"large-label\">FlowFile Policy</div>\n");
      out.write("                    <div class=\"info fa fa-question-circle\" title=\"Defines the behavior when multiple rules match. Use clone will ensure that each matching rule is executed with a copy of the original flowfile. Use original will execute all matching rules with the original flowfile in the order specified below.\"></div>\n");
      out.write("                    <div id=\"flowfile-policy\"></div>\n");
      out.write("                    <div class=\"clear\"></div>\n");
      out.write("                </div>\n");
      out.write("                <div id=\"rule-label-container\">\n");
      out.write("                    <div id=\"rules-label\" class=\"large-label\">Rules</div>\n");
      out.write("                    <div class=\"info fa fa-question-circle\" title=\"Click and drag to change the order that rules are evaluated.\"></div>\n");
      out.write("                    <button id=\"new-rule\" class=\"new-rule hidden fa fa-plus\"></button>\n");
      out.write("                    <div class=\"clear\"></div>\n");
      out.write("                </div>\n");
      out.write("                <div id=\"rule-list-container\">\n");
      out.write("                    <ul id=\"rule-list\"></ul>\n");
      out.write("                </div>\n");
      out.write("                <div id=\"no-rules\" class=\"unset\">No rules found.</div>\n");
      out.write("                <div id=\"rule-filter-controls\" class=\"hidden\">\n");
      out.write("                    <div id=\"rule-filter-container\">\n");
      out.write("                        <input type=\"text\" placeholder=\"Filter\" id=\"rule-filter\"/>\n");
      out.write("                        <div id=\"rule-filter-type\"></div>\n");
      out.write("                    </div>\n");
      out.write("                    <div id=\"rule-filter-stats\" class=\"filter-status\">\n");
      out.write("                        Displaying&nbsp;<span id=\"displayed-rules\"></span>&nbsp;of&nbsp;<span id=\"total-rules\"></span>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"rule-details-panel\">\n");
      out.write("                <div id=\"selected-rule-name-container\" class=\"selected-rule-detail\">\n");
      out.write("                    <div class=\"large-label\">Rule Name</div>\n");
      out.write("                    <div id=\"selected-rule-id\" class=\"hidden\"></div>\n");
      out.write("                    <div id=\"no-rule-selected-label\" class=\"unset\">No rule selected.</div>\n");
      out.write("                    <input type=\"text\" id=\"selected-rule-name\" class=\"hidden\"></input>\n");
      out.write("                </div>\n");
      out.write("                <div id=\"selected-rule-comments-container\" class=\"selected-rule-detail\">\n");
      out.write("                    <div class=\"large-label\">Rule Comments</div>\n");
      out.write("                    <textarea id=\"selected-rule-comments\" rows=\"4\" cols=\"60\"></textarea>\n");
      out.write("                </div>\n");
      out.write("                <div id=\"selected-rule-conditions-container\" class=\"selected-rule-detail\">\n");
      out.write("                    <div class=\"large-label-container\">\n");
      out.write("                        <div id=\"conditions-label\" class=\"large-label\">Conditions</div>\n");
      out.write("                        <div class=\"info fa fa-question-circle\" title=\"All conditions must be met for this rule to match.\"></div>\n");
      out.write("                        <button id=\"new-condition\" title=\"New Condition\" class=\"new-condition hidden fa fa-plus\"></button>\n");
      out.write("                        <div class=\"clear\"></div>\n");
      out.write("                    </div>\n");
      out.write("                    <div id=\"selected-rule-conditions\"></div>\n");
      out.write("                </div>\n");
      out.write("                <div id=\"selected-rule-actions-container\" class=\"selected-rule-detail\">\n");
      out.write("                    <div class=\"large-label-container\">\n");
      out.write("                        <div id=\"actions-label\" class=\"large-label\">Actions</div>\n");
      out.write("                        <button id=\"new-action\" title=\"New Action\" class=\"new-action hidden fa fa-plus\"></button>\n");
      out.write("                        <div class=\"clear\"></div>\n");
      out.write("                    </div>\n");
      out.write("                    <div id=\"selected-rule-actions\"></div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"clear\"></div>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"message-and-save-container\">\n");
      out.write("                <div id=\"message\"></div>\n");
      out.write("                <div id=\"selected-rule-save\" class=\"button hidden\">Save</div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"clear\"></div>\n");
      out.write("            <div id=\"glass-pane\"></div>\n");
      out.write("            <div id=\"ok-dialog\" class=\"small-dialog\">\n");
      out.write("                <div id=\"ok-dialog-content\" class=\"dialog-content\"></div>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"yes-no-dialog\" class=\"small-dialog\">\n");
      out.write("                <div id=\"yes-no-dialog-content\" class=\"dialog-content\"></div>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"new-rule-dialog\" class=\"small-dialog\">\n");
      out.write("                <div class=\"dialog-content\">\n");
      out.write("                    <div class=\"rule-setting\">\n");
      out.write("                        <div class=\"setting-name\">Rule name</div>\n");
      out.write("                        <div>\n");
      out.write("                            <input id=\"new-rule-name\" type=\"text\" />\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"rule-setting\">\n");
      out.write("                        <div class=\"setting-name\">Copy from existing rule (optional)</div>\n");
      out.write("                        <div>\n");
      out.write("                            <input id=\"copy-from-rule-name\" placeholder=\"Search rule name\" type=\"text\" class=\"search\" />\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"new-condition-dialog\" class=\"dialog\">\n");
      out.write("                <div>\n");
      out.write("                    <div class=\"rule-setting\">\n");
      out.write("                        <div class=\"setting-name\">Expression</div>\n");
      out.write("                        <div>\n");
      out.write("                            <div id=\"new-condition-expression\"></div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div id=\"new-condition-button-container\">\n");
      out.write("                    <div id=\"new-condition-add\" class=\"button button-normal\">Add</div>\n");
      out.write("                    <div id=\"new-condition-cancel\" class=\"secondary-button button-normal\">Cancel</div>\n");
      out.write("                    <div class=\"clear\"></div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div id=\"new-action-dialog\" class=\"dialog\">\n");
      out.write("                <div style=\"margin-bottom: 32px;\">\n");
      out.write("                    <div class=\"rule-setting\">\n");
      out.write("                        <div class=\"setting-name\">Attribute</div>\n");
      out.write("                        <div id=\"new-action-attribute-container\">\n");
      out.write("                            <input id=\"new-action-attribute\" type=\"text\"></input>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"rule-setting\">\n");
      out.write("                        <div class=\"setting-name\">Value</div>\n");
      out.write("                        <div>\n");
      out.write("                            <div id=\"new-action-value\"></div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div id=\"new-action-button-container\">\n");
      out.write("                    <div id=\"new-action-add\" class=\"button button-normal\">Add</div>\n");
      out.write("                    <div id=\"new-action-cancel\" class=\"secondary-button button-normal\">Cancel</div>\n");
      out.write("                    <div class=\"clear\"></div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
