<extensionManifest><groupId>org.apache.nifi</groupId><artifactId>nifi-slack-nar</artifactId><version>2.0.0-SNAPSHOT</version><parentNar><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.0.0-SNAPSHOT</version></parentNar><systemApiVersion>2.0.0-SNAPSHOT</systemApiVersion><buildInfo><tag>HEAD</tag><branch>main</branch><revision>f352857</revision></buildInfo><extensions><extension><name>org.apache.nifi.processors.slack.ConsumeSlack</name><type>PROCESSOR</type><description>Retrieves messages from one or more configured Slack channels. The messages are written out in JSON format. See Usage / Additional Details for more information about how to configure this Processor and enable it to retrieve messages from Slack.</description><tags><tag>slack</tag><tag>conversation</tag><tag>conversation.history</tag><tag>social media</tag><tag>team</tag><tag>text</tag><tag>unstructured</tag></tags><properties><property><name>Channels</name><displayName>Channels</displayName><description>A comma-separated list of Slack Channels to Retrieve Messages From. Each element in the list may be either a Channel ID, such as C0L9VCD47, or (for public channels only) the name of a channel, prefixed with a # sign, such as #general. If any channel name is provided instead,instead of an ID, the Access Token provided must be granted the channels:read scope in order to resolve the Channel ID. See the Processor's Additional Details for information on how to find a Channel ID.</description><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Access Token</name><displayName>Access Token</displayName><description>OAuth Access Token used for authenticating/authorizing the Slack request sent by NiFi. This may be either a User Token or a Bot Token. It must be granted the channels:history, groups:history, im:history, or mpim:history scope, depending on the type of conversation being used.</description><required>true</required><sensitive>true</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Reply Monitor Window</name><displayName>Reply Monitor Window</displayName><description>After consuming all messages in a given channel, this Processor will periodically poll all "threaded messages", aka Replies, whose timestamp is between now and this amount of time in the past in order to check for any new replies. Setting this value to a larger value may result in additional resource use and may result in Rate Limiting. However, if a user replies to an old thread that was started outside of this window, the reply may not be captured.</description><defaultValue>7 days</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Reply Monitor Frequency</name><displayName>Reply Monitor Frequency</displayName><description>After consuming all messages in a given channel, this Processor will periodically poll all "threaded messages", aka Replies, whose timestamp falls between now and the amount of time specified by the &lt;Reply Monitor Window&gt; property. This property determines how frequently those messages are polled. Setting the value to a shorter duration may result in replies to messages being captured more quickly, providing a lower latency. However, it will also result in additional resource use and could trigger Rate Limiting to occur.</description><defaultValue>5 mins</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Batch Size</name><displayName>Batch Size</displayName><description>The maximum number of messages to retrieve in a single request to Slack. The entire response will be parsed into memory, so it is important that this be kept in mind when setting this value.</description><defaultValue>100</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Resolve Usernames</name><displayName>Resolve Usernames</displayName><description>Specifies whether or not User IDs should be resolved to usernames. By default, Slack Messages provide the ID of the user that sends a message, such as U0123456789, but not the username, such as NiFiUser. The username may be resolved, but it may require additional calls to the Slack API and requires that the Token used be granted the users:read scope. If set to true, usernames will be resolved with a best-effort policy: if a username cannot be obtained, it will be skipped over. Also, note that when a username is obtained, the Message's &lt;username&gt; field is populated, and the &lt;text&gt; field is updated such that any mention will be output such as "Hi @user" instead of "Hi &lt;@U1234567&gt;".</description><defaultValue>true</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Include Message Blocks</name><displayName>Include Message Blocks</displayName><description>Specifies whether or not the output JSON should include the value of the 'blocks' field for each Slack Message. This field includes information such as individual parts of a message that are formatted using rich text. This may be useful, for instance, for parsing. However, it often accounts for a significant portion of the data and as such may be set to null when it is not useful to you.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Include Null Fields</name><displayName>Include Null Fields</displayName><description>Specifies whether or not fields that have null values should be included in the output JSON. If true, any field in a Slack Message that has a null value will be included in the JSON with a value of null. If false, the key omitted from the output JSON entirely. Omitting null values results in smaller messages that are generally more efficient to process, but including the values may provide a better understanding of the format, especially for schema inference.</description><defaultValue>true</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><relationships><relationship><name>success</name><description>Slack messages that are successfully received will be routed to this relationship</description><autoTerminated>false</autoTerminated></relationship></relationships><writesAttributes><writesAttribute><name>slack.channel.id</name><description>The ID of the Slack Channel from which the messages were retrieved</description></writesAttribute><writesAttribute><name>slack.message.count</name><description>The number of slack messages that are included in the FlowFile</description></writesAttribute><writesAttribute><name>mime.type</name><description>Set to application/json, as the output will always be in JSON format</description></writesAttribute></writesAttributes><triggerSerially>true</triggerSerially><primaryNodeOnly>true</primaryNodeOnly><defaultSettings><yieldDuration>3 sec</yieldDuration><penaltyDuration>30 sec</penaltyDuration><bulletinLevel>WARN</bulletinLevel></defaultSettings><stateful><description>Maintains a mapping of Slack Channel IDs to the timestamp of the last message that was retrieved for that channel. This allows the processor to only retrieve messages that have been posted since the last time the processor was run. This state is stored in the cluster so that if the Primary Node changes, the new node will pick up where the previous node left off.</description><scopes><scope>CLUSTER</scope></scopes></stateful><inputRequirement>INPUT_FORBIDDEN</inputRequirement><seeAlso><see>org.apache.nifi.processors.slack.ListenSlack</see><see>org.apache.nifi.processors.slack.PostSlack</see><see>org.apache.nifi.processors.slack.PutSlack</see></seeAlso></extension><extension><name>org.apache.nifi.processors.slack.ListenSlack</name><type>PROCESSOR</type><description>Retrieves real-time messages or Slack commands from one or more Slack conversations. The messages are written out in JSON format. Note that this Processor should be used to obtain real-time messages and commands from Slack and does not provide a mechanism for obtaining historical messages. The ConsumeSlack Processor should be used for an initial load of messages from a channel. See Usage / Additional Details for more information about how to configure this Processor and enable it to retrieve messages and commands from Slack.</description><tags><tag>slack</tag><tag>real-time</tag><tag>event</tag><tag>message</tag><tag>command</tag><tag>listen</tag><tag>receive</tag><tag>social media</tag><tag>team</tag><tag>text</tag><tag>unstructured</tag></tags><properties><property><name>App Token</name><displayName>App Token</displayName><description>The Application Token that is registered to your Slack application</description><required>true</required><sensitive>true</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Bot Token</name><displayName>Bot Token</displayName><description>The Bot Token that is registered to your Slack application</description><required>true</required><sensitive>true</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Event Type to Receive</name><displayName>Event Type to Receive</displayName><description>Specifies whether the Processor should receive Slack Message Events or commands issued by users (e.g., /nifi do something)</description><defaultValue>Receive Message Events</defaultValue><allowableValues><allowableValue><displayName>Receive Message Events</displayName><value>Receive Message Events</value><description>The Processor is to receive Slack Message Events</description></allowableValue><allowableValue><displayName>Receive Commands</displayName><value>Receive Commands</value><description>The Processor is to receive Commands from Slack that are specific to your application. The Processor will not receive Message Events.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><relationships><relationship><name>success</name><description>All FlowFiles that are created will be sent to this Relationship.</description><autoTerminated>false</autoTerminated></relationship></relationships><writesAttributes><writesAttribute><name>mime.type</name><description>Set to application/json, as the output will always be in JSON format</description></writesAttribute></writesAttributes><primaryNodeOnly>true</primaryNodeOnly><defaultSettings><yieldDuration>250 millis</yieldDuration><penaltyDuration>30 sec</penaltyDuration><bulletinLevel>WARN</bulletinLevel></defaultSettings><inputRequirement>INPUT_FORBIDDEN</inputRequirement><seeAlso><see>org.apache.nifi.processors.slack.ConsumeSlack</see><see>org.apache.nifi.processors.slack.PostSlack</see><see>org.apache.nifi.processors.slack.PutSlack</see></seeAlso></extension><extension><name>org.apache.nifi.processors.slack.PostSlack</name><type>PROCESSOR</type><description>Sends a message on Slack. The FlowFile content (e.g. an image) can be uploaded and attached to the message.</description><tags><tag>slack</tag><tag>post</tag><tag>notify</tag><tag>upload</tag><tag>message</tag></tags><properties><property><name>post-message-url</name><displayName>Post Message URL</displayName><description>Slack Web API URL for posting text messages to channels. It only needs to be changed if Slack changes its API URL.</description><defaultValue>https://slack.com/api/chat.postMessage</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>file-upload-url</name><displayName>File Upload URL</displayName><description>Slack Web API URL for uploading files to channels. It only needs to be changed if Slack changes its API URL.</description><defaultValue>https://slack.com/api/files.upload</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>access-token</name><displayName>Access Token</displayName><description>OAuth Access Token used for authenticating/authorizing the Slack request sent by NiFi.</description><required>true</required><sensitive>true</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>channel</name><displayName>Channel</displayName><description>Slack channel, private group, or IM channel to send the message to.</description><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>text</name><displayName>Text</displayName><description>Text of the Slack message to send. Only required if no attachment has been specified and 'Upload File' has been set to 'No'.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>upload-flowfile</name><displayName>Upload FlowFile</displayName><description>Whether or not to upload and attach the FlowFile content to the Slack message.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>Yes</displayName><value>true</value><description>Upload and attach FlowFile content to the Slack message.</description></allowableValue><allowableValue><displayName>No</displayName><value>false</value><description>Don't upload and attach FlowFile content to the Slack message.</description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>file-title</name><displayName>File Title</displayName><description>Title of the file displayed in the Slack message. The property value will only be used if 'Upload FlowFile' has been set to 'Yes'.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>file-name</name><displayName>File Name</displayName><description>Name of the file to be uploaded. The property value will only be used if 'Upload FlowFile' has been set to 'Yes'. If the property evaluated to null or empty string, then the file name will be set to 'file' in the Slack message.</description><defaultValue>${filename}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>file-mime-type</name><displayName>File Mime Type</displayName><description>Mime type of the file to be uploaded. The property value will only be used if 'Upload FlowFile' has been set to 'Yes'. If the property evaluated to null or empty string, then the mime type will be set to 'application/octet-stream' in the Slack message.</description><defaultValue>${mime.type}</defaultValue><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties><dynamicProperty><name>&lt;Arbitrary name&gt;</name><value>JSON snippet specifying a Slack message "attachment"</value><description>The property value will be converted to JSON and will be added to the array of attachments in the JSON payload being sent to Slack. The property name will not be used by the processor.</description><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope></dynamicProperty></dynamicProperties><relationships><relationship><name>success</name><description>FlowFiles are routed to success after being successfully sent to Slack</description><autoTerminated>false</autoTerminated></relationship><relationship><name>failure</name><description>FlowFiles are routed to failure if unable to be sent to Slack</description><autoTerminated>false</autoTerminated></relationship></relationships><writesAttributes><writesAttribute><name>slack.file.url</name><description>The Slack URL of the uploaded file. It will be added if 'Upload FlowFile' has been set to 'Yes'.</description></writesAttribute></writesAttributes><inputRequirement>INPUT_REQUIRED</inputRequirement></extension><extension><name>org.apache.nifi.processors.slack.PutSlack</name><type>PROCESSOR</type><description>Publishes a message to Slack</description><tags><tag>put</tag><tag>slack</tag><tag>notify</tag></tags><properties><property><name>webhook-url</name><displayName>Webhook URL</displayName><description>The POST URL provided by Slack to send messages into a channel.</description><required>true</required><sensitive>true</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>webhook-text</name><displayName>Webhook Text</displayName><description>The text sent in the webhook message</description><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>channel</name><displayName>Channel</displayName><description>A public channel using #channel or direct message using @username. If not specified, the default webhook channel as specified in Slack's Incoming Webhooks web interface is used.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>username</name><displayName>Username</displayName><description>The displayed Slack username</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Thread Timestamp</name><displayName>Thread Timestamp</displayName><description>The timestamp of the parent message, also known as a thread_ts, or Thread Timestamp. If not specified, the message will be send to the channel as an independent message. If this value is populated, the message will be sent as a reply to the message whose timestamp is equal to the given value.</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>icon-url</name><displayName>Icon URL</displayName><description>Icon URL to be used for the message</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>icon-emoji</name><displayName>Icon Emoji</displayName><description>Icon Emoji to be used for the message. Must begin and end with a colon, e.g. :ghost:</description><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties><dynamicProperty><name>A JSON object to add to Slack's "attachments" JSON payload.</name><value>JSON-formatted string to add to Slack's payload JSON appended to the "attachments" JSON array.</value><description>Converts the contents of each value specified by the Dynamic Property's value to JSON and appends it to the payload being sent to Slack.</description><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope></dynamicProperty></dynamicProperties><relationships><relationship><name>success</name><description>FlowFiles are routed to success after being successfully sent to Slack</description><autoTerminated>false</autoTerminated></relationship><relationship><name>failure</name><description>FlowFiles are routed to failure if unable to be sent to Slack</description><autoTerminated>false</autoTerminated></relationship></relationships><writesAttributes></writesAttributes><inputRequirement>INPUT_REQUIRED</inputRequirement></extension><extension><name>org.apache.nifi.services.slack.SlackRecordSink</name><type>CONTROLLER_SERVICE</type><description>Format and send Records to a configured Channel using the Slack Post Message API. The service requires a Slack App with a Bot User configured for access to a Slack workspace. The Bot User OAuth Bearer Token is required for posting messages to Slack.</description><tags><tag>slack</tag><tag>record</tag><tag>sink</tag></tags><properties><property><name>api-url</name><displayName>API URL</displayName><description>Slack Web API URL for posting text messages to channels. It only needs to be changed if Slack changes its API URL.</description><defaultValue>https://slack.com/api</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>access-token</name><displayName>Access Token</displayName><description>Bot OAuth Token used for authenticating and authorizing the Slack request sent by NiFi.</description><required>true</required><sensitive>true</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>channel-id</name><displayName>Channel ID</displayName><description>Slack channel, private group, or IM channel to send the message to. Use Channel ID instead of the name.</description><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>input-character-set</name><displayName>Input Character Set</displayName><description>Specifies the character set of the records used to generate the Slack message.</description><defaultValue>UTF-8</defaultValue><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>record-sink-record-writer</name><displayName>Record Writer</displayName><description>Specifies the Controller Service to use for writing out the records.</description><controllerServiceDefinition><className>org.apache.nifi.serialization.RecordSetWriterFactory</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.0.0-SNAPSHOT</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>web-service-client-provider</name><displayName>Web Service Client Provider</displayName><description>Controller service to provide HTTP client for communicating with Slack API</description><controllerServiceDefinition><className>org.apache.nifi.web.client.provider.api.WebClientServiceProvider</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.0.0-SNAPSHOT</version></controllerServiceDefinition><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><providedServiceAPIs><providedServiceAPI><className>org.apache.nifi.record.sink.RecordSinkService</className><groupId>org.apache.nifi</groupId><artifactId>nifi-standard-services-api-nar</artifactId><version>2.0.0-SNAPSHOT</version></providedServiceAPI></providedServiceAPIs></extension></extensions></extensionManifest>