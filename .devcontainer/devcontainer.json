// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/alpine

{
  "name": "Project Environment",
  "dockerComposeFile": "docker-compose.yml", // Pointing to your Docker Compose file in the root of the project
  "service": "frontend", // Assuming "backend" is the name of the service in your docker-compose.yml that you want to develop in
  "workspaceFolder": "/workspace/NFLSTATS", // This will map to the working directory in the container

  // Run a script after the container is created to activate the virtual environment
  "postCreateCommand": "source /home/zepor/ssweb/.venv/bin/activate",

  // Extensions to install inside the Codespace for a better development experience
  "extensions": ["ms-python.python", "ms-azuretools.vscode-docker"],

  "settings": {
    "terminal.integrated.shell.linux": "/bin/bash",
    "python.pythonPath": "/workspace/NFLSTATS/.venv/bin/python",
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": true,
    "python.format.sortImports": true,
    "python.testing.pytestArgs": ["backend"],
    "python.testing.unittestEnabled": false,
    "python.testing.nosetestsEnabled": false,
    "python.testing.pytestEnabled": true
  },

  "postCreateCommand": "source /workspace/NFLSTATS/.venv/bin/activate",

  //"forwardPorts": [Your ports here],

  // Set *optional* environment variables that the services or features will use
  "features": {
    "ghcr.io/devcontainers/features/azure-cli:1": {},
    "ghcr.io/devcontainers-contrib/features/mongodb-atlas-cli-homebrew:1": {},
    "ghcr.io/devcontainers-contrib/features/mongosh-homebrew:1": {},
    "ghcr.io/devcontainers-contrib/features/powershell:1": {},
    "ghcr.io/frntn/devcontainers-features/postman:1": {},
    "ghcr.io/devcontainers-community/npm-features/prettier:1": {},
    "ghcr.io/azure/azure-dev/azd:0": {},
    "ghcr.io/itsmechlark/features/redis-server:1": {}
  }
}

// Features to add to the dev container. More info: https://containers.dev/features.
// "features": {},

// Use 'forwardPorts' to make a list of ports inside the container available locally.
// "forwardPorts": [],

// Use 'postCreateCommand' to run commands after the container is created.
// "postCreateCommand": "uname -a",

// Configure tool-specific properties.
// "customizations": {},

// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
// "remoteUser": "root"
