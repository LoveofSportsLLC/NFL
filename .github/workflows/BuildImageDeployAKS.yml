
name: Build and deploy apps to AKS with Helm

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: loveofsports.azurecr.io
  FRONTEND_IMAGE: ${{ env.AZURE_CONTAINER_REGISTRY }}/ssweb-frontend:latest
  BACKEND_IMAGE: ${{ env.AZURE_CONTAINER_REGISTRY }}/python:3.9.18
  REDIS_IMAGE: redis:latest
  RESOURCE_GROUP: LoveofSports-Dev
  CLUSTER_NAME: DevCluster
  KUSTOMIZE_PATH: clusters/DevCluster

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Build and push frontend image to ACR
        run: |
          az acr build --image ${{ env.FRONTEND_IMAGE }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} -f ./path-to-frontend/Dockerfile ./path-to-frontend

      - name: Build and push backend image to ACR
        run: |
          az acr build --image ${{ env.BACKEND_IMAGE }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RESOURCE_GROUP }} -f ./path-to-backend/Dockerfile ./path-to-backend

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      - uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      - name: Bake deployment
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "kustomize"
          kustomizationPath: ${{ env.KUSTOMIZE_PATH }}
          kubectl-version: latest
        id: bake

      - name: Deploy application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: |
            ${{ env.FRONTEND_IMAGE }}
            ${{ env.BACKEND_IMAGE }}
            ${{ env.REDIS_IMAGE }}
