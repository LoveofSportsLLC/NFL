{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "actionGroups_ActionGroup_LoveofSports_Dev_name": {
      "type": "String"
    },
    "actionGroups_RecommendedAlertRules_AG_1_name": {
      "type": "String"
    },
    "actionRules_AlertProcessingRule_LoveofSports_Dev_name": {
      "type": "String"
    },
    "activityLogAlerts_KeyforAppGateway_name": {
      "type": "String"
    },
    "applicationGateways_ingress_appgateway_externalid": {
      "type": "String"
    },
    "certificates_loveoffootball_io_Django_Python_Backend_name": {
      "type": "String"
    },
    "dnszones_loveoffootball_io_name": {
      "type": "String"
    },
    "managedClusters_DevCluster_name": {
      "type": "String"
    },
    "metricAlerts_CPU_Usage_Percentage___DevCluster_name": {
      "type": "String"
    },
    "metricAlerts_Memory_Working_Set_Percentage___DevCluster_name": {
      "type": "String"
    },
    "publicIPAddresses_ee9e0129_8b6c_4b4a_9e90_a969dd457701_externalid": {
      "type": "String"
    },
    "publicIPAddresses_ingress_appgateway_appgwpip_externalid": {
      "type": "String"
    },
    "registries_LoveofSports_name": {
      "type": "String"
    },
    "routeTables_aks_agentpool_41047798_routetable_externalid": {
      "type": "String"
    },
    "serverfarms_Dev_Service_Plan_name": {
      "type": "String"
    },
    "userAssignedIdentities_DevCluster_agentpool_externalid": {
      "type": "String"
    },
    "userAssignedIdentities_zepor2_name": {
      "type": "String"
    },
    "userAssignedIdentities_zepor_name": {
      "type": "String"
    },
    "vaults_NachoKey_name": {
      "type": "String"
    },
    "vaults_secret_store_mBjOmIXsXJ_name": {
      "type": "String"
    },
    "vaults_vault_lo6nl0z7_name": {
      "type": "String"
    },
    "virtualNetworks_LoveofSports_Dev_vnet_name": {
      "type": "String"
    },
    "virtualNetworks_LoveofVPN_name": {
      "type": "String"
    },
    "workspaces_DevLogs_externalid": {
      "type": "String"
    }
  },
  "resources": [
    {
      "apiVersion": "2023-08-01-preview",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "/subscriptions/c072eae7-1f8e-4142-a540-676e1a357dd1/resourcegroups/LoveofSports-Dev/providers/Microsoft.ManagedIdentity/userAssignedIdentities/zepor": {}
        }
      },
      "location": "centralus",
      "name": "[parameters('registries_LoveofSports_name')]",
      "properties": {
        "adminUserEnabled": true,
        "anonymousPullEnabled": false,
        "dataEndpointEnabled": false,
        "encryption": {
          "status": "disabled"
        },
        "networkRuleBypassOptions": "AzureServices",
        "policies": {
          "azureADAuthenticationAsArmPolicy": {
            "status": "enabled"
          },
          "exportPolicy": {
            "status": "enabled"
          },
          "quarantinePolicy": {
            "status": "disabled"
          },
          "retentionPolicy": {
            "days": 7,
            "status": "disabled"
          },
          "softDeletePolicy": {
            "retentionDays": 7,
            "status": "disabled"
          },
          "trustPolicy": {
            "status": "disabled",
            "type": "Notary"
          }
        },
        "publicNetworkAccess": "Enabled",
        "zoneRedundancy": "Disabled"
      },
      "sku": {
        "name": "Basic",
        "tier": "Basic"
      },
      "tags": {
        "ENV": "Development"
      },
      "type": "Microsoft.ContainerRegistry/registries"
    },
    {
      "apiVersion": "2023-01-01",
      "location": "Global",
      "name": "[parameters('actionGroups_ActionGroup_LoveofSports_Dev_name')]",
      "properties": {
        "armRoleReceivers": [],
        "automationRunbookReceivers": [],
        "azureAppPushReceivers": [],
        "azureFunctionReceivers": [],
        "emailReceivers": [
          {
            "emailAddress": "user1@contoso.com",
            "name": "emailReceivers-iyr2vz5ndipqe",
            "useCommonAlertSchema": true
          },
          {
            "emailAddress": "user2@contoso.com",
            "name": "emailReceivers-ggkegulrcdv4i",
            "useCommonAlertSchema": true
          }
        ],
        "enabled": true,
        "eventHubReceivers": [],
        "groupShortName": "ag-LoveofSpo",
        "itsmReceivers": [],
        "logicAppReceivers": [],
        "smsReceivers": [],
        "voiceReceivers": [],
        "webhookReceivers": []
      },
      "type": "microsoft.insights/actionGroups"
    },
    {
      "apiVersion": "2023-01-01",
      "location": "Global",
      "name": "[parameters('actionGroups_RecommendedAlertRules_AG_1_name')]",
      "properties": {
        "armRoleReceivers": [],
        "automationRunbookReceivers": [],
        "azureAppPushReceivers": [],
        "azureFunctionReceivers": [],
        "emailReceivers": [
          {
            "emailAddress": "johnbonnett3@gmail.com",
            "name": "Email_-EmailAction-",
            "useCommonAlertSchema": true
          }
        ],
        "enabled": true,
        "eventHubReceivers": [],
        "groupShortName": "recalert1",
        "itsmReceivers": [],
        "logicAppReceivers": [],
        "smsReceivers": [],
        "voiceReceivers": [],
        "webhookReceivers": []
      },
      "type": "microsoft.insights/actionGroups"
    },
    {
      "apiVersion": "2023-07-01",
      "location": "centralus",
      "name": "[parameters('vaults_NachoKey_name')]",
      "properties": {
        "accessPolicies": [],
        "enableRbacAuthorization": true,
        "enableSoftDelete": true,
        "enabledForDeployment": true,
        "enabledForDiskEncryption": true,
        "enabledForTemplateDeployment": true,
        "provisioningState": "Succeeded",
        "publicNetworkAccess": "Enabled",
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "softDeleteRetentionInDays": 90,
        "tenantId": "20613b5a-77e7-496c-ab28-ac76ee0d6e12",
        "vaultUri": "https://nachokey.vault.azure.net/"
      },
      "type": "Microsoft.KeyVault/vaults"
    },
    {
      "apiVersion": "2023-07-01",
      "location": "centralus",
      "name": "[parameters('vaults_secret_store_mBjOmIXsXJ_name')]",
      "properties": {
        "accessPolicies": [
          {
            "objectId": "e1a555a5-b731-4dfe-8f57-33aee5b0307e",
            "permissions": {
              "certificates": [
                "all"
              ],
              "keys": [
                "all"
              ],
              "secrets": [
                "all"
              ],
              "storage": [
                "all"
              ]
            },
            "tenantId": "20613b5a-77e7-496c-ab28-ac76ee0d6e12"
          },
          {
            "objectId": "ec43d04d-7352-40f6-b8c5-7cf8c07e8a3d",
            "permissions": {
              "secrets": [
                "get"
              ]
            },
            "tenantId": "20613b5a-77e7-496c-ab28-ac76ee0d6e12"
          }
        ],
        "enableSoftDelete": true,
        "enabledForDeployment": false,
        "provisioningState": "Succeeded",
        "publicNetworkAccess": "Enabled",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "softDeleteRetentionInDays": 90,
        "tenantId": "20613b5a-77e7-496c-ab28-ac76ee0d6e12",
        "vaultUri": "https://secret-store-mbjomixsxj.vault.azure.net/"
      },
      "type": "Microsoft.KeyVault/vaults"
    },
    {
      "apiVersion": "2023-01-31",
      "location": "centralus",
      "name": "[parameters('userAssignedIdentities_zepor_name')]",
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
    },
    {
      "apiVersion": "2023-01-31",
      "location": "centralus",
      "name": "[parameters('userAssignedIdentities_zepor2_name')]",
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities"
    },
    {
      "apiVersion": "2018-05-01",
      "location": "global",
      "name": "[parameters('dnszones_loveoffootball_io_name')]",
      "properties": {
        "zoneType": "Public"
      },
      "type": "Microsoft.Network/dnszones"
    },
    {
      "apiVersion": "2023-05-01",
      "location": "centralus",
      "name": "[parameters('virtualNetworks_LoveofSports_Dev_vnet_name')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.224.0.0/12"
          ]
        },
        "enableDdosProtection": false,
        "subnets": [
          {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'default')]",
            "name": "default",
            "properties": {
              "addressPrefix": "10.224.0.0/16",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "routeTable": {
                "id": "[parameters('routeTables_aks_agentpool_41047798_routetable_externalid')]"
              },
              "serviceEndpoints": [
                {
                  "locations": [
                    "*"
                  ],
                  "service": "Microsoft.ContainerRegistry"
                }
              ]
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          },
          {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'ingress-appgateway-subnet')]",
            "name": "ingress-appgateway-subnet",
            "properties": {
              "addressPrefix": "10.225.0.0/16",
              "applicationGatewayIPConfigurations": [
                {
                  "id": "[concat(parameters('applicationGateways_ingress_appgateway_externalid'), '/gatewayIPConfigurations/appGatewayIpConfig')]"
                }
              ],
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "routeTable": {
                "id": "[parameters('routeTables_aks_agentpool_41047798_routetable_externalid')]"
              }
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ],
        "virtualNetworkPeerings": []
      },
      "tags": {
        "ENV": "Development"
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "2023-05-01",
      "location": "centralus",
      "name": "[parameters('virtualNetworks_LoveofVPN_name')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "enableDdosProtection": false,
        "subnets": [
          {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofVPN_name'), 'default')]",
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.4.0/24",
              "delegations": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofVPN_name'), 'default'), '/delegations/delegation')]",
                  "name": "delegation",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverfarms"
                  },
                  "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                }
              ],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "serviceEndpoints": [
                {
                  "locations": [
                    "centralus",
                    "eastus2"
                  ],
                  "service": "Microsoft.Storage"
                }
              ]
            },
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ],
        "virtualNetworkPeerings": []
      },
      "tags": {
        "ENV": "Development"
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "2023-06-01",
      "location": "centralus",
      "name": "[parameters('vaults_vault_lo6nl0z7_name')]",
      "properties": {
        "publicNetworkAccess": "Enabled",
        "redundancySettings": {},
        "restoreSettings": {
          "crossSubscriptionRestoreSettings": {
            "crossSubscriptionRestoreState": "Enabled"
          }
        },
        "securitySettings": {
          "multiUserAuthorization": "Disabled",
          "softDeleteSettings": {
            "softDeleteRetentionPeriodInDays": 14,
            "softDeleteState": "Enabled"
          }
        }
      },
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "type": "Microsoft.RecoveryServices/vaults"
    },
    {
      "apiVersion": "2022-09-01",
      "location": "Central US",
      "name": "[parameters('certificates_loveoffootball_io_Django_Python_Backend_name')]",
      "properties": {
        "canonicalName": "loveoffootball.io",
        "hostNames": [
          "loveoffootball.io"
        ]
      },
      "type": "Microsoft.Web/certificates"
    },
    {
      "apiVersion": "2022-09-01",
      "kind": "linux",
      "location": "East US",
      "name": "[parameters('serverfarms_Dev_Service_Plan_name')]",
      "properties": {
        "elasticScaleEnabled": false,
        "hyperV": false,
        "isSpot": false,
        "isXenon": false,
        "maximumElasticWorkerCount": 1,
        "perSiteScaling": false,
        "reserved": true,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      },
      "sku": {
        "capacity": 1,
        "family": "F",
        "name": "F1",
        "size": "F1",
        "tier": "Free"
      },
      "tags": {
        "ENV": "Development"
      },
      "type": "Microsoft.Web/serverfarms"
    },
    {
      "apiVersion": "2021-08-08",
      "dependsOn": [
        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_ActionGroup_LoveofSports_Dev_name'))]"
      ],
      "location": "Global",
      "name": "[parameters('actionRules_AlertProcessingRule_LoveofSports_Dev_name')]",
      "properties": {
        "actions": [
          {
            "actionGroupIds": [
              "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_ActionGroup_LoveofSports_Dev_name'))]"
            ],
            "actionType": "AddActionGroups"
          }
        ],
        "conditions": [
          {
            "field": "TargetResourceType",
            "operator": "Equals",
            "values": [
              "microsoft.recoveryservices/vaults"
            ]
          }
        ],
        "description": "Sample alert processing rule",
        "enabled": true,
        "scopes": [
          "/subscriptions/c072eae7-1f8e-4142-a540-676e1a357dd1"
        ]
      },
      "type": "Microsoft.AlertsManagement/actionRules"
    },
    {
      "apiVersion": "2023-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_LoveofSports_name'))]"
      ],
      "name": "[concat(parameters('registries_LoveofSports_name'), '/_repositories_admin')]",
      "properties": {
        "actions": [
          "repositories/*/metadata/read",
          "repositories/*/metadata/write",
          "repositories/*/content/read",
          "repositories/*/content/write",
          "repositories/*/content/delete"
        ],
        "description": "Can perform all read, write and delete operations on the registry"
      },
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps"
    },
    {
      "apiVersion": "2023-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_LoveofSports_name'))]"
      ],
      "name": "[concat(parameters('registries_LoveofSports_name'), '/_repositories_pull')]",
      "properties": {
        "actions": [
          "repositories/*/content/read"
        ],
        "description": "Can pull any repository of the registry"
      },
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps"
    },
    {
      "apiVersion": "2023-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_LoveofSports_name'))]"
      ],
      "name": "[concat(parameters('registries_LoveofSports_name'), '/_repositories_pull_metadata_read')]",
      "properties": {
        "actions": [
          "repositories/*/content/read",
          "repositories/*/metadata/read"
        ],
        "description": "Can perform all read operations on the registry"
      },
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps"
    },
    {
      "apiVersion": "2023-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_LoveofSports_name'))]"
      ],
      "name": "[concat(parameters('registries_LoveofSports_name'), '/_repositories_push')]",
      "properties": {
        "actions": [
          "repositories/*/content/read",
          "repositories/*/content/write"
        ],
        "description": "Can push to any repository of the registry"
      },
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps"
    },
    {
      "apiVersion": "2023-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_LoveofSports_name'))]"
      ],
      "name": "[concat(parameters('registries_LoveofSports_name'), '/_repositories_push_metadata_write')]",
      "properties": {
        "actions": [
          "repositories/*/metadata/read",
          "repositories/*/metadata/write",
          "repositories/*/content/read",
          "repositories/*/content/write"
        ],
        "description": "Can perform all read and write operations on the registry"
      },
      "type": "Microsoft.ContainerRegistry/registries/scopeMaps"
    },
    {
      "apiVersion": "2023-08-02-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'default')]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "location": "centralus",
      "name": "[parameters('managedClusters_DevCluster_name')]",
      "properties": {
        "aadProfile": {
          "enableAzureRBAC": true,
          "managed": true,
          "tenantID": "20613b5a-77e7-496c-ab28-ac76ee0d6e12"
        },
        "addonProfiles": {
          "azureKeyvaultSecretsProvider": {
            "config": {
              "enableSecretRotation": "false",
              "rotationPollInterval": "2m"
            },
            "enabled": true
          },
          "azurepolicy": {
            "enabled": true
          },
          "extensionManager": {
            "enabled": true
          },
          "httpApplicationRouting": {
            "enabled": false
          },
          "ingressApplicationGateway": {
            "config": {
              "applicationGatewayName": "ingress-appgateway",
              "effectiveApplicationGatewayId": "[parameters('applicationGateways_ingress_appgateway_externalid')]",
              "subnetPrefix": "10.225.0.0/16"
            },
            "enabled": true
          },
          "omsAgent": {
            "config": {
              "logAnalyticsWorkspaceResourceID": "[parameters('workspaces_DevLogs_externalid')]"
            },
            "enabled": true
          },
          "openServiceMesh": {
            "enabled": true
          }
        },
        "agentPoolProfiles": [
          {
            "count": 4,
            "enableAutoScaling": true,
            "enableFIPS": false,
            "enableNodePublicIP": false,
            "kubeletDiskType": "OS",
            "maxCount": 40,
            "maxPods": 110,
            "minCount": 2,
            "mode": "System",
            "name": "agentpool",
            "orchestratorVersion": "1.27.3",
            "osDiskSizeGB": 128,
            "osDiskType": "Managed",
            "osSKU": "Ubuntu",
            "osType": "Linux",
            "powerState": {
              "code": "Running"
            },
            "securityProfile": {
              "sshAccess": "LocalUser"
            },
            "tags": {
              "ENV": "Development"
            },
            "type": "VirtualMachineScaleSets",
            "upgradeSettings": {},
            "vmSize": "Standard_DS2_v2",
            "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'default')]"
          },
          {
            "availabilityZones": [
              "2"
            ],
            "count": 2,
            "enableAutoScaling": true,
            "enableFIPS": false,
            "enableNodePublicIP": false,
            "kubeletDiskType": "OS",
            "maxCount": 40,
            "maxPods": 110,
            "minCount": 2,
            "mode": "System",
            "name": "nudepool2",
            "orchestratorVersion": "1.27.3",
            "osDiskSizeGB": 128,
            "osDiskType": "Managed",
            "osSKU": "Ubuntu",
            "osType": "Linux",
            "powerState": {
              "code": "Running"
            },
            "scaleDownMode": "Delete",
            "securityProfile": {
              "sshAccess": "LocalUser"
            },
            "tags": {
              "ENV": "Development"
            },
            "type": "VirtualMachineScaleSets",
            "upgradeSettings": {},
            "vmSize": "Standard_D2as_v4",
            "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'default')]"
          },
          {
            "count": 4,
            "enableAutoScaling": true,
            "enableCustomCATrust": false,
            "enableEncryptionAtHost": false,
            "enableFIPS": false,
            "enableNodePublicIP": false,
            "enableUltraSSD": false,
            "kubeletDiskType": "OS",
            "maxCount": 40,
            "maxPods": 110,
            "minCount": 2,
            "mode": "User",
            "name": "ephemeral",
            "networkProfile": {},
            "orchestratorVersion": "1.27.3",
            "osDiskSizeGB": 128,
            "osDiskType": "Ephemeral",
            "osSKU": "Ubuntu",
            "osType": "Linux",
            "powerState": {
              "code": "Running"
            },
            "scaleDownMode": "Delete",
            "securityProfile": {
              "sshAccess": "LocalUser"
            },
            "type": "VirtualMachineScaleSets",
            "upgradeSettings": {},
            "vmSize": "Standard_DS3_v2",
            "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'default')]",
            "workloadRuntime": "OCIContainer"
          }
        ],
        "autoScalerProfile": {
          "balance-similar-node-groups": "false",
          "daemonset-eviction-for-empty-nodes": false,
          "daemonset-eviction-for-occupied-nodes": true,
          "expander": "random",
          "expanders": [
            "random"
          ],
          "ignore-daemonsets-utilization": false,
          "max-empty-bulk-delete": "10",
          "max-graceful-termination-sec": "600",
          "max-node-provision-time": "15m",
          "max-total-unready-percentage": "45",
          "new-pod-scale-up-delay": "0s",
          "ok-total-unready-count": "3",
          "scale-down-delay-after-add": "10m",
          "scale-down-delay-after-delete": "10s",
          "scale-down-delay-after-failure": "3m",
          "scale-down-unneeded-time": "10m",
          "scale-down-unready-time": "20m",
          "scale-down-utilization-threshold": "0.5",
          "scan-interval": "10s",
          "skip-nodes-with-local-storage": "false",
          "skip-nodes-with-system-pods": "true"
        },
        "autoUpgradeProfile": {
          "nodeOSUpgradeChannel": "NodeImage",
          "upgradeChannel": "stable"
        },
        "disableLocalAccounts": true,
        "dnsPrefix": "pre",
        "enableRBAC": true,
        "identityProfile": {
          "kubeletidentity": {
            "clientId": "606c5fb7-c87f-446c-8f73-7fa6cb8bb5f1",
            "objectId": "3d684649-42fa-4174-8df4-6d9b51953bf0",
            "resourceId": "[parameters('userAssignedIdentities_DevCluster_agentpool_externalid')]"
          }
        },
        "ingressProfile": {
          "webAppRouting": {
            "enabled": true
          }
        },
        "kubernetesVersion": "1.27.3",
        "metricsProfile": {
          "costAnalysis": {
            "enabled": false
          }
        },
        "networkProfile": {
          "dnsServiceIP": "10.0.0.10",
          "ipFamilies": [
            "IPv4"
          ],
          "loadBalancerProfile": {
            "backendPoolType": "nodeIPConfiguration",
            "effectiveOutboundIPs": [
              {
                "id": "[parameters('publicIPAddresses_ee9e0129_8b6c_4b4a_9e90_a969dd457701_externalid')]"
              }
            ],
            "managedOutboundIPs": {
              "count": 1
            }
          },
          "loadBalancerSku": "Standard",
          "networkPlugin": "kubenet",
          "networkPolicy": "none",
          "outboundType": "loadBalancer",
          "podCidr": "10.244.0.0/16",
          "podCidrs": [
            "10.244.0.0/16"
          ],
          "serviceCidr": "10.0.0.0/16",
          "serviceCidrs": [
            "10.0.0.0/16"
          ]
        },
        "nodeResourceGroup": "[concat('MC_LoveofSports-Dev_', parameters('managedClusters_DevCluster_name'), '_centralus')]",
        "oidcIssuerProfile": {
          "enabled": true
        },
        "securityProfile": {},
        "servicePrincipalProfile": {
          "clientId": "msi"
        },
        "storageProfile": {
          "diskCSIDriver": {
            "enabled": true,
            "version": "v1"
          },
          "fileCSIDriver": {
            "enabled": true
          },
          "snapshotController": {
            "enabled": true
          }
        },
        "supportPlan": "KubernetesOfficial",
        "workloadAutoScalerProfile": {}
      },
      "sku": {
        "name": "Base",
        "tier": "Standard"
      },
      "tags": {
        "ENV": "Development"
      },
      "type": "Microsoft.ContainerService/managedClusters"
    },
    {
      "apiVersion": "2020-10-01",
      "dependsOn": [
        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_ActionGroup_LoveofSports_Dev_name'))]"
      ],
      "location": "global",
      "name": "[parameters('activityLogAlerts_KeyforAppGateway_name')]",
      "properties": {
        "actions": {
          "actionGroups": [
            {
              "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_ActionGroup_LoveofSports_Dev_name'))]",
              "webhookProperties": {}
            }
          ]
        },
        "condition": {
          "allOf": [
            {
              "equals": "Recommendation",
              "field": "category"
            },
            {
              "equals": "Microsoft.Advisor/recommendations/available/action",
              "field": "operationName"
            },
            {
              "equals": "3467464b-955a-4caf-95e5-547344ba0281",
              "field": "properties.recommendationType"
            }
          ]
        },
        "enabled": true,
        "scopes": [
          "/subscriptions/c072eae7-1f8e-4142-a540-676e1a357dd1/resourceGroups/LoveofSports-Dev"
        ]
      },
      "type": "Microsoft.Insights/activityLogAlerts"
    },
    {
      "apiVersion": "2023-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_secret_store_mBjOmIXsXJ_name'))]"
      ],
      "location": "centralus",
      "name": "[concat(parameters('vaults_secret_store_mBjOmIXsXJ_name'), '/aks-ingress-cert')]",
      "properties": {
        "attributes": {
          "enabled": true,
          "exp": 1731448412,
          "nbf": 1699912412
        }
      },
      "type": "Microsoft.KeyVault/vaults/keys"
    },
    {
      "apiVersion": "2023-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_secret_store_mBjOmIXsXJ_name'))]"
      ],
      "location": "centralus",
      "name": "[concat(parameters('vaults_secret_store_mBjOmIXsXJ_name'), '/football')]",
      "properties": {
        "attributes": {
          "enabled": true,
          "exp": 1732348070,
          "nbf": 1700725070
        }
      },
      "type": "Microsoft.KeyVault/vaults/keys"
    },
    {
      "apiVersion": "2023-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_secret_store_mBjOmIXsXJ_name'))]"
      ],
      "location": "centralus",
      "name": "[concat(parameters('vaults_secret_store_mBjOmIXsXJ_name'), '/aks-ingress-cert')]",
      "properties": {
        "attributes": {
          "enabled": true,
          "exp": 1731448412,
          "nbf": 1699912412
        },
        "contentType": "application/x-pkcs12"
      },
      "type": "Microsoft.KeyVault/vaults/secrets"
    },
    {
      "apiVersion": "2023-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_secret_store_mBjOmIXsXJ_name'))]"
      ],
      "location": "centralus",
      "name": "[concat(parameters('vaults_secret_store_mBjOmIXsXJ_name'), '/football')]",
      "properties": {
        "attributes": {
          "enabled": true,
          "exp": 1732348070,
          "nbf": 1700725070
        },
        "contentType": "application/x-pkcs12"
      },
      "type": "Microsoft.KeyVault/vaults/secrets"
    },
    {
      "apiVersion": "2023-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_secret_store_mBjOmIXsXJ_name'))]"
      ],
      "location": "centralus",
      "name": "[concat(parameters('vaults_secret_store_mBjOmIXsXJ_name'), '/secret1')]",
      "properties": {
        "attributes": {
          "enabled": true
        }
      },
      "tags": {
        "file-encoding": "utf-8"
      },
      "type": "Microsoft.KeyVault/vaults/secrets"
    },
    {
      "apiVersion": "2023-01-31",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentities_zepor_name'))]"
      ],
      "name": "[concat(parameters('userAssignedIdentities_zepor_name'), '/aksfederatedidentity')]",
      "properties": {
        "audiences": [
          "api://AzureADTokenExchange"
        ],
        "issuer": "https://centralus.oic.prod-aks.azure.com/20613b5a-77e7-496c-ab28-ac76ee0d6e12/e27ce7c7-1889-4582-8bd1-aff6f95f4b4d/",
        "subject": "system:serviceaccount:default:workload-identity-sa"
      },
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials"
    },
    {
      "apiVersion": "2023-01-31",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentities_zepor_name'))]"
      ],
      "name": "[concat(parameters('userAssignedIdentities_zepor_name'), '/DeploytoAKS')]",
      "properties": {
        "audiences": [
          "api://AzureADTokenExchange"
        ],
        "issuer": "https://token.actions.githubusercontent.com",
        "subject": "repo:zepor/https://github.com/zepor/NFLSTATS.git:ref:refs/heads/main"
      },
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials"
    },
    {
      "apiVersion": "2018-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_loveoffootball_io_name'))]"
      ],
      "name": "[concat(parameters('dnszones_loveoffootball_io_name'), '/www')]",
      "properties": {
        "TTL": 3600,
        "targetResource": {
          "id": "[parameters('publicIPAddresses_ingress_appgateway_appgwpip_externalid')]"
        }
      },
      "type": "Microsoft.Network/dnszones/A"
    },
    {
      "apiVersion": "2018-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_loveoffootball_io_name'))]"
      ],
      "name": "[concat(parameters('dnszones_loveoffootball_io_name'), '/@')]",
      "properties": {
        "NSRecords": [
          {
            "nsdname": "ns1-36.azure-dns.com."
          },
          {
            "nsdname": "ns2-36.azure-dns.net."
          },
          {
            "nsdname": "ns3-36.azure-dns.org."
          },
          {
            "nsdname": "ns4-36.azure-dns.info."
          }
        ],
        "TTL": 172800,
        "targetResource": {}
      },
      "type": "Microsoft.Network/dnszones/NS"
    },
    {
      "apiVersion": "2018-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnszones', parameters('dnszones_loveoffootball_io_name'))]"
      ],
      "name": "[concat(parameters('dnszones_loveoffootball_io_name'), '/@')]",
      "properties": {
        "SOARecord": {
          "email": "azuredns-hostmaster.microsoft.com",
          "expireTime": 2419200,
          "host": "ns1-36.azure-dns.com.",
          "minimumTTL": 300,
          "refreshTime": 3600,
          "retryTime": 300,
          "serialNumber": 1
        },
        "TTL": 3600,
        "targetResource": {}
      },
      "type": "Microsoft.Network/dnszones/SOA"
    },
    {
      "apiVersion": "2023-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'))]"
      ],
      "name": "[concat(parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), '/default')]",
      "properties": {
        "addressPrefix": "10.224.0.0/16",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled",
        "routeTable": {
          "id": "[parameters('routeTables_aks_agentpool_41047798_routetable_externalid')]"
        },
        "serviceEndpoints": [
          {
            "locations": [
              "*"
            ],
            "service": "Microsoft.ContainerRegistry"
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks/subnets"
    },
    {
      "apiVersion": "2023-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_LoveofVPN_name'))]"
      ],
      "name": "[concat(parameters('virtualNetworks_LoveofVPN_name'), '/default')]",
      "properties": {
        "addressPrefix": "10.0.4.0/24",
        "delegations": [
          {
            "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofVPN_name'), 'default'), '/delegations/delegation')]",
            "name": "delegation",
            "properties": {
              "serviceName": "Microsoft.Web/serverfarms"
            },
            "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
          }
        ],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled",
        "serviceEndpoints": [
          {
            "locations": [
              "centralus",
              "eastus2"
            ],
            "service": "Microsoft.Storage"
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks/subnets"
    },
    {
      "apiVersion": "2023-05-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'))]"
      ],
      "name": "[concat(parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), '/ingress-appgateway-subnet')]",
      "properties": {
        "addressPrefix": "10.225.0.0/16",
        "applicationGatewayIPConfigurations": [
          {
            "id": "[concat(parameters('applicationGateways_ingress_appgateway_externalid'), '/gatewayIPConfigurations/appGatewayIpConfig')]"
          }
        ],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled",
        "routeTable": {
          "id": "[parameters('routeTables_aks_agentpool_41047798_routetable_externalid')]"
        }
      },
      "type": "Microsoft.Network/virtualNetworks/subnets"
    },
    {
      "apiVersion": "2023-04-01",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lo6nl0z7_name'))]"
      ],
      "name": "[concat(parameters('vaults_vault_lo6nl0z7_name'), '/DailyPolicy-lo6nl121')]",
      "properties": {
        "backupManagementType": "AzureStorage",
        "protectedItemsCount": 0,
        "retentionPolicy": {
          "dailySchedule": {
            "retentionDuration": {
              "count": 30,
              "durationType": "Days"
            },
            "retentionTimes": [
              "2023-10-25T19:30:00Z"
            ]
          },
          "retentionPolicyType": "LongTermRetentionPolicy"
        },
        "schedulePolicy": {
          "schedulePolicyType": "SimpleSchedulePolicy",
          "scheduleRunFrequency": "Daily",
          "scheduleRunTimes": [
            "2023-10-25T19:30:00Z"
          ],
          "scheduleWeeklyFrequency": 0
        },
        "timeZone": "UTC",
        "workLoadType": "AzureFileShare"
      },
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies"
    },
    {
      "apiVersion": "2023-04-01",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lo6nl0z7_name'))]"
      ],
      "name": "[concat(parameters('vaults_vault_lo6nl0z7_name'), '/DefaultPolicy')]",
      "properties": {
        "backupManagementType": "AzureIaasVM",
        "instantRPDetails": {},
        "instantRpRetentionRangeInDays": 2,
        "protectedItemsCount": 0,
        "retentionPolicy": {
          "dailySchedule": {
            "retentionDuration": {
              "count": 30,
              "durationType": "Days"
            },
            "retentionTimes": [
              "2023-10-26T13:30:00Z"
            ]
          },
          "retentionPolicyType": "LongTermRetentionPolicy"
        },
        "schedulePolicy": {
          "schedulePolicyType": "SimpleSchedulePolicy",
          "scheduleRunFrequency": "Daily",
          "scheduleRunTimes": [
            "2023-10-26T13:30:00Z"
          ],
          "scheduleWeeklyFrequency": 0
        },
        "timeZone": "UTC"
      },
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies"
    },
    {
      "apiVersion": "2023-04-01",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lo6nl0z7_name'))]"
      ],
      "name": "[concat(parameters('vaults_vault_lo6nl0z7_name'), '/EnhancedPolicy')]",
      "properties": {
        "backupManagementType": "AzureIaasVM",
        "instantRPDetails": {},
        "instantRpRetentionRangeInDays": 2,
        "policyType": "V2",
        "protectedItemsCount": 0,
        "retentionPolicy": {
          "dailySchedule": {
            "retentionDuration": {
              "count": 30,
              "durationType": "Days"
            },
            "retentionTimes": [
              "2023-10-26T08:00:00Z"
            ]
          },
          "retentionPolicyType": "LongTermRetentionPolicy"
        },
        "schedulePolicy": {
          "hourlySchedule": {
            "interval": 4,
            "scheduleWindowDuration": 12,
            "scheduleWindowStartTime": "2023-10-26T08:00:00Z"
          },
          "schedulePolicyType": "SimpleSchedulePolicyV2",
          "scheduleRunFrequency": "Hourly"
        },
        "timeZone": "UTC"
      },
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies"
    },
    {
      "apiVersion": "2023-04-01",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lo6nl0z7_name'))]"
      ],
      "name": "[concat(parameters('vaults_vault_lo6nl0z7_name'), '/HourlyLogBackup')]",
      "properties": {
        "backupManagementType": "AzureWorkload",
        "protectedItemsCount": 0,
        "settings": {
          "isCompression": false,
          "issqlcompression": false,
          "timeZone": "UTC"
        },
        "subProtectionPolicy": [
          {
            "policyType": "Full",
            "retentionPolicy": {
              "dailySchedule": {
                "retentionDuration": {
                  "count": 30,
                  "durationType": "Days"
                },
                "retentionTimes": [
                  "2023-10-26T13:30:00Z"
                ]
              },
              "retentionPolicyType": "LongTermRetentionPolicy"
            },
            "schedulePolicy": {
              "schedulePolicyType": "SimpleSchedulePolicy",
              "scheduleRunFrequency": "Daily",
              "scheduleRunTimes": [
                "2023-10-26T13:30:00Z"
              ],
              "scheduleWeeklyFrequency": 0
            }
          },
          {
            "policyType": "Log",
            "retentionPolicy": {
              "retentionDuration": {
                "count": 30,
                "durationType": "Days"
              },
              "retentionPolicyType": "SimpleRetentionPolicy"
            },
            "schedulePolicy": {
              "scheduleFrequencyInMins": 60,
              "schedulePolicyType": "LogSchedulePolicy"
            }
          }
        ],
        "workLoadType": "SQLDataBase"
      },
      "type": "Microsoft.RecoveryServices/vaults/backupPolicies"
    },
    {
      "apiVersion": "2023-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lo6nl0z7_name'))]"
      ],
      "name": "[concat(parameters('vaults_vault_lo6nl0z7_name'), '/defaultAlertSetting')]",
      "properties": {
        "customEmailAddresses": [],
        "sendToOwners": "DoNotSend"
      },
      "type": "Microsoft.RecoveryServices/vaults/replicationAlertSettings"
    },
    {
      "apiVersion": "2023-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaults_vault_lo6nl0z7_name'))]"
      ],
      "name": "[concat(parameters('vaults_vault_lo6nl0z7_name'), '/default')]",
      "properties": {},
      "type": "Microsoft.RecoveryServices/vaults/replicationVaultSettings"
    },
    {
      "apiVersion": "2023-08-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_LoveofSports_name'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries/scopeMaps', parameters('registries_LoveofSports_name'), '_repositories_admin')]"
      ],
      "name": "[concat(parameters('registries_LoveofSports_name'), '/ClusterAuth')]",
      "properties": {
        "credentials": {
          "passwords": [
            {
              "creationTime": "2023-11-23T21:33:51.5573723+00:00",
              "name": "password1"
            }
          ]
        },
        "scopeMapId": "[resourceId('Microsoft.ContainerRegistry/registries/scopeMaps', parameters('registries_LoveofSports_name'), '_repositories_admin')]",
        "status": "enabled"
      },
      "type": "Microsoft.ContainerRegistry/registries/tokens"
    },
    {
      "apiVersion": "2023-08-02-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_DevCluster_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'default')]"
      ],
      "name": "[concat(parameters('managedClusters_DevCluster_name'), '/agentpool')]",
      "properties": {
        "count": 4,
        "enableAutoScaling": true,
        "enableFIPS": false,
        "enableNodePublicIP": false,
        "kubeletDiskType": "OS",
        "maxCount": 40,
        "maxPods": 110,
        "minCount": 2,
        "mode": "System",
        "orchestratorVersion": "1.27.3",
        "osDiskSizeGB": 128,
        "osDiskType": "Managed",
        "osSKU": "Ubuntu",
        "osType": "Linux",
        "powerState": {
          "code": "Running"
        },
        "securityProfile": {
          "sshAccess": "LocalUser"
        },
        "tags": {
          "ENV": "Development"
        },
        "type": "VirtualMachineScaleSets",
        "upgradeSettings": {},
        "vmSize": "Standard_DS2_v2",
        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'default')]"
      },
      "type": "Microsoft.ContainerService/managedClusters/agentPools"
    },
    {
      "apiVersion": "2023-08-02-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_DevCluster_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'default')]"
      ],
      "name": "[concat(parameters('managedClusters_DevCluster_name'), '/ephemeral')]",
      "properties": {
        "count": 4,
        "enableAutoScaling": true,
        "enableCustomCATrust": false,
        "enableEncryptionAtHost": false,
        "enableFIPS": false,
        "enableNodePublicIP": false,
        "enableUltraSSD": false,
        "kubeletDiskType": "OS",
        "maxCount": 40,
        "maxPods": 110,
        "minCount": 2,
        "mode": "User",
        "networkProfile": {},
        "orchestratorVersion": "1.27.3",
        "osDiskSizeGB": 128,
        "osDiskType": "Ephemeral",
        "osSKU": "Ubuntu",
        "osType": "Linux",
        "powerState": {
          "code": "Running"
        },
        "scaleDownMode": "Delete",
        "securityProfile": {
          "sshAccess": "LocalUser"
        },
        "type": "VirtualMachineScaleSets",
        "upgradeSettings": {},
        "vmSize": "Standard_DS3_v2",
        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'default')]",
        "workloadRuntime": "OCIContainer"
      },
      "type": "Microsoft.ContainerService/managedClusters/agentPools"
    },
    {
      "apiVersion": "2023-08-02-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_DevCluster_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'default')]"
      ],
      "name": "[concat(parameters('managedClusters_DevCluster_name'), '/nudepool2')]",
      "properties": {
        "availabilityZones": [
          "2"
        ],
        "count": 2,
        "enableAutoScaling": true,
        "enableFIPS": false,
        "enableNodePublicIP": false,
        "kubeletDiskType": "OS",
        "maxCount": 40,
        "maxPods": 110,
        "minCount": 2,
        "mode": "System",
        "orchestratorVersion": "1.27.3",
        "osDiskSizeGB": 128,
        "osDiskType": "Managed",
        "osSKU": "Ubuntu",
        "osType": "Linux",
        "powerState": {
          "code": "Running"
        },
        "scaleDownMode": "Delete",
        "securityProfile": {
          "sshAccess": "LocalUser"
        },
        "tags": {
          "ENV": "Development"
        },
        "type": "VirtualMachineScaleSets",
        "upgradeSettings": {},
        "vmSize": "Standard_D2as_v4",
        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_LoveofSports_Dev_vnet_name'), 'default')]"
      },
      "type": "Microsoft.ContainerService/managedClusters/agentPools"
    },
    {
      "apiVersion": "2018-03-01",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_DevCluster_name'))]",
        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_RecommendedAlertRules_AG_1_name'))]"
      ],
      "location": "Global",
      "name": "[parameters('metricAlerts_CPU_Usage_Percentage___DevCluster_name')]",
      "properties": {
        "actions": [
          {
            "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_RecommendedAlertRules_AG_1_name'))]",
            "webHookProperties": {}
          }
        ],
        "criteria": {
          "allOf": [
            {
              "criterionType": "StaticThresholdCriterion",
              "metricName": "node_cpu_usage_percentage",
              "metricNamespace": "Microsoft.ContainerService/managedClusters",
              "name": "Metric1",
              "operator": "GreaterThan",
              "threshold": 95.0,
              "timeAggregation": "Average"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
        },
        "enabled": true,
        "evaluationFrequency": "PT5M",
        "scopes": [
          "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_DevCluster_name'))]"
        ],
        "severity": 3,
        "targetResourceType": "Microsoft.ContainerService/managedClusters",
        "windowSize": "PT5M"
      },
      "type": "microsoft.insights/metricAlerts"
    },
    {
      "apiVersion": "2018-03-01",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_DevCluster_name'))]",
        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_RecommendedAlertRules_AG_1_name'))]"
      ],
      "location": "Global",
      "name": "[parameters('metricAlerts_Memory_Working_Set_Percentage___DevCluster_name')]",
      "properties": {
        "actions": [
          {
            "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_RecommendedAlertRules_AG_1_name'))]",
            "webHookProperties": {}
          }
        ],
        "criteria": {
          "allOf": [
            {
              "criterionType": "StaticThresholdCriterion",
              "metricName": "node_memory_working_set_percentage",
              "metricNamespace": "Microsoft.ContainerService/managedClusters",
              "name": "Metric1",
              "operator": "GreaterThan",
              "threshold": 100.0,
              "timeAggregation": "Average"
            }
          ],
          "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
        },
        "enabled": true,
        "evaluationFrequency": "PT5M",
        "scopes": [
          "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_DevCluster_name'))]"
        ],
        "severity": 3,
        "targetResourceType": "Microsoft.ContainerService/managedClusters",
        "windowSize": "PT5M"
      },
      "type": "microsoft.insights/metricAlerts"
    }
  ],
  "variables": {}
}
